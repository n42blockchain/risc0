[package]
name = "risc0-circuit-bigint"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }

[[bench]]
name = "bigint"
harness = false

[[bin]]
name = "make_control_ids"
required-features = ["make_control_ids"]

[dependencies]
anyhow = "1.0"
bytemuck = "1.16.1"
hex = "0.4"
num-bigint = { version = "0.4", default-features = false }
num-integer = "0.1"
num-traits = "0.2"
paste = "1.0"
risc0-binfmt = { workspace = true }
risc0-circuit-recursion = { workspace = true, default-features = false }
risc0-core = { workspace = true }
risc0-zkp = { workspace = true, features = ["default"] }
risc0-zkvm = { workspace = true, features = [
  "std",
  "unstable",
], default-features = false }
risc0-zkvm-platform = { workspace = true, features = ["unstable"] }
tracing = "0.1.40"
zip = { version = "2.0", default-features = false, features = ["deflate"] }

[dev-dependencies]
criterion = "0.5"
num-bigint = { version = "0.4", default-features = false, features = ["serde"] }
pretty_assertions = "1.4"
test-log = { version = "0.2", features = ["trace"] }

[target.'cfg(not(target_os = "zkvm"))'.dev-dependencies]
risc0-circuit-bigint-test-methods = { path = "methods" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
default = ["prove"]
# Omits control_ids.rs, and instead uses all zeros for control ids.
# This is needed for the 'make_control_ids' binary to compile if any
# new bigint programs are added.
make_control_ids = []
# Enables ZKR registration to actually generate proofs.
prove = ["risc0-zkvm/prove", "risc0-circuit-recursion/prove"]
