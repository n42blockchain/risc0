// Copyright 2025 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "steps.h"
#include "witgen.h"

namespace risc0::circuit::rv32im_v2::cpu {
NondetRegStruct back_NondetReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout1, _super), distance0)};
return x2;
}
NondetRegStruct exec_NondetReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
STORE(LAYOUT_LOOKUP(layout1, _super), arg0);
NondetRegStruct x2 = NondetRegStruct{
  ._super = LOAD(LAYOUT_LOOKUP(layout1, _super), 0)};
return x2;
}
NondetExtRegStruct back_NondetExtReg(ExecContext& ctx,Index distance0, BoundLayout<NondetExtRegLayout> layout1)   {
NondetExtRegStruct x2 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout1, _super), distance0)};
return x2;
}
NondetExtRegStruct exec_NondetExtReg(ExecContext& ctx,ExtVal arg0, BoundLayout<NondetExtRegLayout> layout1)   {
STORE_EXT(LAYOUT_LOOKUP(layout1, _super), arg0);
NondetExtRegStruct x2 = NondetExtRegStruct{
  ._super = LOAD_EXT(LAYOUT_LOOKUP(layout1, _super), 0)};
return x2;
}
NondetRegStruct back_Reg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// Reg(<preamble>:4)
NondetRegStruct x2 = back_NondetReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// Reg(<preamble>:5)
EQZ((arg0 - x2._super), "Reg(<preamble>:5)");
return x2;
}
NondetExtRegStruct back_ExtReg(ExecContext& ctx,Index distance0, BoundLayout<NondetExtRegLayout> layout1)   {
// ExtReg(<preamble>:10)
NondetExtRegStruct x2 = back_NondetExtReg(ctx,distance0, layout1);
return x2;
}
NondetExtRegStruct exec_ExtReg(ExecContext& ctx,ExtVal arg0, BoundLayout<NondetExtRegLayout> layout1)   {
NondetExtRegStruct x2 = exec_NondetExtReg(ctx,arg0, layout1);
// ExtReg(<preamble>:11)
EQZ((x2._super - arg0), "loc(callsite(unknown at  ExtReg ( <preamble> :11:11)))");
return x2;
}
NondetRegStruct back_NondetBitReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:11)
NondetRegStruct x2 = back_NondetReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_NondetBitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:6)
// NondetBitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:12)
Val x3 = (x2._super * (Val(1) - x2._super));
EQZ(x3, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at  NondetBitReg ( zirgen/circuit/rv32im/v2/dsl/bits.zir :12:13)))");
return x2;
}
NondetRegStruct back_BitReg(ExecContext& ctx,Index distance0, BoundLayout<NondetRegLayout> layout1)   {
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:17)
NondetRegStruct x2 = back_NondetBitReg(ctx,distance0, layout1);
return x2;
}
NondetRegStruct exec_BitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
NondetRegStruct x2 = exec_NondetBitReg(ctx,arg0, layout1);
// BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:18)
EQZ((arg0 - x2._super), "BitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:18)");
return x2;
}
NondetRegStruct exec_NondetTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetRegLayout> layout1)   {
// NondetTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:53)
NondetRegStruct x2 = exec_NondetReg(ctx,arg0, layout1);
// AssertTwit(zirgen/circuit/rv32im/v2/dsl/bits.zir:35)
// NondetTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:54)
Val x3 = (x2._super * (Val(1) - x2._super));
Val x4 = ((x3 * (Val(2) - x2._super)) * (Val(3) - x2._super));
EQZ(x4, "loc(callsite( AssertTwit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :35:44) at  NondetTwitReg ( zirgen/circuit/rv32im/v2/dsl/bits.zir :54:14)))");
return x2;
}
NondetFakeTwitRegStruct exec_NondetFakeTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetFakeTwitRegLayout> layout1)   {
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:60)
NondetRegStruct x2 = exec_NondetBitReg(ctx,bitAnd(arg0, Val(1)), LAYOUT_LOOKUP(layout1, reg0));
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:61)
NondetRegStruct x3 = exec_NondetBitReg(ctx,(bitAnd(arg0, Val(2)) * Val(1006632961)), LAYOUT_LOOKUP(layout1, reg1));
// NondetFakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:62)
Val x4 = ((x3._super * Val(2)) + x2._super);
return NondetFakeTwitRegStruct{
  ._super = x4};
}
FakeTwitRegStruct exec_FakeTwitReg(ExecContext& ctx,Val arg0, BoundLayout<NondetFakeTwitRegLayout> layout1)   {
// FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:72)
NondetFakeTwitRegStruct x2 = exec_NondetFakeTwitReg(ctx,arg0, layout1);
// FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:73)
EQZ((arg0 - x2._super), "FakeTwitReg(zirgen/circuit/rv32im/v2/dsl/bits.zir:73)");
return FakeTwitRegStruct{
};
}
NondetRegStruct exec_IsZero(ExecContext& ctx,Val arg0, BoundLayout<IsZeroLayout> layout1)   {
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:8)
NondetRegStruct x2 = exec_NondetReg(ctx,isz(arg0), LAYOUT_LOOKUP(layout1, _super));
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:11)
NondetRegStruct x3 = exec_NondetReg(ctx,inv_0(arg0), LAYOUT_LOOKUP(layout1, inv));
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:6)
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:14)
Val x4 = (Val(1) - x2._super);
EQZ((x2._super * x4), "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at  IsZero ( zirgen/circuit/rv32im/v2/dsl/is_zero.zir :14:13)))");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:16)
EQZ(((arg0 * x3._super) - x4), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:16)");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:18)
EQZ((x2._super * arg0), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:18)");
// IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:20)
EQZ((x2._super * x3._super), "IsZero(zirgen/circuit/rv32im/v2/dsl/is_zero.zir:20)");
return x2;
}
ArgU8Struct exec_ArgU8(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<ArgU8Layout> layout2)   {
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:8)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:9)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, val));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// ArgU8(zirgen/circuit/rv32im/v2/dsl/lookups.zir:10)
INVOKE_EXTERN(ctx,lookupDelta, Val(8), x4._super, x3._super);
return ArgU8Struct{
  .count = x3,   .val = x4};
}
NondetRegStruct exec_NondetU8Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU8RegLayout> layout1)   {
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:15)
ArgU8Struct x2 = exec_ArgU8(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:16)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "NondetU8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:16)");
return x2.val;
}
NondetRegStruct exec_U8Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU8RegLayout> layout1)   {
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:22)
NondetRegStruct x2 = exec_NondetU8Reg(ctx,arg0, layout1);
// U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:23)
EQZ((x2._super - arg0), "U8Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:23)");
return x2;
}
ArgU16Struct exec_ArgU16(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<ArgU16Layout> layout2)   {
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:28)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:29)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, val));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// ArgU16(zirgen/circuit/rv32im/v2/dsl/lookups.zir:30)
INVOKE_EXTERN(ctx,lookupDelta, Val(16), x4._super, x3._super);
return ArgU16Struct{
  .count = x3,   .val = x4};
}
NondetU16RegStruct exec_NondetU16Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU16RegLayout> layout1)   {
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:35)
ArgU16Struct x2 = exec_ArgU16(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "NondetU16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:36)");
return NondetU16RegStruct{
  ._super = x2.val};
}
NondetU16RegStruct exec_U16Reg(ExecContext& ctx,Val arg0, BoundLayout<NondetU16RegLayout> layout1)   {
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:42)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,arg0, layout1);
// U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:43)
Val x3 = (x2._super._super - arg0);
EQZ(x3, "U16Reg(zirgen/circuit/rv32im/v2/dsl/lookups.zir:43)");
return x2;
}
ToBits_5_Struct exec_ToBits_5_(ExecContext& ctx,Val arg0, BoundLayout<ToBits_5_Layout> layout1)   {
// ToBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:22)
NondetRegStruct5Array x2 = map(Val5Array{Val(0), Val(1), Val(2), Val(3), Val(4)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val5Array::value_type x3, BoundLayout<NondetRegLayout5LayoutArray::value_type> x4) {
// Div(<preamble>:16)
Val x5 = inv_0(Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]);
// Div(<preamble>:17)
EQZ(((x5 * Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]) - Val(1)), "loc(callsite( Div ( <preamble> :17:22) at  ToBits ( zirgen/circuit/rv32im/v2/dsl/po2.zir :22:43)))");
NondetRegStruct x6 = exec_NondetBitReg(ctx,(x5 * bitAnd(arg0, Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)])), x4);
return x6;

}));
return ToBits_5_Struct{
  ._super = x2};
}
ValU32Struct exec_DynPo2(ExecContext& ctx,Val arg0, BoundLayout<DynPo2Layout> layout1)   {
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:35)
ToBits_5_Struct x2 = exec_ToBits_5_(ctx,arg0, LAYOUT_LOOKUP(layout1, low5));
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:26)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:36)
Val x3 = (x2._super[1]._super * Val(2));
Val x4 = (x2._super[2]._super * Val(4));
Val x5 = (x2._super[3]._super * Val(8));
Val x6 = (x2._super[4]._super * Val(16));
Val x7 = (x2._super[0]._super + x3);
Val x8 = (((x7 + x4) + x5) + x6);
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:37)
NondetU16RegStruct x9 = exec_NondetU16Reg(ctx,((arg0 - x8) * Val(1950351361)), LAYOUT_LOOKUP(layout1, checkU16));
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:38)
Val x10_0 = (x9._super._super * Val(32));
EQZ(((x10_0 + x8) - arg0), "DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:38)");
// CondMul(zirgen/circuit/rv32im/v2/dsl/po2.zir:30)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:39)
Val x11_0 = (x2._super[0]._super * Val(2));
Val x12_0 = (Val(1) - x2._super[0]._super);
Val x13_0 = (x11_0 + x12_0);
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:40)
Val x14_0 = (x2._super[1]._super * x13_0);
Val x15_0 = (Val(1) - x2._super[1]._super);
Val x16 = ((x14_0 * Val(4)) + (x15_0 * x13_0));
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:41)
Val x17 = (x2._super[2]._super * x16);
Val x18 = (Val(1) - x2._super[2]._super);
NondetRegStruct x19 = exec_Reg(ctx,((x17 * Val(16)) + (x18 * x16)), LAYOUT_LOOKUP(layout1, b3));
// CondMul(zirgen/circuit/rv32im/v2/dsl/po2.zir:30)
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:42)
Val x20 = (x2._super[3]._super * x19._super);
Val x21 = (Val(1) - x2._super[3]._super);
Val x22 = ((x20 * Val(256)) + (x21 * x19._super));
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:43)
Val x23 = (Val(1) - x2._super[4]._super);
NondetRegStruct x24 = exec_Reg(ctx,(x23 * x22), LAYOUT_LOOKUP(layout1, low));
// DynPo2(zirgen/circuit/rv32im/v2/dsl/po2.zir:44)
Val x25 = (x2._super[4]._super * x22);
NondetRegStruct x26 = exec_Reg(ctx,x25, LAYOUT_LOOKUP(layout1, high));
return ValU32Struct{
  .low = x24._super,   .high = x26._super};
}
NormalizeU32Struct exec_NormalizeU32(ExecContext& ctx,DenormedValU32Struct arg0, BoundLayout<NormalizeU32Layout> layout1)   {
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:44)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0.low, Val(65535)), LAYOUT_LOOKUP(layout1, low16));
// Div(<preamble>:19)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:45)
Val x3 = (bitAnd(arg0.low, Val(65536)) * Val(2013235201));
NondetRegStruct x4 = exec_NondetBitReg(ctx,x3, LAYOUT_LOOKUP(layout1, lowCarry));
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:46)
Val x5 = ((x4._super * Val(65536)) + x2._super._super);
EQZ((arg0.low - x5), "NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:46)");
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:48)
Val x6 = (arg0.high + x4._super);
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:50)
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,bitAnd(x6, Val(65535)), LAYOUT_LOOKUP(layout1, high16));
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:51)
NondetRegStruct x8 = exec_NondetBitReg(ctx,(bitAnd(x6, Val(65536)) * Val(2013235201)), LAYOUT_LOOKUP(layout1, highCarry));
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:52)
Val x9 = ((x8._super * Val(65536)) + x7._super._super);
EQZ((x6 - x9), "NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:52)");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// NormalizeU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:56)
ValU32Struct x10_0 = ValU32Struct{
  .low = x2._super._super,   .high = x7._super._super};
return NormalizeU32Struct{
  ._super = x10_0,   .carry = x8};
}
AddrDecomposeStruct exec_AddrDecompose(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<AddrDecomposeLayout> layout2)   {
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:63)
NondetRegStruct x3 = exec_NondetTwitReg(ctx,bitAnd(arg0.low, Val(3)), LAYOUT_LOOKUP(layout2, low2));
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:65)
Val x4 = ((Val(1) - arg1_0) * Val(49151));
Val x5 = (((arg1_0 * Val(65535)) + x4) - arg0.high);
NondetU16RegStruct x6 = exec_U16Reg(ctx,x5, LAYOUT_LOOKUP(layout2, upperDiff));
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:67)
NondetRegStruct x7 = exec_IsZero(ctx,arg0.high, LAYOUT_LOOKUP(layout2, _0));
EQZ(x7._super, "AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:67)");
// Div(<preamble>:19)
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:69)
Val x8 = ((arg0.low - x3._super) * Val(1509949441));
NondetU16RegStruct x9 = exec_NondetU16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, med14));
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:71)
Val x10_0 = (x9._super._super * Val(4));
EQZ(((x10_0 + x3._super) - arg0.low), "AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:71)");
// AddrDecompose(zirgen/circuit/rv32im/v2/dsl/u32.zir:73)
Val x11_0 = ((arg0.high * Val(16384)) + x9._super._super);
return AddrDecomposeStruct{
  ._super = x11_0,   .low2 = x3};
}
AddrDecomposeBitsStruct exec_AddrDecomposeBits(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<AddrDecomposeBitsLayout> layout2)   {
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:81)
NondetRegStruct x3 = exec_NondetBitReg(ctx,bitAnd(arg0.low, Val(1)), LAYOUT_LOOKUP(layout2, low0));
// Div(<preamble>:19)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:82)
Val x4 = (bitAnd(arg0.low, Val(2)) * Val(1006632961));
NondetRegStruct x5 = exec_NondetBitReg(ctx,x4, LAYOUT_LOOKUP(layout2, low1));
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:83)
Val x6 = ((x5._super * Val(2)) + x3._super);
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:85)
Val x7 = ((Val(1) - arg1_0) * Val(49151));
Val x8 = (((arg1_0 * Val(65535)) + x7) - arg0.high);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, upperDiff));
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:87)
NondetRegStruct x10_0 = exec_IsZero(ctx,arg0.high, LAYOUT_LOOKUP(layout2, _0));
EQZ(x10_0._super, "AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:87)");
// Div(<preamble>:19)
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:89)
Val x11_0 = ((arg0.low - x6) * Val(1509949441));
NondetU16RegStruct x12_0 = exec_NondetU16Reg(ctx,x11_0, LAYOUT_LOOKUP(layout2, med14));
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:91)
Val x13_0 = (x12_0._super._super * Val(4));
EQZ(((x13_0 + x6) - arg0.low), "AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:91)");
// AddrDecomposeBits(zirgen/circuit/rv32im/v2/dsl/u32.zir:93)
Val x14_0 = ((arg0.high * Val(16384)) + x12_0._super._super);
return AddrDecomposeBitsStruct{
  ._super = x14_0,   .low0 = x3,   .low1 = x5,   .low2 = x6,   .addr = x14_0};
}
CmpEqualStruct exec_CmpEqual(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpEqualLayout> layout2)   {
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:112)
NondetRegStruct x3 = exec_IsZero(ctx,(arg0.low - arg1_0.low), LAYOUT_LOOKUP(layout2, lowSame));
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:113)
NondetRegStruct x4 = exec_IsZero(ctx,(arg0.high - arg1_0.high), LAYOUT_LOOKUP(layout2, highSame));
// CmpEqual(zirgen/circuit/rv32im/v2/dsl/u32.zir:114)
NondetRegStruct x5 = exec_Reg(ctx,(x3._super * x4._super), LAYOUT_LOOKUP(layout2, isEqual));
return CmpEqualStruct{
  .isEqual = x5};
}
CmpLessThanUnsignedStruct exec_CmpLessThanUnsigned(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpLessThanUnsignedLayout> layout2)   {
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:119)
Val x3 = ((arg0.low + Val(65536)) - arg1_0.low);
Val x4 = ((arg0.high + Val(65535)) - arg1_0.high);
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x3,   .high = x4}, LAYOUT_LOOKUP(layout2, diff));
// CmpLessThanUnsigned(zirgen/circuit/rv32im/v2/dsl/u32.zir:120)
Val x6 = (Val(1) - x5.carry._super);
return CmpLessThanUnsignedStruct{
  .isLessThan = x6};
}
NondetRegStruct exec_GetSignU32(ExecContext& ctx,ValU32Struct arg0, BoundLayout<GetSignU32Layout> layout1)   {
// Div(<preamble>:19)
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:125)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _super));
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:126)
Val x4 = (bitAnd(arg0.high, Val(32767)) * Val(2));
NondetU16RegStruct x5 = exec_NondetU16Reg(ctx,x4, LAYOUT_LOOKUP(layout1, restTimesTwo));
// Div(<preamble>:19)
// GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:127)
Val x6 = (x5._super._super * Val(1006632961));
Val x7 = ((x3._super * Val(32768)) + x6);
EQZ((arg0.high - x7), "GetSignU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:127)");
return x3;
}
CmpLessThanStruct exec_CmpLessThan(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<CmpLessThanLayout> layout2)   {
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:133)
Val x3 = ((arg0.low + Val(65536)) - arg1_0.low);
Val x4 = ((arg0.high + Val(65535)) - arg1_0.high);
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x3,   .high = x4}, LAYOUT_LOOKUP(layout2, diff));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:134)
NondetRegStruct x6 = exec_GetSignU32(ctx,arg0, LAYOUT_LOOKUP(layout2, s1));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:135)
NondetRegStruct x7 = exec_GetSignU32(ctx,arg1_0, LAYOUT_LOOKUP(layout2, s2));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:136)
NondetRegStruct x8 = exec_GetSignU32(ctx,x5._super, LAYOUT_LOOKUP(layout2, s3));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:138)
Val x9 = (x6._super * (Val(1) - x7._super));
Val x10_0 = ((Val(1) - x6._super) * x7._super);
NondetRegStruct x11_0 = exec_Reg(ctx,((x9 * (Val(1) - x8._super)) + (x10_0 * x8._super)), LAYOUT_LOOKUP(layout2, overflow));
// CmpLessThan(zirgen/circuit/rv32im/v2/dsl/u32.zir:140)
Val x12_0 = ((x11_0._super * Val(2)) * x8._super);
Val x13_0 = ((x11_0._super + x8._super) - x12_0);
NondetRegStruct x14_0 = exec_Reg(ctx,x13_0, LAYOUT_LOOKUP(layout2, isLessThan));
return CmpLessThanStruct{
  .isLessThan = x14_0};
}
ToBits_16_Struct exec_ToBits_16_(ExecContext& ctx,Val arg0, BoundLayout<ToBits_16_Layout> layout1)   {
// ToBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:22)
NondetRegStruct16Array x2 = map(Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val16Array::value_type x3, BoundLayout<NondetRegLayout16LayoutArray::value_type> x4) {
// Div(<preamble>:16)
Val x5 = inv_0(Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]);
// Div(<preamble>:17)
EQZ(((x5 * Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)]) - Val(1)), "loc(callsite( Div ( <preamble> :17:22) at  ToBits ( zirgen/circuit/rv32im/v2/dsl/po2.zir :22:43)))");
NondetRegStruct x6 = exec_NondetBitReg(ctx,(x5 * bitAnd(arg0, Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)}[to_size_t(x3)])), x4);
return x6;

}));
return ToBits_16_Struct{
  ._super = x2};
}
FromBits_16_Struct exec_BitwiseAndU16(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<BitwiseAndU16Layout> layout2)   {
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:144)
ToBits_16_Struct x3 = exec_ToBits_16_(ctx,arg0, LAYOUT_LOOKUP(layout2, bitsX));
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:26)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:145)
Val x4 = (x3._super[1]._super * Val(2));
Val x5 = (x3._super[2]._super * Val(4));
Val x6 = (x3._super[3]._super * Val(8));
Val x7 = (x3._super[4]._super * Val(16));
Val x8 = (x3._super[5]._super * Val(32));
Val x9 = (x3._super[6]._super * Val(64));
Val x10_0 = (x3._super[7]._super * Val(128));
Val x11_0 = (x3._super[8]._super * Val(256));
Val x12_0 = (x3._super[9]._super * Val(512));
Val x13_0 = (x3._super[10]._super * Val(1024));
Val x14_0 = (x3._super[11]._super * Val(2048));
Val x15_0 = (x3._super[12]._super * Val(4096));
Val x16 = (x3._super[13]._super * Val(8192));
Val x17 = (x3._super[14]._super * Val(16384));
Val x18 = (x3._super[15]._super * Val(32768));
Val x19 = (x3._super[0]._super + x4);
Val x20 = (((x19 + x5) + x6) + x7);
Val x21 = (((x20 + x8) + x9) + x10_0);
Val x22 = (((x21 + x11_0) + x12_0) + x13_0);
Val x23 = (((x22 + x14_0) + x15_0) + x16);
EQZ((arg0 - ((x23 + x17) + x18)), "BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:145)");
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:146)
ToBits_16_Struct x24 = exec_ToBits_16_(ctx,arg1_0, LAYOUT_LOOKUP(layout2, bitsY));
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:26)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:147)
Val x25 = (x24._super[1]._super * Val(2));
Val x26 = (x24._super[2]._super * Val(4));
Val x27 = (x24._super[3]._super * Val(8));
Val x28 = (x24._super[4]._super * Val(16));
Val x29 = (x24._super[5]._super * Val(32));
Val x30 = (x24._super[6]._super * Val(64));
Val x31 = (x24._super[7]._super * Val(128));
Val x32 = (x24._super[8]._super * Val(256));
Val x33 = (x24._super[9]._super * Val(512));
Val x34 = (x24._super[10]._super * Val(1024));
Val x35 = (x24._super[11]._super * Val(2048));
Val x36 = (x24._super[12]._super * Val(4096));
Val x37 = (x24._super[13]._super * Val(8192));
Val x38 = (x24._super[14]._super * Val(16384));
Val x39 = (x24._super[15]._super * Val(32768));
Val x40 = (x24._super[0]._super + x25);
Val x41 = (((x40 + x26) + x27) + x28);
Val x42 = (((x41 + x29) + x30) + x31);
Val x43 = (((x42 + x32) + x33) + x34);
Val x44 = (((x43 + x35) + x36) + x37);
EQZ((arg1_0 - ((x44 + x38) + x39)), "BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:147)");
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:148)
Val x45 = (x3._super[0]._super * x24._super[0]._super);
Val x46 = (x3._super[1]._super * x24._super[1]._super);
Val x47 = (x3._super[2]._super * x24._super[2]._super);
Val x48 = (x3._super[3]._super * x24._super[3]._super);
Val x49 = (x3._super[4]._super * x24._super[4]._super);
Val x50 = (x3._super[5]._super * x24._super[5]._super);
Val x51 = (x3._super[6]._super * x24._super[6]._super);
Val x52 = (x3._super[7]._super * x24._super[7]._super);
Val x53 = (x3._super[8]._super * x24._super[8]._super);
Val x54 = (x3._super[9]._super * x24._super[9]._super);
Val x55 = (x3._super[10]._super * x24._super[10]._super);
Val x56 = (x3._super[11]._super * x24._super[11]._super);
Val x57 = (x3._super[12]._super * x24._super[12]._super);
Val x58 = (x3._super[13]._super * x24._super[13]._super);
Val x59 = (x3._super[14]._super * x24._super[14]._super);
Val x60 = (x3._super[15]._super * x24._super[15]._super);
// FromBits(zirgen/circuit/rv32im/v2/dsl/po2.zir:26)
// BitwiseAndU16(zirgen/circuit/rv32im/v2/dsl/u32.zir:149)
Val x61 = (((x45 + (x46 * Val(2))) + (x47 * Val(4))) + (x48 * Val(8)));
Val x62 = (((x61 + (x49 * Val(16))) + (x50 * Val(32))) + (x51 * Val(64)));
Val x63 = (((x62 + (x52 * Val(128))) + (x53 * Val(256))) + (x54 * Val(512)));
Val x64 = (((x63 + (x55 * Val(1024))) + (x56 * Val(2048))) + (x57 * Val(4096)));
Val x65 = (((x64 + (x58 * Val(8192))) + (x59 * Val(16384))) + (x60 * Val(32768)));
return FromBits_16_Struct{
  ._super = x65};
}
ValU32Struct exec_BitwiseAnd(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseAndLayout> layout2)   {
// BitwiseAnd(zirgen/circuit/rv32im/v2/dsl/u32.zir:155)
FromBits_16_Struct x3 = exec_BitwiseAndU16(ctx,arg0.low, arg1_0.low, LAYOUT_LOOKUP(layout2, _0));
FromBits_16_Struct x4 = exec_BitwiseAndU16(ctx,arg0.high, arg1_0.high, LAYOUT_LOOKUP(layout2, _1));
return ValU32Struct{
  .low = x3._super,   .high = x4._super};
}
ValU32Struct exec_BitwiseOr(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseOrLayout> layout2)   {
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:159)
ValU32Struct x3 = exec_BitwiseAnd(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, andXy));
// BitwiseOr(zirgen/circuit/rv32im/v2/dsl/u32.zir:160)
Val x4 = ((arg0.low + arg1_0.low) - x3.low);
Val x5 = ((arg0.high + arg1_0.high) - x3.high);
return ValU32Struct{
  .low = x4,   .high = x5};
}
ValU32Struct exec_BitwiseXor(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, BoundLayout<BitwiseXorLayout> layout2)   {
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:164)
ValU32Struct x3 = exec_BitwiseAnd(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, andXy));
// BitwiseXor(zirgen/circuit/rv32im/v2/dsl/u32.zir:165)
Val x4 = ((arg0.low + arg1_0.low) - (x3.low * Val(2)));
Val x5 = ((arg0.high + arg1_0.high) - (x3.high * Val(2)));
return ValU32Struct{
  .low = x4,   .high = x5};
}
DecoderStruct exec_Decoder(ExecContext& ctx,ValU32Struct arg0, BoundLayout<DecoderLayout> layout1)   {
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:15)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _f7_6));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:16)
Val x4 = (bitAnd(arg0.high, Val(24576)) * Val(2013020161));
NondetRegStruct x5 = exec_NondetTwitReg(ctx,x4, LAYOUT_LOOKUP(layout1, _f7_45));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:17)
Val x6 = (bitAnd(arg0.high, Val(6144)) * Val(2012282881));
NondetRegStruct x7 = exec_NondetTwitReg(ctx,x6, LAYOUT_LOOKUP(layout1, _f7_23));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:18)
Val x8 = (bitAnd(arg0.high, Val(1536)) * Val(2009333761));
NondetRegStruct x9 = exec_NondetTwitReg(ctx,x8, LAYOUT_LOOKUP(layout1, _f7_01));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:19)
Val x10_0 = (bitAnd(arg0.high, Val(384)) * Val(1997537281));
NondetRegStruct x11_0 = exec_NondetTwitReg(ctx,x10_0, LAYOUT_LOOKUP(layout1, _rs2_34));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:20)
Val x12_0 = (bitAnd(arg0.high, Val(96)) * Val(1950351361));
NondetRegStruct x13_0 = exec_NondetTwitReg(ctx,x12_0, LAYOUT_LOOKUP(layout1, _rs2_12));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:21)
Val x14_0 = (bitAnd(arg0.high, Val(16)) * Val(1887436801));
NondetRegStruct x15_0 = exec_NondetBitReg(ctx,x14_0, LAYOUT_LOOKUP(layout1, _rs2_0));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:22)
Val x16 = (bitAnd(arg0.high, Val(12)) * Val(1509949441));
NondetRegStruct x17 = exec_NondetTwitReg(ctx,x16, LAYOUT_LOOKUP(layout1, _rs1_34));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:23)
NondetRegStruct x18 = exec_NondetTwitReg(ctx,bitAnd(arg0.high, Val(3)), LAYOUT_LOOKUP(layout1, _rs1_12));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:24)
Val x19 = (bitAnd(arg0.low, Val(32768)) * Val(2013204481));
NondetRegStruct x20 = exec_NondetBitReg(ctx,x19, LAYOUT_LOOKUP(layout1, _rs1_0));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:25)
Val x21 = (bitAnd(arg0.low, Val(16384)) * Val(2013143041));
NondetRegStruct x22 = exec_NondetBitReg(ctx,x21, LAYOUT_LOOKUP(layout1, _f3_2));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:26)
Val x23 = (bitAnd(arg0.low, Val(12288)) * Val(2012774401));
NondetRegStruct x24 = exec_NondetTwitReg(ctx,x23, LAYOUT_LOOKUP(layout1, _f3_01));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:27)
Val x25 = (bitAnd(arg0.low, Val(3072)) * Val(2011299841));
NondetRegStruct x26 = exec_NondetTwitReg(ctx,x25, LAYOUT_LOOKUP(layout1, _rd_34));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:28)
Val x27 = (bitAnd(arg0.low, Val(768)) * Val(2005401601));
NondetRegStruct x28 = exec_NondetTwitReg(ctx,x27, LAYOUT_LOOKUP(layout1, _rd_12));
// Div(<preamble>:19)
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:29)
Val x29 = (bitAnd(arg0.low, Val(128)) * Val(1997537281));
NondetRegStruct x30 = exec_NondetBitReg(ctx,x29, LAYOUT_LOOKUP(layout1, _rd_0));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:34)
NondetRegStruct x31 = exec_NondetReg(ctx,bitAnd(arg0.low, Val(127)), LAYOUT_LOOKUP(layout1, opcode));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)
Val x32 = ((x3._super * Val(32768)) + (x5._super * Val(8192)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:39)
Val x33 = ((x32 + (x7._super * Val(2048))) + (x9._super * Val(512)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:41)
Val x34 = ((x33 + (x11_0._super * Val(128))) + (x13_0._super * Val(32)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:44)
Val x35 = (x17._super * Val(4));
Val x36 = (((x34 + (x15_0._super * Val(16))) + x35) + x18._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)
EQZ((arg0.high - x36), "Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:37)");
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)
Val x37 = (x20._super * Val(32768));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:47)
Val x38 = ((x37 + (x22._super * Val(16384))) + (x24._super * Val(4096)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:49)
Val x39 = ((x38 + (x26._super * Val(1024))) + (x28._super * Val(256)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)
Val x40 = (arg0.low - ((x39 + (x30._super * Val(128))) + x31._super));
EQZ(x40, "Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:46)");
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:55)
Val x41 = ((x17._super * Val(8)) + (x18._super * Val(2)));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:56)
Val x42 = (x11_0._super * Val(8));
Val x43 = (x13_0._super * Val(2));
Val x44 = ((x42 + x43) + x15_0._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:57)
Val x45 = (x26._super * Val(8));
Val x46 = (x28._super * Val(2));
Val x47 = ((x45 + x46) + x30._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:58)
Val x48 = ((x5._super * Val(16)) + (x7._super * Val(4)));
Val x49 = (x48 + x9._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:59)
Val x50 = ((x3._super * Val(64)) + x49);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:60)
Val x51 = ((x22._super * Val(4)) + x24._super);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:66)
Val x52 = (x3._super * Val(61440));
Val x53 = (x52 + (x50 * Val(32)));
Val x54 = (x3._super * Val(65535));
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:68)
Val x55 = (x49 * Val(32));
Val x56 = (((x52 + (x30._super * Val(2048))) + x55) + x45);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:71)
Val x57 = ((x37 + (x51 * Val(4096))) + (x15_0._super * Val(2048)));
Val x58 = (((x57 + x55) + x42) + x43);
// Decoder(zirgen/circuit/rv32im/v2/dsl/decode.zir:72)
Val x59 = ((x3._super * Val(65520)) + x35);
return DecoderStruct{
  .opcode = x31,   .rs1 = (x41 + x20._super),   .rs2 = x44,   .rd = x47,   .func7 = x50,   .func3 = x51,   .immI = ValU32Struct{
  .low = (x53 + x44),   .high = x54},   .immS = ValU32Struct{
  .low = (x53 + x47),   .high = x54},   .immB = ValU32Struct{
  .low = (x56 + x46),   .high = x54},   .immU = ValU32Struct{
  .low = x38,   .high = arg0.high},   .immJ = ValU32Struct{
  .low = x58,   .high = (x59 + x18._super)}};
}
MemoryArgStruct exec_MemoryArg(ExecContext& ctx,Val arg0, Val arg1_0, Val arg2_0, ValU32Struct arg3, BoundLayout<MemoryArgLayout> layout4)   {
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:25)
NondetRegStruct x5 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout4, count));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:26)
NondetRegStruct x6 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout4, addr));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:27)
NondetRegStruct x7 = exec_NondetReg(ctx,arg2_0, LAYOUT_LOOKUP(layout4, cycle));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:28)
NondetRegStruct x8 = exec_NondetReg(ctx,arg3.low, LAYOUT_LOOKUP(layout4, dataLow));
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:29)
NondetRegStruct x9 = exec_NondetReg(ctx,arg3.high, LAYOUT_LOOKUP(layout4, dataHigh));
// MemoryDelta(zirgen/circuit/rv32im/v2/dsl/mem.zir:21)
// MemoryArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:30)
INVOKE_EXTERN(ctx,memoryDelta, x6._super, x7._super, x8._super, x9._super, x5._super);
return MemoryArgStruct{
  .count = x5,   .addr = x6,   .cycle = x7,   .dataLow = x8,   .dataHigh = x9};
}
CycleArgStruct exec_CycleArg(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<CycleArgLayout> layout2)   {
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:54)
NondetRegStruct x3 = exec_NondetReg(ctx,arg0, LAYOUT_LOOKUP(layout2, count));
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:55)
NondetRegStruct x4 = exec_NondetReg(ctx,arg1_0, LAYOUT_LOOKUP(layout2, cycle));
// LookupDelta(zirgen/circuit/rv32im/v2/dsl/lookups.zir:4)
// CycleArg(zirgen/circuit/rv32im/v2/dsl/mem.zir:56)
INVOKE_EXTERN(ctx,lookupDelta, Val(0), x4._super, x3._super);
return CycleArgStruct{
  .count = x3,   .cycle = x4};
}
IsCycleStruct exec_IsCycle(ExecContext& ctx,Val arg0, BoundLayout<IsCycleLayout> layout1)   {
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:60)
CycleArgStruct x2 = exec_CycleArg(ctx,Val(1), arg0, LAYOUT_LOOKUP(layout1, arg));
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:61)
Val x3 = (x2.count._super - Val(1));
EQZ(x3, "IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:61)");
// IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:62)
Val x4 = (x2.cycle._super - arg0);
EQZ(x4, "IsCycle(zirgen/circuit/rv32im/v2/dsl/mem.zir:62)");
return IsCycleStruct{
};
}
MemoryIOStruct exec_MemoryIO(ExecContext& ctx,Val arg0, Val arg1_0, BoundLayout<MemoryIOLayout> layout2)   {
// GetMemoryTxn(zirgen/circuit/rv32im/v2/dsl/mem.zir:51)
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:66)
auto [x3, x4, x5, x6, x7] = INVOKE_EXTERN(ctx,getMemoryTxn, arg1_0);
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:67)
MemoryArgStruct x8 = exec_MemoryArg(ctx,Val(2013265920), arg1_0, x3, ValU32Struct{
  .low = x4,   .high = x5}, LAYOUT_LOOKUP(layout2, oldTxn));
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:68)
MemoryArgStruct x9 = exec_MemoryArg(ctx,Val(1), arg1_0, arg0, ValU32Struct{
  .low = x6,   .high = x7}, LAYOUT_LOOKUP(layout2, newTxn));
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:69)
Val x10_0 = (x8.count._super - Val(2013265920));
EQZ(x10_0, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:69)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:70)
Val x11_0 = (x9.count._super - Val(1));
EQZ(x11_0, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:70)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:71)
Val x12_0 = (x9.cycle._super - arg0);
EQZ(x12_0, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:71)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:73)
Val x13_0 = (x8.addr._super - x9.addr._super);
EQZ(x13_0, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:73)");
// MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:74)
Val x14_0 = (x9.addr._super - arg1_0);
EQZ(x14_0, "MemoryIO(zirgen/circuit/rv32im/v2/dsl/mem.zir:74)");
return MemoryIOStruct{
  .oldTxn = x8,   .newTxn = x9};
}
IsForwardStruct exec_IsForward(ExecContext& ctx,MemoryIOStruct arg0, BoundLayout<IsForwardLayout> layout1)   {
// IsForward(zirgen/circuit/rv32im/v2/dsl/mem.zir:83)
Val x2 = (arg0.newTxn.cycle._super - arg0.oldTxn.cycle._super);
IsCycleStruct x3 = exec_IsCycle(ctx,x2, LAYOUT_LOOKUP(layout1, _0));
return IsForwardStruct{
};
}
GetDataStruct exec_MemoryRead(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryReadLayout> layout2)   {
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:88)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:78)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:89)
Val x4 = (x3.oldTxn.dataLow._super - x3.newTxn.dataLow._super);
EQZ(x4, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :78:22) at  MemoryRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :89:10)))");
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:79)
Val x5 = (x3.oldTxn.dataHigh._super - x3.newTxn.dataHigh._super);
EQZ(x5, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :79:23) at  MemoryRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :89:10)))");
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:90)
IsForwardStruct x6 = exec_IsForward(ctx,x3, LAYOUT_LOOKUP(layout2, _0));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:91)
ValU32Struct x7 = ValU32Struct{
  .low = x3.newTxn.dataLow._super,   .high = x3.newTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = Val(0),   .diffHigh = Val(1)};
}
MemoryWriteStruct exec_MemoryWrite(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, ValU32Struct arg2_0, BoundLayout<MemoryWriteLayout> layout3)   {
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:96)
Val x4 = ((arg0._super * Val(2)) + Val(1));
MemoryIOStruct x5 = exec_MemoryIO(ctx,x4, arg1_0, LAYOUT_LOOKUP(layout3, io));
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:97)
IsForwardStruct x6 = exec_IsForward(ctx,x5, LAYOUT_LOOKUP(layout3, _0));
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:98)
Val x7 = (x5.newTxn.dataLow._super - arg2_0.low);
EQZ(x7, "MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:98)");
// MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:99)
Val x8 = (x5.newTxn.dataHigh._super - arg2_0.high);
EQZ(x8, "MemoryWrite(zirgen/circuit/rv32im/v2/dsl/mem.zir:99)");
return MemoryWriteStruct{
};
}
MemoryWriteUnconstrainedStruct exec_MemoryWriteUnconstrained(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryWriteUnconstrainedLayout> layout2)   {
// MemoryWriteUnconstrained(zirgen/circuit/rv32im/v2/dsl/mem.zir:104)
Val x3 = ((arg0._super * Val(2)) + Val(1));
MemoryIOStruct x4 = exec_MemoryIO(ctx,x3, arg1_0, LAYOUT_LOOKUP(layout2, io));
// MemoryWriteUnconstrained(zirgen/circuit/rv32im/v2/dsl/mem.zir:105)
IsForwardStruct x5 = exec_IsForward(ctx,x4, LAYOUT_LOOKUP(layout2, _0));
return MemoryWriteUnconstrainedStruct{
  .io = x4};
}
GetDataStruct exec_MemoryPageIn(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryPageInLayout> layout2)   {
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:111)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:78)
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:112)
Val x4 = (x3.oldTxn.dataLow._super - x3.newTxn.dataLow._super);
EQZ(x4, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :78:22) at  MemoryPageIn ( zirgen/circuit/rv32im/v2/dsl/mem.zir :112:10)))");
// IsRead(zirgen/circuit/rv32im/v2/dsl/mem.zir:79)
Val x5 = (x3.oldTxn.dataHigh._super - x3.newTxn.dataHigh._super);
EQZ(x5, "loc(callsite( IsRead ( zirgen/circuit/rv32im/v2/dsl/mem.zir :79:23) at  MemoryPageIn ( zirgen/circuit/rv32im/v2/dsl/mem.zir :112:10)))");
// MemoryPageIn(zirgen/circuit/rv32im/v2/dsl/mem.zir:113)
Val x6 = (x3.newTxn.cycle._super - x3.oldTxn.cycle._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
ValU32Struct x7 = ValU32Struct{
  .low = x3.newTxn.dataLow._super,   .high = x3.newTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = Val(0),   .diffHigh = x6};
}
GetDataStruct exec_MemoryPageOut(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<MemoryPageOutLayout> layout2)   {
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:119)
MemoryIOStruct x3 = exec_MemoryIO(ctx,(arg0._super * Val(2)), arg1_0, LAYOUT_LOOKUP(layout2, io));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:120)
IsForwardStruct x4 = exec_IsForward(ctx,x3, LAYOUT_LOOKUP(layout2, _0));
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:121)
Val x5 = (x3.newTxn.dataLow._super - x3.oldTxn.dataLow._super);
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:122)
Val x6 = (x3.newTxn.dataHigh._super - x3.oldTxn.dataHigh._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// GetData(zirgen/circuit/rv32im/v2/dsl/mem.zir:36)
// MemoryPageOut(zirgen/circuit/rv32im/v2/dsl/mem.zir:121)
ValU32Struct x7 = ValU32Struct{
  .low = x3.oldTxn.dataLow._super,   .high = x3.oldTxn.dataHigh._super};
return GetDataStruct{
  ._super = x7,   .diffLow = x5,   .diffHigh = x6};
}
OneHot_3_Struct exec_OneHot_3_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_3_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct3Array x2 = map(Val3Array{Val(0), Val(1), Val(2)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val3Array::value_type x3, BoundLayout<NondetRegLayout3LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
EQZ(((x6 + x2[2]._super) - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x7 = (x2[2]._super * Val(2));
Val x8 = (x2[1]._super + x7);
EQZ((x8 - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_3_Struct{
  ._super = x2};
}
GetDataStruct exec_MemoryGet(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, OneHot_3_Struct arg2_0, BoundLayout<MemoryGetLayout> layout3)   {
GetDataStruct x4;
if (to_size_t(arg2_0._super[0]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:128)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm0));
x4 = x5;
} else if (to_size_t(arg2_0._super[1]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:129)
GetDataStruct x6 = exec_MemoryPageIn(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm1._super));
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:127)
STORE(LAYOUT_LOOKUP(layout3, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm1._extra0.count._super), 0), "MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:127)");
x4 = x6;
} else if (to_size_t(arg2_0._super[2]._super)) {
// MemoryGet(zirgen/circuit/rv32im/v2/dsl/mem.zir:130)
GetDataStruct x7 = exec_MemoryPageOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout3, _super.arm2));
x4 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x4;
}
OneHot_8_Struct exec_OneHot_8_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_8_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct8Array x2 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val8Array::value_type x3, BoundLayout<NondetRegLayout8LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
Val x9 = ((x8 + x2[6]._super) + x2[7]._super);
EQZ((x9 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x10_0 = (x2[2]._super * Val(2));
Val x11_0 = (x2[3]._super * Val(3));
Val x12_0 = (x2[4]._super * Val(4));
Val x13_0 = (x2[5]._super * Val(5));
Val x14_0 = (x2[6]._super * Val(6));
Val x15_0 = (x2[7]._super * Val(7));
Val x16 = (x2[1]._super + x10_0);
Val x17 = (((x16 + x11_0) + x12_0) + x13_0);
Val x18 = (((x17 + x14_0) + x15_0) - arg0);
EQZ(x18, "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_8_Struct{
  ._super = x2,   .bits = x2};
}
InstInputStruct exec_InstInput(ExecContext& ctx,Val arg0, Val arg1_0, ValU32Struct arg2_0, Val arg3, Val arg4, BoundLayout<InstInputLayout> layout5)   {
// InstInput(zirgen/circuit/rv32im/v2/dsl/inst.zir:14)
OneHot_8_Struct x6 = exec_OneHot_8_(ctx,arg1_0, LAYOUT_LOOKUP(layout5, minorOnehot));
return InstInputStruct{
  .minor = arg1_0,   .pcU32 = arg2_0,   .state = arg3,   .mode = arg4,   .minorOnehot = x6};
}
DoCycleTableStruct exec_DoCycleTable(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<DoCycleTableLayout> layout1)   {
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:19)
Val x2 = (arg0._super * Val(2));
// GetDiffCount(zirgen/circuit/rv32im/v2/dsl/mem.zir:22)
Val x3 = INVOKE_EXTERN(ctx,getDiffCount, x2);
CycleArgStruct x4 = exec_CycleArg(ctx,neg_0(x3), x2, LAYOUT_LOOKUP(layout1, arg1));
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:20)
Val x5 = (x2 + Val(1));
// GetDiffCount(zirgen/circuit/rv32im/v2/dsl/mem.zir:22)
Val x6 = INVOKE_EXTERN(ctx,getDiffCount, x5);
CycleArgStruct x7 = exec_CycleArg(ctx,neg_0(x6), x5, LAYOUT_LOOKUP(layout1, arg2));
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:21)
Val x8 = (x4.cycle._super - x2);
EQZ(x8, "DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:21)");
// DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:22)
Val x9 = (x7.cycle._super - x5);
EQZ(x9, "DoCycleTable(zirgen/circuit/rv32im/v2/dsl/inst.zir:22)");
return DoCycleTableStruct{
};
}
DecoderStruct exec_DecodeInst(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<DecodeInstLayout> layout2)   {
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:27)
AddrDecomposeStruct x3 = exec_AddrDecompose(ctx,arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, pcAddr));
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:29)
EQZ(x3.low2._super, "DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:29)");
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:31)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, x3._super, LAYOUT_LOOKUP(layout2, loadInst));
// DecodeInst(zirgen/circuit/rv32im/v2/dsl/inst.zir:33)
DecoderStruct x5 = exec_Decoder(ctx,x4._super, LAYOUT_LOOKUP(layout2, _super));
return x5;
}
GetDataStruct exec_ReadReg(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, BoundLayout<ReadRegLayout> layout3)   {
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:37)
Val x4 = ((Val(1) - arg1_0.mode) * Val(1073725472));
Val x5 = ((arg1_0.mode * Val(1073725440)) + x4);
NondetRegStruct x6 = exec_Reg(ctx,(x5 + arg2_0), LAYOUT_LOOKUP(layout3, addr));
// ReadReg(zirgen/circuit/rv32im/v2/dsl/inst.zir:38)
GetDataStruct x7 = exec_MemoryRead(ctx,arg0, x6._super, LAYOUT_LOOKUP(layout3, _super));
return x7;
}
WriteRdStruct exec_WriteRd(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, DecoderStruct arg2_0, Val arg3, ValU32Struct arg4, BoundLayout<WriteRdLayout> layout5)   {
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:42)
NondetRegStruct x6 = exec_IsZero(ctx,arg2_0.rd, LAYOUT_LOOKUP(layout5, isRd0));
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:43)
Val x7 = ((Val(1) - x6._super) * arg3);
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:45)
Val x8 = ((Val(1) - arg1_0.mode) * Val(1073725472));
Val x9 = ((arg1_0.mode * Val(1073725440)) + x8);
Val x10_0 = ((Val(1) - x7) * Val(64));
NondetRegStruct x11_0 = exec_Reg(ctx,((x9 + x10_0) + (x7 * arg2_0.rd)), LAYOUT_LOOKUP(layout5, writeAddr));
// WriteRd(zirgen/circuit/rv32im/v2/dsl/inst.zir:46)
MemoryWriteStruct x12_0 = exec_MemoryWrite(ctx,arg0, x11_0._super, arg4, LAYOUT_LOOKUP(layout5, _0));
return WriteRdStruct{
};
}
ExpandU32Struct exec_ExpandU32(ExecContext& ctx,ValU32Struct arg0, Val arg1_0, BoundLayout<ExpandU32Layout> layout2)   {
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:50)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,bitAnd(arg0.low, Val(255)), LAYOUT_LOOKUP(layout2, b0));
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:51)
Val x4 = (bitAnd(arg0.low, Val(65280)) * Val(2005401601));
NondetRegStruct x5 = exec_NondetU8Reg(ctx,x4, LAYOUT_LOOKUP(layout2, b1));
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:52)
NondetRegStruct x6 = exec_NondetU8Reg(ctx,bitAnd(arg0.high, Val(255)), LAYOUT_LOOKUP(layout2, b2));
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:53)
Val x7 = (bitAnd(arg0.high, Val(65280)) * Val(2005401601));
NondetRegStruct x8 = exec_NondetU8Reg(ctx,x7, LAYOUT_LOOKUP(layout2, b3));
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:59)
Val x9 = (bitAnd(arg0.high, Val(32512)) * Val(1997537281));
NondetRegStruct x10_0 = exec_NondetU8Reg(ctx,x9, LAYOUT_LOOKUP(layout2, b3Top7times2));
// Div(<preamble>:19)
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:60)
Val x11_0 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x12_0 = exec_NondetBitReg(ctx,x11_0, LAYOUT_LOOKUP(layout2, topBit));
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:62)
Val x13_0 = (x3._super + (x5._super * Val(256)));
EQZ((arg0.low - x13_0), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:62)");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:63)
Val x14_0 = (x6._super + (x10_0._super * Val(128)));
EQZ((arg0.high - (x14_0 + (x12_0._super * Val(32768)))), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:63)");
// ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:67)
Val x15_0 = ((x10_0._super * Val(1006632961)) + (x12_0._super * Val(128)));
EQZ((x8._super - x15_0), "ExpandU32(zirgen/circuit/rv32im/v2/dsl/mult.zir:67)");
return ExpandU32Struct{
  .b0 = x3,   .b1 = x5,   .b2 = x6,   .b3 = x8,   .neg = (x12_0._super * arg1_0)};
}
SplitTotalStruct exec_SplitTotal(ExecContext& ctx,Val arg0, BoundLayout<SplitTotalLayout> layout1)   {
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:97)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, out));
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:98)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,(bitAnd(arg0, Val(16711680)) * Val(2013235201)), LAYOUT_LOOKUP(layout1, carryByte));
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:99)
NondetFakeTwitRegStruct x4 = exec_NondetFakeTwitReg(ctx,(bitAnd(arg0, Val(251658240)) * Val(2013265801)), LAYOUT_LOOKUP(layout1, carryExtra));
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:100)
Val x5 = ((x4._super * Val(16777216)) + (x3._super * Val(65536)));
EQZ((arg0 - (x5 + x2._super._super)), "SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:100)");
// SplitTotal(zirgen/circuit/rv32im/v2/dsl/mult.zir:101)
Val x6 = ((x4._super * Val(256)) + x3._super);
return SplitTotalStruct{
  .out = x2,   .carry = x6};
}
MultiplyAccumulateStruct exec_MultiplyAccumulate(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, ValU32Struct arg2_0, MultiplySettingsStruct arg3, BoundLayout<MultiplyAccumulateLayout> layout4)   {
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:115)
ExpandU32Struct x5 = exec_ExpandU32(ctx,arg0, arg3.aSigned, LAYOUT_LOOKUP(layout4, ax));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:116)
ExpandU32Struct x6 = exec_ExpandU32(ctx,arg1_0, arg3.bSigned, LAYOUT_LOOKUP(layout4, bx));
// Div(<preamble>:19)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:118)
Val x7 = (bitAnd(arg2_0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x8 = exec_NondetBitReg(ctx,x7, LAYOUT_LOOKUP(layout4, cSign));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:119)
Val x9 = (bitAnd(arg2_0.high, Val(32767)) * Val(2));
NondetU16RegStruct x10_0 = exec_NondetU16Reg(ctx,x9, LAYOUT_LOOKUP(layout4, cRestTimes2));
// Div(<preamble>:19)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)
Val x11_0 = (x10_0._super._super * Val(1006632961));
Val x12_0 = ((x8._super * Val(32768)) + x11_0);
EQZ((arg2_0.high - x12_0), "MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:120)");
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:124)
Val x13_0 = (x5.b0._super * x6.b0._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:125)
Val x14_0 = (x5.b0._super * x6.b1._super);
Val x15_0 = (x5.b1._super * x6.b0._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:124)
Val x16 = ((arg2_0.low + x13_0) + ((x14_0 + x15_0) * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:122)
SplitTotalStruct x17 = exec_SplitTotal(ctx,x16, LAYOUT_LOOKUP(layout4, s0));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:131)
Val x18 = (x5.b0._super * x6.b2._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:130)
Val x19 = ((arg2_0.high + x17.carry) + x18);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:131)
Val x20 = (x5.b1._super * x6.b1._super);
Val x21 = (x5.b2._super * x6.b0._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:132)
Val x22 = (x5.b0._super * x6.b3._super);
Val x23 = (x5.b1._super * x6.b2._super);
Val x24 = (x5.b2._super * x6.b1._super);
Val x25 = (x5.b3._super * x6.b0._super);
Val x26 = (((x22 + x23) + x24) + x25);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:131)
Val x27 = (((x19 + x20) + x21) + (x26 * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:128)
SplitTotalStruct x28 = exec_SplitTotal(ctx,x27, LAYOUT_LOOKUP(layout4, s1));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:138)
Val x29 = ((x8._super * Val(65535)) * arg3.cSigned);
Val x30 = ((x28.carry + x29) + Val(131072));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:139)
Val x31 = (x5.b1._super * Val(256));
Val x32 = (x5.b0._super + x31);
Val x33 = (x6.b1._super * Val(256));
Val x34 = (x6.b0._super + x33);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x35 = (x5.b1._super * x6.b3._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:139)
Val x36 = (((x30 - (x32 * x6.neg)) - (x34 * x5.neg)) + x35);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x37 = (x5.b2._super * x6.b2._super);
Val x38 = (x5.b3._super * x6.b1._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:141)
Val x39 = (x5.b2._super * x6.b3._super);
Val x40 = (x5.b3._super * x6.b2._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:140)
Val x41 = (((x36 + x37) + x38) + ((x39 + x40) * Val(256)));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:136)
SplitTotalStruct x42 = exec_SplitTotal(ctx,x41, LAYOUT_LOOKUP(layout4, s2));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:147)
Val x43 = ((x42.carry + x29) + Val(131070));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:148)
Val x44 = (x5.b3._super * Val(256));
Val x45 = (x5.b2._super + x44);
Val x46 = (x6.b3._super * Val(256));
Val x47 = (x6.b2._super + x46);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:149)
Val x48 = (x5.b3._super * x6.b3._super);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:148)
Val x49 = (((x43 - (x45 * x6.neg)) - (x47 * x5.neg)) + x48);
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:150)
NondetU16RegStruct x50 = exec_NondetU16Reg(ctx,bitAnd(x49, Val(65535)), LAYOUT_LOOKUP(layout4, s3Out));
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:151)
FakeTwitRegStruct x51 = exec_FakeTwitReg(ctx,((x49 - x50._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout4, s3Carry));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:152)
ValU32Struct x52 = ValU32Struct{
  .low = x17.out._super._super,   .high = x28.out._super._super};
// MultiplyAccumulate(zirgen/circuit/rv32im/v2/dsl/mult.zir:153)
ValU32Struct x53 = ValU32Struct{
  .low = x42.out._super._super,   .high = x50._super._super};
return MultiplyAccumulateStruct{
  .outLow = x52,   .outHigh = x53,   .bNeg = x6.neg};
}
DivInputStruct exec_DivInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<DivInputLayout> layout2)   {
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:8)
EQZ((arg1_0.state - Val(48)), "DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:8)");
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:11)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// DivInput(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:12)
GetDataStruct x5 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs2, LAYOUT_LOOKUP(layout2, rs2));
return DivInputStruct{
  ._super = arg1_0,   .ii = arg1_0,   .decoded = x3,   .rs1 = x4,   .rs2 = x5};
}
DivideReturnStruct exec_DoDiv(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, Val arg2_0, Val arg3, BoundLayout<DoDivLayout> layout4)   {
// Divide(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:44)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:48)
auto [x5, x6, x7, x8] = INVOKE_EXTERN(ctx,divide, arg0.low, arg0.high, arg1_0.low, arg1_0.high, (arg2_0 + (arg3 * Val(2))));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:51)
NondetRegStruct x9 = exec_NondetReg(ctx,x5, LAYOUT_LOOKUP(layout4, quotLow));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:52)
NondetRegStruct x10_0 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout4, quotHigh));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:53)
ValU32Struct x11_0 = ValU32Struct{
  .low = x9._super,   .high = x10_0._super};
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:55)
NondetU16RegStruct x12_0 = exec_NondetU16Reg(ctx,x7, LAYOUT_LOOKUP(layout4, remLow));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:56)
NondetU16RegStruct x13_0 = exec_NondetU16Reg(ctx,x8, LAYOUT_LOOKUP(layout4, remHigh));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:57)
ValU32Struct x14_0 = ValU32Struct{
  .low = x12_0._super._super,   .high = x13_0._super._super};
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:61)
MultiplyAccumulateStruct x15_0 = exec_MultiplyAccumulate(ctx,x11_0, arg1_0, x14_0, MultiplySettingsStruct{
  .aSigned = arg2_0,   .bSigned = arg2_0,   .cSigned = arg2_0}, LAYOUT_LOOKUP(layout4, mul));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:63)
Val x16 = (x15_0.outLow.low - arg0.low);
EQZ(x16, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :63:15)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x17 = (x15_0.outLow.high - arg0.high);
EQZ(x17, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :63:15)))");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:65)
Val x18 = isz(x15_0.outHigh.low);
NondetRegStruct x19 = exec_NondetBitReg(ctx,(Val(1) - x18), LAYOUT_LOOKUP(layout4, topBitType));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:66)
Val x20 = (x19._super * Val(65535));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
Val x21 = (x15_0.outHigh.low - x20);
EQZ(x21, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :66:15)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x22 = (x15_0.outHigh.high - x20);
EQZ(x22, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :66:15)))");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:68)
NondetRegStruct x23 = exec_IsZero(ctx,(arg1_0.low + arg1_0.high), LAYOUT_LOOKUP(layout4, isZero));
// Div(<preamble>:19)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:70)
Val x24 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x25 = exec_NondetBitReg(ctx,x24, LAYOUT_LOOKUP(layout4, topNum));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:72)
Val x26 = (arg0.high - (x25._super * Val(32768)));
NondetU16RegStruct x27 = exec_U16Reg(ctx,(x26 * Val(2)), LAYOUT_LOOKUP(layout4, _0));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:73)
Val x28 = (x25._super * arg2_0);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:77)
Val x29 = (x15_0.bNeg * (Val(65536) - arg1_0.low));
Val x30 = (Val(1) - x15_0.bNeg);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:78)
Val x31 = (x15_0.bNeg * (Val(65535) - arg1_0.high));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:76)
NormalizeU32Struct x32 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = (x29 + (x30 * arg1_0.low)),   .high = (x31 + (x30 * arg1_0.high))}, LAYOUT_LOOKUP(layout4, denomAbs));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:82)
Val x33 = (Val(65536) - x12_0._super._super);
Val x34 = (Val(1) - x28);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:83)
Val x35 = (Val(65535) - x13_0._super._super);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:81)
DenormedValU32Struct x36 = DenormedValU32Struct{
  .low = ((x28 * x33) + (x34 * x12_0._super._super)),   .high = ((x28 * x35) + (x34 * x13_0._super._super))};
NormalizeU32Struct x37 = exec_NormalizeU32(ctx,x36, LAYOUT_LOOKUP(layout4, remNormal));
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
Val x38 = (x12_0._super._super - arg0.low);
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
Val x39 = (x13_0._super._super - arg0.high);
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:87)
ComponentStruct x40 = ComponentStruct{
};
ComponentStruct x41;
if (to_size_t(x23._super)) {
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:106)
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:88)
EQZ(x38, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :106:10) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :88:17)))");
// AssertEqU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:107)
EQZ(x39, "loc(callsite( AssertEqU32 ( zirgen/circuit/rv32im/v2/dsl/u32.zir :107:11) at  DoDiv ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :88:17)))");
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:87)
STORE(LAYOUT_LOOKUP(layout4, _3.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout4, _3.arm0._extra0.count._super), 0), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:87)");
STORE(LAYOUT_LOOKUP(layout4, _3.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout4, _3.arm0._extra1.count._super), 0), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:87)");
x41 = x40;
} else if (to_size_t((Val(1) - x23._super))) {
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:90)
CmpLessThanUnsignedStruct x42 = exec_CmpLessThanUnsigned(ctx,x37._super, x32._super, LAYOUT_LOOKUP(layout4, _3.arm1.lt));
// DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)
EQZ((x42.isLessThan - Val(1)), "DoDiv(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:91)");
x41 = x40;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return DivideReturnStruct{
  .quot = x11_0,   .rem = x14_0};
}
ValU32Struct exec_OpSRL(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRLLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:112)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :112:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :112:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSRL ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :112:20)))");
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:113)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.rs2._super.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRL(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:114)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
NondetRegStruct exec_TopBit(ExecContext& ctx,ValU32Struct arg0, BoundLayout<TopBitLayout> layout1)   {
// Div(<preamble>:19)
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:97)
Val x2 = (bitAnd(arg0.high, Val(32768)) * Val(2013204481));
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout1, _super));
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:98)
Val x4 = (x3._super * Val(32768));
Val x5 = ((arg0.high - x4) * Val(2));
NondetU16RegStruct x6 = exec_NondetU16Reg(ctx,x5, LAYOUT_LOOKUP(layout1, rest));
// Div(<preamble>:19)
// TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:99)
Val x7 = (x6._super._super * Val(1006632961));
EQZ((arg0.high - (x7 + x4)), "TopBit(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:99)");
return x3;
}
ValU32Struct exec_OpSRA(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRALayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:118)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :118:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :118:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(32));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSRA ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :118:20)))");
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:119)
ValU32Struct x5 = exec_DynPo2(ctx,arg0.rs2._super.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:120)
NondetRegStruct x6 = exec_TopBit(ctx,arg0.rs1._super, LAYOUT_LOOKUP(layout1, flip));
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:104)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:108)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:121)
Val x7 = (Val(65535) - arg0.rs1._super.low);
Val x8 = (Val(1) - x6._super);
Val x9 = ((x6._super * x7) + (x8 * arg0.rs1._super.low));
Val x10_0 = (Val(65535) - arg0.rs1._super.high);
Val x11_0 = ((x6._super * x10_0) + (x8 * arg0.rs1._super.high));
DivideReturnStruct x12_0 = exec_DoDiv(ctx,ValU32Struct{
  .low = x9,   .high = x11_0}, x5, Val(0), Val(1), LAYOUT_LOOKUP(layout1, _0));
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:104)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:108)
// OpSRA(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:122)
Val x13_0 = (Val(65535) - x12_0.quot.low);
Val x14_0 = ((x6._super * x13_0) + (x8 * x12_0.quot.low));
Val x15_0 = (Val(65535) - x12_0.quot.high);
Val x16 = ((x6._super * x15_0) + (x8 * x12_0.quot.high));
return ValU32Struct{
  .low = x14_0,   .high = x16};
}
ValU32Struct exec_OpSRLI(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRLILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:126)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :126:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :126:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSRLI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :126:20)))");
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:127)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRLI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:128)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpSRAI(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpSRAILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:132)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :132:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :132:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(32));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSRAI ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :132:20)))");
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:133)
ValU32Struct x5 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:134)
NondetRegStruct x6 = exec_TopBit(ctx,arg0.rs1._super, LAYOUT_LOOKUP(layout1, flip));
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:104)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:108)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:135)
Val x7 = (Val(65535) - arg0.rs1._super.low);
Val x8 = (Val(1) - x6._super);
Val x9 = ((x6._super * x7) + (x8 * arg0.rs1._super.low));
Val x10_0 = (Val(65535) - arg0.rs1._super.high);
Val x11_0 = ((x6._super * x10_0) + (x8 * arg0.rs1._super.high));
DivideReturnStruct x12_0 = exec_DoDiv(ctx,ValU32Struct{
  .low = x9,   .high = x11_0}, x5, Val(0), Val(1), LAYOUT_LOOKUP(layout1, _0));
// FlipU16(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:104)
// FlipU32(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:108)
// OpSRAI(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:136)
Val x13_0 = (Val(65535) - x12_0.quot.low);
Val x14_0 = ((x6._super * x13_0) + (x8 * x12_0.quot.low));
Val x15_0 = (Val(65535) - x12_0.quot.high);
Val x16 = ((x6._super * x15_0) + (x8 * x12_0.quot.high));
return ValU32Struct{
  .low = x14_0,   .high = x16};
}
ValU32Struct exec_OpDIV(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpDIVLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpDIV(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:140)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :140:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :140:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpDIV ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :140:20)))");
// OpDIV(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:141)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, arg0.rs2._super, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpDIVU(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpDIVULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpDIVU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:145)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :145:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :145:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpDIVU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :145:20)))");
// OpDIVU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:146)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, arg0.rs2._super, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.quot;
}
ValU32Struct exec_OpREM(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpREMLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpREM(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:150)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :150:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :150:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpREM ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :150:20)))");
// OpREM(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:151)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, arg0.rs2._super, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.rem;
}
ValU32Struct exec_OpREMU(ExecContext& ctx,DivInputStruct arg0, BoundLayout<OpREMULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpREMU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:155)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :155:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :155:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpREMU ( zirgen/circuit/rv32im/v2/dsl/inst_div.zir :155:20)))");
// OpREMU(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:156)
DivideReturnStruct x5 = exec_DoDiv(ctx,arg0.rs1._super, arg0.rs2._super, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.rem;
}
InstOutputBaseStruct exec_Div0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Div0Layout> layout2)   {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:22)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:23)
DivInputStruct x4 = exec_DivInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
ValU32Struct x5;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:25)
ValU32Struct x6 = exec_OpSRL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm0._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm0._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x6;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:26)
ValU32Struct x7 = exec_OpSRA(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm1));
x5 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:27)
ValU32Struct x8 = exec_OpSRLI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm2._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:28)
ValU32Struct x9 = exec_OpSRAI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm3));
x5 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:29)
ValU32Struct x10_0 = exec_OpDIV(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm4._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x10_0;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:30)
ValU32Struct x11_0 = exec_OpDIVU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm5._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x11_0;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:31)
ValU32Struct x12_0 = exec_OpREM(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm6._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x12_0;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:32)
ValU32Struct x13_0 = exec_OpREMU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm7._super));
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), 0), "Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:24)");
x5 = x13_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:34)
WriteRdStruct x14_0 = exec_WriteRd(ctx,arg0, x4.ii, x4.decoded, Val(1), x5, LAYOUT_LOOKUP(layout2, _1));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Div0(zirgen/circuit/rv32im/v2/dsl/inst_div.zir:35)
Val x15_0 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x16 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x15_0,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
return InstOutputBaseStruct{
  .newPc = x16._super,   .newState = Val(48),   .newMode = arg1_0.mode};
}
MiscInputStruct exec_MiscInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MiscInputLayout> layout2)   {
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:7)
EQZ((arg1_0.state - Val(48)), "MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:7)");
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:9)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:10)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// MiscInput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:11)
GetDataStruct x5 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs2, LAYOUT_LOOKUP(layout2, rs2));
return MiscInputStruct{
  ._super = arg1_0,   .ii = arg1_0,   .decoded = x3,   .rs1 = x4,   .rs2 = x5};
}
InstOutputBaseStruct exec_FinalizeMisc(ExecContext& ctx,NondetRegStruct arg0, MiscInputStruct arg1_0, MiscOutputStruct arg2_0, BoundLayout<FinalizeMiscLayout> layout3)   {
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:22)
NormalizeU32Struct x4 = exec_NormalizeU32(ctx,arg2_0.toWrite, LAYOUT_LOOKUP(layout3, writeData));
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:23)
NormalizeU32Struct x5 = exec_NormalizeU32(ctx,arg2_0.newPc, LAYOUT_LOOKUP(layout3, pcNorm));
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:24)
WriteRdStruct x6 = exec_WriteRd(ctx,arg0, arg1_0.ii, arg1_0.decoded, arg2_0.doWrite, x4._super, LAYOUT_LOOKUP(layout3, _0));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// FinalizeMisc(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:25)
InstOutputBaseStruct x7 = InstOutputBaseStruct{
  .newPc = x5._super,   .newState = Val(48),   .newMode = arg1_0.ii.mode};
return x7;
}
MiscOutputStruct exec_OpXOR(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpXORLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpXOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:99)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :99:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :99:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpXOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :99:20)))");
// OpXOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:100)
ValU32Struct x4 = exec_BitwiseXor(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpOR(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpORLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:104)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :104:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :104:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpOR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :104:20)))");
// OpOR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:105)
ValU32Struct x4 = exec_BitwiseOr(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpAND(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpANDLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpAND(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:109)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :109:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :109:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpAND ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :109:20)))");
// OpAND(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:110)
ValU32Struct x4 = exec_BitwiseAnd(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpSLT(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:114)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :114:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :114:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :114:20)))");
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:115)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:116)
DenormedValU32Struct x5 = DenormedValU32Struct{
  .low = x4.isLessThan._super,   .high = Val(0)};
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x6 = (arg0._super.pcU32.low + Val(4));
return MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x5,   .newPc = DenormedValU32Struct{
  .low = x6,   .high = arg0._super.pcU32.high}};
}
MiscOutputStruct exec_OpSLTU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:120)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :120:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :120:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :120:20)))");
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:121)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
// OpSLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:122)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.isLessThan,   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
InstOutputBaseStruct exec_Misc0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc0Layout> layout2)   {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:29)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:30)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:89)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
Val x5 = (x4.decoded.opcode._super - Val(51));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:90)
Val x6 = (x4.rs1._super.low + x4.rs2._super.low);
Val x7 = (x4.rs1._super.high + x4.rs2._super.high);
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x8 = (x4._super.pcU32.low + Val(4));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
DenormedValU32Struct x9 = DenormedValU32Struct{
  .low = x8,   .high = x4._super.pcU32.high};
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:94)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
Val x10_0 = (x4.decoded.func7 - Val(32));
// SubU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:33)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:95)
Val x11_0 = (x4.rs1._super.low + Val(65536));
Val x12_0 = (x4.rs1._super.high + Val(65535));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x13_0 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = (x11_0 - x4.rs2._super.low),   .high = (x12_0 - x4.rs2._super.high)},   .newPc = x9};
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:126)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:39)
Val x14_0 = (x4.decoded.opcode._super - Val(19));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:127)
Val x15_0 = (x4.rs1._super.low + x4.decoded.immI.low);
Val x16 = (x4.rs1._super.high + x4.decoded.immI.high);
MiscOutputStruct x17;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpADD(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:89)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:32)
EQZ(x5, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :89:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :32:11))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :89:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :32:11))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(x4.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at callsite( OpADD ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :89:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :32:11))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x6,   .high = x7},   .newPc = x9};
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSUB(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:94)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:33)
EQZ(x5, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :94:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:11))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :94:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:11))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(x10_0, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at callsite( OpSUB ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :94:20) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :33:11))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = x13_0;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:34)
MiscOutputStruct x18 = exec_OpXOR(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = x18;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:35)
MiscOutputStruct x19 = exec_OpOR(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm3._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = x19;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:36)
MiscOutputStruct x20 = exec_OpAND(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm4._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = x20;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:37)
MiscOutputStruct x21 = exec_OpSLT(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm5));
x17 = x21;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:38)
MiscOutputStruct x22 = exec_OpSLTU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm6._super));
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = x22;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpADDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:126)
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:39)
EQZ(x14_0, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpADDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :126:18) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :39:12))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpADDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :126:18) at  Misc0 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :39:12))))");
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), 0), "Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:31)");
x17 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x15_0,   .high = x16},   .newPc = x9};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc0(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:41)
InstOutputBaseStruct x23 = exec_FinalizeMisc(ctx,arg0, x4, x17, LAYOUT_LOOKUP(layout2, _super));
return x23;
}
MiscOutputStruct exec_OpXORI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpXORILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:131)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpXORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :131:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpXORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :131:18)))");
// OpXORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:132)
ValU32Struct x4 = exec_BitwiseXor(ctx,arg0.rs1._super, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpORI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpORILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:136)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :136:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpORI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :136:18)))");
// OpORI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:137)
ValU32Struct x4 = exec_BitwiseOr(ctx,arg0.rs1._super, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpANDI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpANDILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpANDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:141)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpANDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :141:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpANDI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :141:18)))");
// OpANDI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:142)
ValU32Struct x4 = exec_BitwiseAnd(ctx,arg0.rs1._super, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, _0));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.low,   .high = x4.high},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpSLTI(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTILayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:146)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpSLTI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :146:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpSLTI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :146:18)))");
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:147)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1._super, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, cmp));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// OpSLTI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:148)
DenormedValU32Struct x5 = DenormedValU32Struct{
  .low = x4.isLessThan._super,   .high = Val(0)};
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
Val x6 = (arg0._super.pcU32.low + Val(4));
return MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x5,   .newPc = DenormedValU32Struct{
  .low = x6,   .high = arg0._super.pcU32.high}};
}
MiscOutputStruct exec_OpSLTIU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpSLTIULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:152)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpSLTIU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :152:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpSLTIU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :152:18)))");
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:153)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1._super, arg0.decoded.immI, LAYOUT_LOOKUP(layout1, cmp));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:77)
// OpSLTIU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:154)
Val x5 = (arg0._super.pcU32.low + Val(4));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// SimpleOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:78)
MiscOutputStruct x6 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x4.isLessThan,   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x5,   .high = arg0._super.pcU32.high}};
return x6;
}
MiscOutputStruct exec_OpBEQ(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBEQLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:158)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBEQ ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :158:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBEQ ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :158:18)))");
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:159)
CmpEqualStruct x3 = exec_CmpEqual(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBEQ(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:160)
Val x4 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x5 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x6 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x7 = (x3.isEqual._super * x4);
Val x8 = (Val(1) - x3.isEqual._super);
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x9 = (x3.isEqual._super * x5);
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x10_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = (x7 + (x8 * x6)),   .high = (x9 + (x8 * arg0._super.pcU32.high))}};
return x10_0;
}
MiscOutputStruct exec_OpBNE(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBNELayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:164)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBNE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :164:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBNE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :164:18)))");
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:165)
CmpEqualStruct x4 = exec_CmpEqual(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// OpBNE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:166)
Val x5 = (Val(1) - x4.isEqual._super);
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x8 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10_0 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x11_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10_0};
return x11_0;
}
MiscOutputStruct exec_OpBLT(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBLTLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:170)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :170:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBLT ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :170:18)))");
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:171)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBLT(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:172)
Val x5 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x6 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x7 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x8 = (x4.isLessThan._super * x5);
Val x9 = (Val(1) - x4.isLessThan._super);
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x10_0 = (x4.isLessThan._super * x6);
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x11_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = (x8 + (x9 * x7)),   .high = (x10_0 + (x9 * arg0._super.pcU32.high))}};
return x11_0;
}
InstOutputBaseStruct exec_Misc1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc1Layout> layout2)   {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:45)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:46)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
MiscOutputStruct x5;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:48)
MiscOutputStruct x6 = exec_OpXORI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm0._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm0._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x6;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:49)
MiscOutputStruct x7 = exec_OpORI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm1._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:50)
MiscOutputStruct x8 = exec_OpANDI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:51)
MiscOutputStruct x9 = exec_OpSLTI(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm3));
x5 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:52)
MiscOutputStruct x10_0 = exec_OpSLTIU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm4._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x10_0;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:53)
MiscOutputStruct x11_0 = exec_OpBEQ(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm5._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x11_0;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:54)
MiscOutputStruct x12_0 = exec_OpBNE(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm6._super));
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), 0), "Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:47)");
x5 = x12_0;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:55)
MiscOutputStruct x13_0 = exec_OpBLT(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm7));
x5 = x13_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc1(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:57)
InstOutputBaseStruct x14_0 = exec_FinalizeMisc(ctx,arg0, x4, x5, LAYOUT_LOOKUP(layout2, _super));
return x14_0;
}
MiscOutputStruct exec_OpBGE(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBGELayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:176)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBGE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :176:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(5));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBGE ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :176:18)))");
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:177)
CmpLessThanStruct x4 = exec_CmpLessThan(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// OpBGE(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:178)
Val x5 = (Val(1) - x4.isLessThan._super);
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x8 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10_0 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x11_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10_0};
return x11_0;
}
MiscOutputStruct exec_OpBLTU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBLTULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:182)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :182:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(6));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBLTU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :182:18)))");
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:183)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
// OpBLTU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:184)
Val x5 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x6 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x7 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x8 = (Val(1) - x4.isLessThan);
Val x9 = ((x4.isLessThan * x5) + (x8 * x7));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:102)
Val x10_0 = ((x4.isLessThan * x6) + (x8 * arg0._super.pcU32.high));
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x11_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = DenormedValU32Struct{
  .low = x9,   .high = x10_0}};
return x11_0;
}
MiscOutputStruct exec_OpBGEU(ExecContext& ctx,MiscInputStruct arg0, BoundLayout<OpBGEULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:188)
Val x2 = (arg0.decoded.opcode._super - Val(99));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpBGEU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :188:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(7));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpBGEU ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :188:18)))");
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:189)
CmpLessThanUnsignedStruct x4 = exec_CmpLessThanUnsigned(ctx,arg0.rs1._super, arg0.rs2._super, LAYOUT_LOOKUP(layout1, cmp));
// OpBGEU(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:190)
Val x5 = (Val(1) - x4.isLessThan);
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:83)
Val x6 = (arg0._super.pcU32.low + arg0.decoded.immB.low);
Val x7 = (arg0._super.pcU32.high + arg0.decoded.immB.high);
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:84)
Val x8 = (arg0._super.pcU32.low + Val(4));
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:101)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:82)
Val x9 = (Val(1) - x5);
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// CondDenormed(zirgen/circuit/rv32im/v2/dsl/u32.zir:100)
DenormedValU32Struct x10_0 = DenormedValU32Struct{
  .low = ((x5 * x6) + (x9 * x8)),   .high = ((x5 * x7) + (x9 * arg0._super.pcU32.high))};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
// CmpOp(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:85)
MiscOutputStruct x11_0 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x10_0};
return x11_0;
}
InstOutputBaseStruct exec_Misc2(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Misc2Layout> layout2)   {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:61)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:62)
MiscInputStruct x4 = exec_MiscInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:194)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:67)
Val x5 = (x4.decoded.opcode._super - Val(111));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:196)
Val x6 = (x4._super.pcU32.low + Val(4));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
DenormedValU32Struct x7 = DenormedValU32Struct{
  .low = x6,   .high = x4._super.pcU32.high};
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:197)
Val x8 = (x4._super.pcU32.low + x4.decoded.immJ.low);
Val x9 = (x4._super.pcU32.high + x4.decoded.immJ.high);
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:201)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:68)
Val x10_0 = (x4.decoded.opcode._super - Val(103));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:204)
Val x11_0 = (x4.rs1._super.low + x4.decoded.immI.low);
Val x12_0 = (x4.rs1._super.high + x4.decoded.immI.high);
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:208)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:69)
Val x13_0 = (x4.decoded.opcode._super - Val(55));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// Denorm(zirgen/circuit/rv32im/v2/dsl/u32.zir:38)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:209)
DenormedValU32Struct x14_0 = DenormedValU32Struct{
  .low = x4.decoded.immU.low,   .high = x4.decoded.immU.high};
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:213)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:70)
Val x15_0 = (x4.decoded.opcode._super - Val(23));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:214)
Val x16 = (x4._super.pcU32.low + x4.decoded.immU.low);
Val x17 = (x4._super.pcU32.high + x4.decoded.immU.high);
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:219)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:71)
Val x18 = (x4.decoded.opcode._super - Val(115));
// DenormedValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:20)
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:220)
DenormedValU32Struct x19 = DenormedValU32Struct{
  .low = x4._super.pcU32.low,   .high = x4._super.pcU32.high};
// MiscOutput(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:15)
MiscOutputStruct x20 = MiscOutputStruct{
  .doWrite = Val(0),   .toWrite = DenormedValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newPc = x19};
MiscOutputStruct x21;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:64)
MiscOutputStruct x22 = exec_OpBGE(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm0));
x21 = x22;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:65)
MiscOutputStruct x23 = exec_OpBLTU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm1._super));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm1._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = x23;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:66)
MiscOutputStruct x24 = exec_OpBGEU(ctx,x4, LAYOUT_LOOKUP(layout2, miscOutput.arm2._super));
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm2._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = x24;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpJAL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:194)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:67)
EQZ(x5, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :61:19) at callsite( OpJAL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :194:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :67:11))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm3._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x7,   .newPc = DenormedValU32Struct{
  .low = x8,   .high = x9}};
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpJALR(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:201)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:68)
EQZ(x10_0, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpJALR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :201:18) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :68:12))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpJALR ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :201:18) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :68:12))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm4._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x7,   .newPc = DenormedValU32Struct{
  .low = x11_0,   .high = x12_0}};
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpLUI(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:208)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:69)
EQZ(x13_0, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :61:19) at callsite( OpLUI ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :208:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :69:11))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm5._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = x14_0,   .newPc = x7};
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// VerifyOpcode(zirgen/circuit/rv32im/v2/dsl/inst.zir:61)
// OpAUIPC(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:213)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:70)
EQZ(x15_0, "loc(callsite( VerifyOpcode ( zirgen/circuit/rv32im/v2/dsl/inst.zir :61:19) at callsite( OpAUIPC ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :213:16) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :70:13))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm6._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = MiscOutputStruct{
  .doWrite = Val(1),   .toWrite = DenormedValU32Struct{
  .low = x16,   .high = x17},   .newPc = x7};
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpECALL(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:219)
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:71)
EQZ(x18, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :219:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :71:13))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
EQZ(x4.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :219:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :71:13))))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(x4.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at callsite( OpECALL ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :219:20) at  Misc2 ( zirgen/circuit/rv32im/v2/dsl/inst_misc.zir :71:13))))");
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra0.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra1.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra2.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra3.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
STORE(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, miscOutput.arm7._extra4.count._super), 0), "Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:63)");
x21 = x20;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Misc2(zirgen/circuit/rv32im/v2/dsl/inst_misc.zir:73)
InstOutputBaseStruct x25 = exec_FinalizeMisc(ctx,arg0, x4, x21, LAYOUT_LOOKUP(layout2, _super));
return x25;
}
MulInputStruct exec_MulInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MulInputLayout> layout2)   {
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:8)
EQZ((arg1_0.state - Val(48)), "MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:8)");
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:11)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// MulInput(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:12)
GetDataStruct x5 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs2, LAYOUT_LOOKUP(layout2, rs2));
return MulInputStruct{
  ._super = arg1_0,   .ii = arg1_0,   .decoded = x3,   .rs1 = x4,   .rs2 = x5};
}
DoMulStruct exec_DoMul(ExecContext& ctx,ValU32Struct arg0, ValU32Struct arg1_0, Val arg2_0, Val arg3, BoundLayout<DoMulLayout> layout4)   {
// DoMul(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:41)
MultiplyAccumulateStruct x5 = exec_MultiplyAccumulate(ctx,arg0, arg1_0, ValU32Struct{
  .low = Val(0),   .high = Val(0)}, MultiplySettingsStruct{
  .aSigned = arg2_0,   .bSigned = arg3,   .cSigned = Val(0)}, LAYOUT_LOOKUP(layout4, mul));
return DoMulStruct{
  .low = x5.outLow,   .high = x5.outHigh};
}
ValU32Struct exec_OpSLL(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpSLLLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:47)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :47:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :47:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSLL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :47:20)))");
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:48)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.rs2._super.low, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSLL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:49)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1._super, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.low;
}
ValU32Struct exec_OpSLLI(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpSLLILayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:53)
Val x2 = (arg0.decoded.opcode._super - Val(19));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :53:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :53:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
EQZ(arg0.decoded.func7, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpSLLI ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :53:20)))");
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:54)
ValU32Struct x4 = exec_DynPo2(ctx,arg0.decoded.rs2, LAYOUT_LOOKUP(layout1, shiftMul));
// OpSLLI(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:55)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1._super, x4, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.low;
}
ValU32Struct exec_OpMUL(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpMUL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:59)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :59:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :59:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x3 = (arg0.decoded.func7 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpMUL ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :59:20)))");
// OpMUL(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:60)
DoMulStruct x4 = exec_DoMul(ctx,arg0.rs1._super, arg0.rs2._super, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x4.low;
}
ValU32Struct exec_OpMULH(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHLayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpMULH(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:64)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :64:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :64:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpMULH ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :64:20)))");
// OpMULH(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:65)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1._super, arg0.rs2._super, Val(1), Val(1), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
ValU32Struct exec_OpMULHSU(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHSULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpMULHSU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:69)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(2));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpMULHSU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :69:20)))");
// OpMULHSU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:70)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1._super, arg0.rs2._super, Val(1), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
ValU32Struct exec_OpMULHU(ExecContext& ctx,MulInputStruct arg0, BoundLayout<OpMULHULayout> layout1)   {
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:70)
// OpMULHU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:74)
Val x2 = (arg0.decoded.opcode._super - Val(51));
EQZ(x2, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :70:19) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :74:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:71)
Val x3 = (arg0.decoded.func3 - Val(3));
EQZ(x3, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :71:18) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :74:20)))");
// VerifyOpcodeF3F7(zirgen/circuit/rv32im/v2/dsl/inst.zir:72)
Val x4 = (arg0.decoded.func7 - Val(1));
EQZ(x4, "loc(callsite( VerifyOpcodeF3F7 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :72:18) at  OpMULHU ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :74:20)))");
// OpMULHU(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:75)
DoMulStruct x5 = exec_DoMul(ctx,arg0.rs1._super, arg0.rs2._super, Val(0), Val(0), LAYOUT_LOOKUP(layout1, _0));
return x5.high;
}
InstOutputBaseStruct exec_Mul0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mul0Layout> layout2)   {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:22)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:23)
MulInputStruct x4 = exec_MulInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:18)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:31)
ValU32Struct x5 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x6;
if (to_size_t(x4._super.minorOnehot._super[0]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:25)
ValU32Struct x7 = exec_OpSLL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm0));
x6 = x7;
} else if (to_size_t(x4._super.minorOnehot._super[1]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:26)
ValU32Struct x8 = exec_OpSLLI(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm1));
x6 = x8;
} else if (to_size_t(x4._super.minorOnehot._super[2]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:27)
ValU32Struct x9 = exec_OpMUL(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm2._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm2._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x9;
} else if (to_size_t(x4._super.minorOnehot._super[3]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:28)
ValU32Struct x10_0 = exec_OpMULH(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm3._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm3._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x10_0;
} else if (to_size_t(x4._super.minorOnehot._super[4]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:29)
ValU32Struct x11_0 = exec_OpMULHSU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm4._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm4._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x11_0;
} else if (to_size_t(x4._super.minorOnehot._super[5]._super)) {
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:30)
ValU32Struct x12_0 = exec_OpMULHU(ctx,x4, LAYOUT_LOOKUP(layout2, mulOutput.arm5._super));
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm5._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x12_0;
} else if (to_size_t(x4._super.minorOnehot._super[6]._super)) {
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:17)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:31)
EQZ(Val(2013265920), "loc(callsite( IllegalMulOp ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :17:6) at  Mul0 ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :31:18)))");
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra1.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra2.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra3.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra4.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra5.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra6.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra7.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra8.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra9.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra10.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra11.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra12.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra13.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra14.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra15.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra16.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra17.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm6._extra18.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x5;
} else if (to_size_t(x4._super.minorOnehot._super[7]._super)) {
// IllegalMulOp(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:17)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:32)
EQZ(Val(2013265920), "loc(callsite( IllegalMulOp ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :17:6) at  Mul0 ( zirgen/circuit/rv32im/v2/dsl/inst_mul.zir :32:18)))");
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra0.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra1.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra2.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra3.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra4.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra5.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra6.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra7.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra8.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra9.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra10.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra11.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra12.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra13.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra14.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra15.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra16.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra17.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
STORE(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, mulOutput.arm7._extra18.count._super), 0), "Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:24)");
x6 = x5;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:34)
WriteRdStruct x13_0 = exec_WriteRd(ctx,arg0, x4.ii, x4.decoded, Val(1), x6, LAYOUT_LOOKUP(layout2, _1));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mul0(zirgen/circuit/rv32im/v2/dsl/inst_mul.zir:35)
Val x14_0 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x15_0 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x14_0,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
return InstOutputBaseStruct{
  .newPc = x15_0._super,   .newState = Val(48),   .newMode = arg1_0.mode};
}
MemLoadInputStruct exec_MemLoadInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MemLoadInputLayout> layout2)   {
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:8)
EQZ((arg1_0.state - Val(48)), "MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:8)");
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:10)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:11)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:12)
Val x5 = (x4._super.low + x3.immI.low);
Val x6 = (x4._super.high + x3.immI.high);
NormalizeU32Struct x7 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x5,   .high = x6}, LAYOUT_LOOKUP(layout2, addrU32));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:13)
AddrDecomposeBitsStruct x8 = exec_AddrDecomposeBits(ctx,x7._super, arg1_0.mode, LAYOUT_LOOKUP(layout2, addr));
// MemLoadInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:14)
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, x8.addr, LAYOUT_LOOKUP(layout2, data));
return MemLoadInputStruct{
  .ii = arg1_0,   .decoded = x3,   .addr = x8,   .data = x9};
}
MemStoreInputStruct exec_MemStoreInput(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<MemStoreInputLayout> layout2)   {
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:18)
EQZ((arg1_0.state - Val(48)), "MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:18)");
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:20)
DecoderStruct x3 = exec_DecodeInst(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, decoded));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:21)
GetDataStruct x4 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs1, LAYOUT_LOOKUP(layout2, rs1));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:22)
GetDataStruct x5 = exec_ReadReg(ctx,arg0, arg1_0, x3.rs2, LAYOUT_LOOKUP(layout2, rs2));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:23)
Val x6 = (x4._super.low + x3.immS.low);
Val x7 = (x4._super.high + x3.immS.high);
NormalizeU32Struct x8 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x6,   .high = x7}, LAYOUT_LOOKUP(layout2, addrU32));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:24)
AddrDecomposeBitsStruct x9 = exec_AddrDecomposeBits(ctx,x8._super, arg1_0.mode, LAYOUT_LOOKUP(layout2, addr));
// MemStoreInput(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:25)
GetDataStruct x10_0 = exec_MemoryRead(ctx,arg0, x9.addr, LAYOUT_LOOKUP(layout2, data));
return MemStoreInputStruct{
  .decoded = x3,   .rs2 = x5,   .addr = x9,   .data = x10_0};
}
MemStoreFinalizeStruct exec_MemStoreFinalize(ExecContext& ctx,NondetRegStruct arg0, MemStoreInputStruct arg1_0, ValU32Struct arg2_0, BoundLayout<MemStoreFinalizeLayout> layout3)   {
// MemStoreFinalize(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:29)
MemoryWriteStruct x4 = exec_MemoryWrite(ctx,arg0, arg1_0.addr.addr, arg2_0, LAYOUT_LOOKUP(layout3, _0));
return MemStoreFinalizeStruct{
};
}
SplitWordStruct exec_SplitWord(ExecContext& ctx,Val arg0, BoundLayout<SplitWordLayout> layout1)   {
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:33)
NondetRegStruct x2 = exec_NondetU8Reg(ctx,bitAnd(arg0, Val(255)), LAYOUT_LOOKUP(layout1, byte0));
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:34)
NondetRegStruct x3 = exec_NondetU8Reg(ctx,(bitAnd(arg0, Val(65280)) * Val(2005401601)), LAYOUT_LOOKUP(layout1, byte1));
// SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)
Val x4 = ((x3._super * Val(256)) + x2._super);
EQZ((arg0 - x4), "SplitWord(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:35)");
return SplitWordStruct{
  .byte0 = x2,   .byte1 = x3};
}
ValU32Struct exec_OpLB(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLBLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:85)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpLB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :85:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpLB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :85:18)))");
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:86)
Val x3 = (arg0.addr.low1._super * arg0.data._super.high);
Val x4 = (Val(1) - arg0.addr.low1._super);
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:87)
SplitWordStruct x5 = exec_SplitWord(ctx,(x3 + (x4 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, bytes));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:88)
Val x6 = (arg0.addr.low0._super * x5.byte1._super);
Val x7 = (Val(1) - arg0.addr.low0._super);
Val x8 = (x6 + (x7 * x5.byte0._super));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:89)
NondetRegStruct x9 = exec_NondetBitReg(ctx,(bitAnd(x8, Val(128)) * Val(1997537281)), LAYOUT_LOOKUP(layout1, highBit));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:90)
NondetRegStruct x10_0 = exec_NondetU8Reg(ctx,(bitAnd(x8, Val(127)) * Val(2)), LAYOUT_LOOKUP(layout1, low7x2));
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:91)
Val x11_0 = ((x9._super * Val(128)) + (x10_0._super * Val(1006632961)));
EQZ((x8 - x11_0), "OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:91)");
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpLB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:92)
ValU32Struct x12_0 = ValU32Struct{
  .low = (x8 + (x9._super * Val(65280))),   .high = (x9._super * Val(65535))};
return x12_0;
}
ValU32Struct exec_OpLH(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLHLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:96)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpLH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :96:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(1));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpLH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :96:18)))");
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:97)
EQZ(arg0.addr.low0._super, "OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:97)");
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:98)
Val x4 = (arg0.addr.low1._super * arg0.data._super.high);
Val x5 = (Val(1) - arg0.addr.low1._super);
Val x6 = (x4 + (x5 * arg0.data._super.low));
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:99)
NondetRegStruct x7 = exec_NondetBitReg(ctx,(bitAnd(x6, Val(32768)) * Val(2013204481)), LAYOUT_LOOKUP(layout1, highBit));
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:100)
NondetU16RegStruct x8 = exec_NondetU16Reg(ctx,(bitAnd(x6, Val(32767)) * Val(2)), LAYOUT_LOOKUP(layout1, low15x2));
// Div(<preamble>:19)
// OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:101)
Val x9 = (x8._super._super * Val(1006632961));
Val x10_0 = ((x7._super * Val(32768)) + x9);
EQZ((x6 - x10_0), "OpLH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:101)");
return ValU32Struct{
  .low = x6,   .high = (x7._super * Val(65535))};
}
ValU32Struct exec_OpLBU(ExecContext& ctx,MemLoadInputStruct arg0, BoundLayout<OpLBULayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:113)
Val x2 = (arg0.decoded.opcode._super - Val(3));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpLBU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :113:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x3 = (arg0.decoded.func3 - Val(4));
EQZ(x3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpLBU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :113:18)))");
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:114)
Val x4 = (arg0.addr.low1._super * arg0.data._super.high);
Val x5 = (Val(1) - arg0.addr.low1._super);
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:115)
SplitWordStruct x6 = exec_SplitWord(ctx,(x4 + (x5 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, bytes));
// OpLBU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:116)
Val x7 = (arg0.addr.low0._super * x6.byte1._super);
Val x8 = (Val(1) - arg0.addr.low0._super);
return ValU32Struct{
  .low = (x7 + (x8 * x6.byte0._super)),   .high = Val(0)};
}
InstOutputBaseStruct exec_Mem0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mem0Layout> layout2)   {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:49)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:50)
MemLoadInputStruct x4 = exec_MemLoadInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:106)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:54)
Val x5 = (x4.decoded.opcode._super - Val(3));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x6 = (x4.decoded.func3 - Val(2));
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:121)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:56)
Val x7 = (x4.decoded.func3 - Val(5));
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:123)
Val x8 = (x4.addr.low1._super * x4.data._super.high);
Val x9 = (Val(1) - x4.addr.low1._super);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:40)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:57)
ValU32Struct x10_0 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x11_0;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:52)
ValU32Struct x12_0 = exec_OpLB(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm0._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:53)
ValU32Struct x13_0 = exec_OpLH(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm1._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x13_0;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:106)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:54)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :106:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :54:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x6, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :106:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :54:10))))");
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:107)
EQZ(x4.addr.low0._super, "loc(callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :107:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :54:10)))");
// OpLW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:108)
EQZ(x4.addr.low1._super, "loc(callsite( OpLW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :108:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :54:10)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x4.data._super;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:55)
ValU32Struct x14_0 = exec_OpLBU(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm3._super));
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x14_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:121)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:56)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :121:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :56:11))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x7, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :121:18) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :56:11))))");
// OpLHU(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:122)
EQZ(x4.addr.low0._super, "loc(callsite( OpLHU ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :122:20) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :56:11)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = ValU32Struct{
  .low = (x8 + (x9 * x4.data._super.low)),   .high = Val(0)};
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:39)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:57)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :39:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :57:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:39)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:58)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :39:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :58:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalLoadOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:39)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:59)
EQZ(Val(2013265920), "loc(callsite( IllegalLoadOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :39:6) at  Mem0 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :59:19)))");
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:51)");
x11_0 = x10_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:61)
WriteRdStruct x15_0 = exec_WriteRd(ctx,arg0, x4.ii, x4.decoded, Val(1), x11_0, LAYOUT_LOOKUP(layout2, _1));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mem0(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:62)
Val x16 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x17 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x16,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
return InstOutputBaseStruct{
  .newPc = x17._super,   .newState = Val(48),   .newMode = arg1_0.mode};
}
ValU32Struct exec_OpSB(ExecContext& ctx,MemStoreInputStruct arg0, BoundLayout<OpSBLayout> layout1)   {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:128)
Val x2 = (arg0.decoded.opcode._super - Val(35));
EQZ(x2, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at  OpSB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :128:18)))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(arg0.decoded.func3, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at  OpSB ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :128:18)))");
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:129)
Val x3 = (arg0.addr.low1._super * arg0.data._super.high);
Val x4 = (Val(1) - arg0.addr.low1._super);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:130)
SplitWordStruct x5 = exec_SplitWord(ctx,(x3 + (x4 * arg0.data._super.low)), LAYOUT_LOOKUP(layout1, origBytes));
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:131)
SplitWordStruct x6 = exec_SplitWord(ctx,arg0.rs2._super.low, LAYOUT_LOOKUP(layout1, newBytes));
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:136)
Val x7 = (arg0.addr.low0._super * x5.byte0._super);
Val x8 = (Val(1) - arg0.addr.low0._super);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:137)
Val x9 = (arg0.addr.low0._super * x6.byte0._super);
Val x10_0 = (((x8 * x5.byte1._super) + x9) * Val(256));
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:136)
Val x11_0 = ((x7 + (x8 * x6.byte0._super)) + x10_0);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:140)
Val x12_0 = (arg0.addr.low1._super * arg0.data._super.low);
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:141)
Val x13_0 = (arg0.addr.low1._super * x11_0);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpSB(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:139)
ValU32Struct x14_0 = ValU32Struct{
  .low = (x12_0 + (x4 * x11_0)),   .high = ((x4 * arg0.data._super.high) + x13_0)};
return x14_0;
}
InstOutputBaseStruct exec_Mem1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Mem1Layout> layout2)   {
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:67)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:68)
MemStoreInputStruct x4 = exec_MemStoreInput(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, input));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:146)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:71)
Val x5 = (x4.decoded.opcode._super - Val(35));
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
Val x6 = (x4.decoded.func3 - Val(1));
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:152)
Val x7 = (x4.addr.low1._super * x4.data._super.low);
Val x8 = (Val(1) - x4.addr.low1._super);
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:153)
Val x9 = (x4.addr.low1._super * x4.rs2._super.low);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:151)
ValU32Struct x10_0 = ValU32Struct{
  .low = (x7 + (x8 * x4.rs2._super.low)),   .high = ((x8 * x4.data._super.high) + x9)};
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:158)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:72)
Val x11_0 = (x4.decoded.func3 - Val(2));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:45)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:73)
ValU32Struct x12_0 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
ValU32Struct x13_0;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:70)
ValU32Struct x14_0 = exec_OpSB(ctx,x4, LAYOUT_LOOKUP(layout2, output.arm0));
x13_0 = x14_0;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:146)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:71)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :146:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :71:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x6, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :146:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :71:10))))");
// OpSH(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:147)
EQZ(x4.addr.low0._super, "loc(callsite( OpSH ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :147:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :71:10)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:65)
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:158)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:72)
EQZ(x5, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :65:19) at callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :158:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10))))");
// VerifyOpcodeF3(zirgen/circuit/rv32im/v2/dsl/inst.zir:66)
EQZ(x11_0, "loc(callsite( VerifyOpcodeF3 ( zirgen/circuit/rv32im/v2/dsl/inst.zir :66:18) at callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :158:18) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10))))");
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:159)
EQZ(x4.addr.low0._super, "loc(callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :159:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10)))");
// OpSW(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:160)
EQZ(x4.addr.low1._super, "loc(callsite( OpSW ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :160:20) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :72:10)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x4.rs2._super;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:73)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :44:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :73:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:74)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :44:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :74:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:75)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :44:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :75:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:76)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :44:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :76:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalStoreOp(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:44)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:77)
EQZ(Val(2013265920), "loc(callsite( IllegalStoreOp ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :44:6) at  Mem1 ( zirgen/circuit/rv32im/v2/dsl/inst_mem.zir :77:20)))");
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:69)");
x13_0 = x12_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:79)
MemStoreFinalizeStruct x15_0 = exec_MemStoreFinalize(ctx,arg0, x4, x13_0, LAYOUT_LOOKUP(layout2, _1));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// Mem1(zirgen/circuit/rv32im/v2/dsl/inst_mem.zir:80)
Val x16 = (arg1_0.pcU32.low + Val(4));
NormalizeU32Struct x17 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x16,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, pcAdd));
return InstOutputBaseStruct{
  .newPc = x17._super,   .newState = Val(48),   .newMode = arg1_0.mode};
}
DigestRegStruct back_DigestReg(ExecContext& ctx,Index distance0, BoundLayout<DigestRegLayout> layout1)   {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:7)
DigestRegValues_SuperStruct8Array x2 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout1, values), ([&](Val8Array::value_type x3, BoundLayout<DigestRegValues_SuperLayout8LayoutArray::value_type> x4) {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:8)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(x4, low));
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:9)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(x4, high));
return DigestRegValues_SuperStruct{
  .low = x5,   .high = x6};

}));
return DigestRegStruct{
  .values = x2};
}
DigestRegStruct exec_DigestReg(ExecContext& ctx,ValU32Struct8Array arg0, BoundLayout<DigestRegLayout> layout1)   {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:7)
DigestRegValues_SuperStruct8Array x2 = map(arg0, LAYOUT_LOOKUP(layout1, values), ([&](ValU32Struct8Array::value_type x3, BoundLayout<DigestRegValues_SuperLayout8LayoutArray::value_type> x4) {
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:8)
NondetRegStruct x5 = exec_Reg(ctx,x3.low, LAYOUT_LOOKUP(x4, low));
// DigestReg(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:9)
NondetRegStruct x6 = exec_Reg(ctx,x3.high, LAYOUT_LOOKUP(x4, high));
return DigestRegValues_SuperStruct{
  .low = x5,   .high = x6};

}));
return DigestRegStruct{
  .values = x2};
}
InstOutputBaseStruct exec_ControlLoadRoot(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlLoadRootLayout> layout2, GlobalBuf global3)   {
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:18)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:20)
EQZ(arg1_0.state, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:20)");
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:22)
ControlLoadRoot__0Struct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x6, BoundLayout<ControlLoadRoot__0_SuperLayout8LayoutArray::value_type> x7) {
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:23)
GetDataStruct x8 = exec_MemoryPageIn(ctx,arg0, (x6 + Val(1140850680)), LAYOUT_LOOKUP(x7, mem));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:19)
DigestRegStruct x9 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, stateIn));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:24)
Val x10_0 = (x9.values[to_size_t(x6)].low._super - x8._super.low);
EQZ(x10_0, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:24)");
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:19)
DigestRegStruct x11_0 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, stateIn));
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:25)
Val x12_0 = (x11_0.values[to_size_t(x6)].high._super - x8._super.high);
EQZ(x12_0, "ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:25)");
return ControlLoadRoot__0Struct{
};

}));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// ControlLoadRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:27)
InstOutputBaseStruct x13_0 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(16),   .newMode = Val(0)};
return x13_0;
}
InstOutputBaseStruct exec_ControlResume(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlResumeLayout> layout2, GlobalBuf global3)   {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:30)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:31)
EQZ((arg1_0.state - Val(1)), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:31)");
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:33)
Val x5 = (arg1_0.pcU32.low + arg1_0.pcU32.high);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout2, pcZero));
InstOutputBaseStruct x7;
if (to_size_t(x6._super)) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:36)
GetDataStruct x8 = exec_MemoryRead(ctx,arg0, Val(1073725572), LAYOUT_LOOKUP(layout2, _super.arm0._super.pc));
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:37)
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, Val(1073725573), LAYOUT_LOOKUP(layout2, _super.arm0._super.mode));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:38)
InstOutputBaseStruct x10_0 = InstOutputBaseStruct{
  .newPc = x8._super,   .newState = Val(1),   .newMode = x9._super.low};
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:34)");
x7 = x10_0;
} else if (to_size_t((Val(1) - x6._super))) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:41)
ControlResume_SuperArm1_Super__0Struct8Array x11_0 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _super.arm1._1), ([&](Val8Array::value_type x12_0, BoundLayout<ControlResume_SuperArm1_Super__0_SuperLayout8LayoutArray::value_type> x13_0) {
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:40)
DigestRegStruct x14_0 = back_DigestReg(ctx,0, LAYOUT_LOOKUP(x4, input));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:43)
ValU32Struct x15_0 = ValU32Struct{
  .low = x14_0.values[to_size_t(x12_0)].low._super,   .high = x14_0.values[to_size_t(x12_0)].high._super};
// ControlResume(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:42)
MemoryWriteStruct x16 = exec_MemoryWrite(ctx,arg0, (x12_0 + Val(1073725592)), x15_0, LAYOUT_LOOKUP(x13_0, _0));
return ControlResume_SuperArm1_Super__0Struct{
};

}));
x7 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = Val(48),   .newMode = arg1_0.mode};
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x7;
}
InstOutputBaseStruct exec_ControlUserECALL(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlUserECALLLayout> layout2)   {
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:50)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, safeMode));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:51)
AddrDecomposeBitsStruct x4 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, x3._super, LAYOUT_LOOKUP(layout2, pcAddr));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:52)
EQZ(x4.low2, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:52)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:53)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, x4._super, LAYOUT_LOOKUP(layout2, loadInst));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:54)
EQZ(x5._super.high, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:54)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:55)
Val x6 = (x5._super.low - Val(115));
EQZ(x6, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:55)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:56)
EQZ((arg1_0.state - Val(48)), "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:56)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:57)
EQZ(arg1_0.mode, "ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:57)");
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:58)
GetDataStruct x7 = exec_MemoryRead(ctx,arg0, Val(1073726464), LAYOUT_LOOKUP(layout2, newPcAddr));
// ControlUserECALL(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:59)
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, Val(1073725568), arg1_0.pcU32, LAYOUT_LOOKUP(layout2, _0));
return InstOutputBaseStruct{
  .newPc = x7._super,   .newState = Val(48),   .newMode = Val(1)};
}
InstOutputBaseStruct exec_ControlMRET(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlMRETLayout> layout2)   {
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:64)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, safeMode));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:65)
AddrDecomposeBitsStruct x4 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, x3._super, LAYOUT_LOOKUP(layout2, pcAddr));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:66)
EQZ(x4.low2, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:66)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:67)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, x4._super, LAYOUT_LOOKUP(layout2, loadInst));
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:68)
Val x6 = (x5._super.high - Val(12320));
EQZ(x6, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:68)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:69)
Val x7 = (x5._super.low - Val(115));
EQZ(x7, "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:69)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:70)
EQZ((arg1_0.state - Val(48)), "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:70)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:71)
EQZ((arg1_0.mode - Val(1)), "ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:71)");
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:72)
GetDataStruct x8 = exec_MemoryRead(ctx,arg0, Val(1073725568), LAYOUT_LOOKUP(layout2, pc));
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
// ControlMRET(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:73)
Val x9 = (x8._super.low + Val(4));
NormalizeU32Struct x10_0 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x9,   .high = x8._super.high}, LAYOUT_LOOKUP(layout2, pcAdd));
return InstOutputBaseStruct{
  .newPc = x10_0._super,   .newState = Val(48),   .newMode = Val(0)};
}
InstOutputBaseStruct exec_ControlSuspend(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlSuspendLayout> layout2, GlobalBuf global3)   {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:77)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:79)
Val x5 = (arg1_0.pcU32.low + arg1_0.pcU32.high);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout2, pcZero));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:88)
ComponentStruct x7 = ComponentStruct{
};
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:100)
ValU32Struct x8 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
InstOutputBaseStruct x9;
if (to_size_t(x6._super)) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:81)
EQZ((arg1_0.state - Val(4)), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:81)");
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:86)
GetDataStruct8Array x10_0 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _super.arm0._1), ([&](Val8Array::value_type x11_0, BoundLayout<MemoryReadLayout8LayoutArray::value_type> x12_0) {
GetDataStruct x13_0 = exec_MemoryRead(ctx,arg0, (x11_0 + Val(1073725584)), x12_0);
return x13_0;

}));
ValU32Struct8Array x14_0 = ValU32Struct8Array{x10_0[0]._super, x10_0[1]._super, x10_0[2]._super, x10_0[3]._super, x10_0[4]._super, x10_0[5]._super, x10_0[6]._super, x10_0[7]._super};
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:85)
DigestRegStruct x15_0 = exec_DigestReg(ctx,x14_0, LAYOUT_LOOKUP(x4, output));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:83)
NondetRegStruct x16 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
NondetRegStruct x17 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:88)
Val x18 = (Val(1) - (Val(1) - x17._super));
ComponentStruct x19;
if (to_size_t((Val(1) - x16._super))) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:89)
NondetRegStruct x20 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA0low));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:90)
NondetRegStruct x21 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA0high));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:91)
NondetRegStruct x22 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA1low));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:92)
NondetRegStruct x23 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(x4, termA1high));
x19 = x7;
} else if (to_size_t(x18)) {
x19 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
x9 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(16),   .newMode = Val(3)};
} else if (to_size_t((Val(1) - x6._super))) {
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:104)
NondetRegStruct x24 = exec_Reg(ctx,arg1_0.state, LAYOUT_LOOKUP(layout2, _super.arm1._super.state));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:105)
Val x25 = (x24._super - Val(48));
EQZ((x25 * (x24._super - Val(4))), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:105)");
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:108)
NondetRegStruct x26 = exec_Reg(ctx,(x25 * Val(1875997790)), LAYOUT_LOOKUP(x4, isTerminate));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:110)
MemoryWriteStruct x27 = exec_MemoryWrite(ctx,arg0, Val(1073725572), arg1_0.pcU32, LAYOUT_LOOKUP(layout2, _super.arm1._super._0));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:111)
MemoryWriteStruct x28 = exec_MemoryWrite(ctx,arg0, Val(1073725573), ValU32Struct{
  .low = arg1_0.mode,   .high = Val(0)}, LAYOUT_LOOKUP(layout2, _super.arm1._super._1));
// ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), 0), "ControlSuspend(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:80)");
x9 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(4),   .newMode = arg1_0.mode};
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x9;
}
InstOutputBaseStruct exec_ControlStoreRoot(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlStoreRootLayout> layout2, GlobalBuf global3)   {
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:117)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:118)
EQZ((arg1_0.state - Val(5)), "ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:118)");
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:120)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x6, BoundLayout<MemoryPageOutLayout8LayoutArray::value_type> x7) {
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:121)
GetDataStruct x8 = exec_MemoryPageOut(ctx,arg0, (x6 + Val(1140850680)), x7);
return x8;

}));
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:120)
ValU32Struct8Array x9 = ValU32Struct8Array{x5[0]._super, x5[1]._super, x5[2]._super, x5[3]._super, x5[4]._super, x5[5]._super, x5[6]._super, x5[7]._super};
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:119)
DigestRegStruct x10_0 = exec_DigestReg(ctx,x9, LAYOUT_LOOKUP(x4, stateOut));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// ControlStoreRoot(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:124)
InstOutputBaseStruct x11_0 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(6),   .newMode = Val(0)};
return x11_0;
}
InstOutputBaseStruct exec_ControlTable(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlTableLayout> layout2)   {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)
EQZ((arg1_0.state - Val(6)), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:128)");
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:129)
NondetRegStruct x3 = exec_Reg(ctx,arg1_0.pcU32.low, LAYOUT_LOOKUP(layout2, entry));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:130)
NondetRegStruct x4 = exec_Reg(ctx,arg1_0.mode, LAYOUT_LOOKUP(layout2, mode));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:134)
Val16Array x5 = Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)};
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:139)
Val x6 = (x3._super + Val(16));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:142)
ValU32Struct x7 = ValU32Struct{
  .low = Val(0),   .high = Val(0)};
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:144)
ValU32Struct x8 = ValU32Struct{
  .low = x6,   .high = Val(0)};
InstOutputBaseStruct x9;
if (to_size_t(x4._super)) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:134)
ControlTable_SuperArm0_Super__0Struct16Array x10_0 = map(x5, LAYOUT_LOOKUP(layout2, _super.arm0._super._1), ([&](Val16Array::value_type x11_0, BoundLayout<ControlTable_SuperArm0_Super__0_SuperLayout16LayoutArray::value_type> x12_0) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:135)
Val x13_0 = (x3._super + x11_0);
// LookupCurrent(zirgen/circuit/rv32im/v2/dsl/lookups.zir:5)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:136)
Val x14_0 = INVOKE_EXTERN(ctx,lookupCurrent, Val(16), x13_0);
ArgU16Struct x15_0 = exec_ArgU16(ctx,neg_0(x14_0), x13_0, LAYOUT_LOOKUP(x12_0, arg));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:137)
Val x16 = (x15_0.val._super - x13_0);
EQZ(x16, "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:137)");
return ControlTable_SuperArm0_Super__0Struct{
};

}));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:140)
NondetRegStruct x17 = exec_IsZero(ctx,(x6 - Val(65536)), LAYOUT_LOOKUP(layout2, _super.arm0._super.done));
InstOutputBaseStruct x18;
if (to_size_t(x17._super)) {
x18 = InstOutputBaseStruct{
  .newPc = x7,   .newState = Val(7),   .newMode = Val(0)};
} else if (to_size_t((Val(1) - x17._super))) {
x18 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(6),   .newMode = Val(1)};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
x9 = x18;
} else if (to_size_t((Val(1) - x4._super))) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:148)
ControlTable_SuperArm1_Super__0Struct16Array x19 = map(x5, LAYOUT_LOOKUP(layout2, _super.arm1._super._1), ([&](Val16Array::value_type x20, BoundLayout<ControlTable_SuperArm1_Super__0_SuperLayout16LayoutArray::value_type> x21) {
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:149)
Val x22 = (x3._super + x20);
// LookupCurrent(zirgen/circuit/rv32im/v2/dsl/lookups.zir:5)
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:150)
Val x23 = INVOKE_EXTERN(ctx,lookupCurrent, Val(8), x22);
ArgU8Struct x24 = exec_ArgU8(ctx,neg_0(x23), x22, LAYOUT_LOOKUP(x21, arg));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:151)
Val x25 = (x24.val._super - x22);
EQZ(x25, "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:151)");
return ControlTable_SuperArm1_Super__0Struct{
};

}));
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:154)
NondetRegStruct x26 = exec_IsZero(ctx,(x6 - Val(256)), LAYOUT_LOOKUP(layout2, _super.arm1._super.done));
InstOutputBaseStruct x27;
if (to_size_t(x26._super)) {
x27 = InstOutputBaseStruct{
  .newPc = x7,   .newState = Val(6),   .newMode = Val(1)};
} else if (to_size_t((Val(1) - x26._super))) {
x27 = InstOutputBaseStruct{
  .newPc = x8,   .newState = Val(6),   .newMode = Val(0)};
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "ControlTable(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:132)");
x9 = x27;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x9;
}
InstOutputBaseStruct exec_ControlDone(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ControlDoneLayout> layout2, GlobalBuf global3)   {
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:163)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:164)
EQZ((arg1_0.state - Val(7)), "ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:164)");
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:167)
Val x5 = (Val(1) - arg1_0.mode);
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:165)
NondetRegStruct x6 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
NondetRegStruct x7 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, isTerminate));
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:167)
ComponentStruct x8 = ComponentStruct{
};
ComponentStruct x9;
if (to_size_t((x5 * (Val(1) - x6._super)))) {
// Log(<preamble>:22)
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:168)
INVOKE_EXTERN(ctx,log, "Verifying end state", std::initializer_list<Val>{});
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:166)
NondetRegStruct x10_0 = back_Reg(ctx,0, LAYOUT_LOOKUP(x4, shutdownCycle));
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:169)
IsCycleStruct x11_0 = exec_IsCycle(ctx,(arg0._super - x10_0._super), LAYOUT_LOOKUP(layout2, _2.arm0._0));
x9 = x8;
} else if (to_size_t((Val(1) - (x5 * (Val(1) - x7._super))))) {
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:167)
STORE(LAYOUT_LOOKUP(layout2, _2.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _2.arm1._extra0.count._super), 0), "ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:167)");
x9 = x8;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// ControlDone(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:173)
InstOutputBaseStruct x12_0 = InstOutputBaseStruct{
  .newPc = ValU32Struct{
  .low = Val(0),   .high = Val(0)},   .newState = Val(7),   .newMode = Val(1)};
return x12_0;
}
InstOutputBaseStruct exec_Control0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Control0Layout> layout2, GlobalBuf global3)   {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:177)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
InstOutputBaseStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:179)
InstOutputBaseStruct x6 = exec_ControlLoadRoot(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:180)
InstOutputBaseStruct x7 = exec_ControlResume(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm1._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm1._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:181)
InstOutputBaseStruct x8 = exec_ControlUserECALL(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm2._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm2._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm2._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:182)
InstOutputBaseStruct x9 = exec_ControlMRET(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm3._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm3._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm3._extra45.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:183)
InstOutputBaseStruct x10_0 = exec_ControlSuspend(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm4._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm4._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:184)
InstOutputBaseStruct x11_0 = exec_ControlStoreRoot(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm5._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm5._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm5._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x11_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:185)
InstOutputBaseStruct x12_0 = exec_ControlTable(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm6._super));
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm6._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:186)
InstOutputBaseStruct x13_0 = exec_ControlDone(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm7._super), global3);
// Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra0.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra1.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra2.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra3.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra4.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra5.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra6.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra7.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra8.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra9.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra10.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra11.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra12.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra13.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra14.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra15.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra16.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra17.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra18.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra19.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra20.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra21.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra22.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra23.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra24.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra25.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra26.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra27.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra28.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra29.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra30.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra31.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra32.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra33.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra34.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra35.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra36.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra37.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra38.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra39.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra40.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra41.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra42.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra43.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra44.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra45.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra46.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra47.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra48.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra49.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra50.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra50.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra51.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra51.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra52.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra52.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra53.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra53.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm7._extra54.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm7._extra54.count._super), 0), "Control0(zirgen/circuit/rv32im/v2/dsl/inst_control.zir:178)");
x5 = x13_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x5;
}
OneHot_6_Struct exec_OneHot_6_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_6_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct6Array x2 = map(Val6Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val6Array::value_type x3, BoundLayout<NondetRegLayout6LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
EQZ((x8 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x9 = (x2[2]._super * Val(2));
Val x10_0 = (x2[3]._super * Val(3));
Val x11_0 = (x2[4]._super * Val(4));
Val x12_0 = (x2[5]._super * Val(5));
Val x13_0 = (x2[1]._super + x9);
Val x14_0 = (((x13_0 + x10_0) + x11_0) + x12_0);
EQZ((x14_0 - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_6_Struct{
  ._super = x2,   .bits = x2};
}
ECallOutputStruct exec_MachineECall(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, BoundLayout<MachineECallLayout> layout3)   {
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:26)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, loadInst));
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:27)
EQZ((arg1_0.state - Val(48)), "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:27)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:28)
EQZ(x4._super.high, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:28)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:29)
Val x5 = (x4._super.low - Val(115));
EQZ(x5, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:29)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:30)
EQZ((arg1_0.mode - Val(1)), "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:30)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:31)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725457), LAYOUT_LOOKUP(layout3, dispatchIdx));
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:32)
EQZ(x6._super.high, "MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:32)");
// MachineECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:33)
OneHot_6_Struct x7 = exec_OneHot_6_(ctx,x6._super.low, LAYOUT_LOOKUP(layout3, dispatch));
Val x8;
if (to_size_t(x7._super[0]._super)) {
x8 = Val(9);
} else if (to_size_t(x7._super[1]._super)) {
x8 = Val(10);
} else if (to_size_t(x7._super[2]._super)) {
x8 = Val(11);
} else if (to_size_t(x7._super[3]._super)) {
x8 = Val(16);
} else if (to_size_t(x7._super[4]._super)) {
x8 = Val(32);
} else if (to_size_t(x7._super[5]._super)) {
x8 = Val(40);
} else {
   assert(0 && "Reached unreachable mux arm");
}
return ECallOutputStruct{
  .state = x8,   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
ECallOutputStruct exec_ECallTerminate(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallTerminateLayout> layout2, GlobalBuf global3)   {
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:45)
BoundLayout<_globalLayout> x4 = BIND_LAYOUT(kLayoutGlobal, global3);
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:46)
EQZ((arg1_0.state - Val(9)), "ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:46)");
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:47)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, a0));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:48)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, a1));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:49)
NondetRegStruct x7 = exec_Reg(ctx,x5._super.low, LAYOUT_LOOKUP(x4, termA0low));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:50)
NondetRegStruct x8 = exec_Reg(ctx,x5._super.high, LAYOUT_LOOKUP(x4, termA0high));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:51)
NondetRegStruct x9 = exec_Reg(ctx,x6._super.low, LAYOUT_LOOKUP(x4, termA1low));
// ECallTerminate(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:52)
NondetRegStruct x10_0 = exec_Reg(ctx,x6._super.high, LAYOUT_LOOKUP(x4, termA1high));
return ECallOutputStruct{
  .state = Val(4),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
OneHot_4_Struct exec_OneHot_4_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_4_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct4Array x2 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val4Array::value_type x3, BoundLayout<NondetRegLayout4LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
EQZ((x7 - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x8 = (x2[2]._super * Val(2));
Val x9 = (x2[3]._super * Val(3));
Val x10_0 = (x2[1]._super + x8);
EQZ(((x10_0 + x9) - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_4_Struct{
  ._super = x2};
}
DecomposeLow2Struct exec_DecomposeLow2(ExecContext& ctx,Val arg0, BoundLayout<DecomposeLow2Layout> layout1)   {
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:59)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,(bitAnd(arg0, Val(65532)) * Val(1509949441)), LAYOUT_LOOKUP(layout1, high));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:60)
NondetRegStruct x3 = exec_NondetReg(ctx,bitAnd(arg0, Val(3)), LAYOUT_LOOKUP(layout1, low2));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:61)
Val x4 = (x2._super._super * Val(4));
EQZ((arg0 - (x4 + x3._super)), "DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:61)");
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:62)
OneHot_4_Struct x5 = exec_OneHot_4_(ctx,x3._super, LAYOUT_LOOKUP(layout1, low2Hot));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:63)
NondetRegStruct x6 = exec_IsZero(ctx,x2._super._super, LAYOUT_LOOKUP(layout1, highZero));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:64)
Val x7 = (x6._super * x5._super[0]._super);
NondetRegStruct x8 = exec_Reg(ctx,x7, LAYOUT_LOOKUP(layout1, isZero));
// DecomposeLow2(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:66)
Val x9 = (x5._super[1]._super + x5._super[2]._super);
return DecomposeLow2Struct{
  .high = x2,   .low2 = x3,   .low2Hot = x5,   .highZero = x6,   .isZero = x8,   .low2Nonzero = (x9 + x5._super[3]._super)};
}
ECallOutputStruct exec_ECallHostReadSetup(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallHostReadSetupLayout> layout2)   {
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:70)
EQZ((arg1_0.state - Val(10)), "ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:70)");
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:72)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, fd));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:73)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, ptr));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:74)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725452), LAYOUT_LOOKUP(layout2, len));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:76)
EQZ(x5._super.high, "ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:76)");
// HostReadPrepare(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:7)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:78)
Val x6 = INVOKE_EXTERN(ctx,hostReadPrepare, x3._super.low, x5._super.low);
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,x6, LAYOUT_LOOKUP(layout2, newLen));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:80)
Val x8 = (x5._super.low - x7._super._super);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, diff));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:82)
ValU32Struct x10_0 = ValU32Struct{
  .low = x7._super._super,   .high = Val(0)};
MemoryWriteStruct x11_0 = exec_MemoryWrite(ctx,arg0, Val(1073725450), x10_0, LAYOUT_LOOKUP(layout2, _0));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:84)
DecomposeLow2Struct x12_0 = exec_DecomposeLow2(ctx,x4._super.low, LAYOUT_LOOKUP(layout2, ptrDecomp));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:85)
Val x13_0 = (x4._super.high * Val(16384));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:86)
DecomposeLow2Struct x14_0 = exec_DecomposeLow2(ctx,x7._super._super, LAYOUT_LOOKUP(layout2, lenDecomp));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:88)
Val x15_0 = (x14_0.highZero._super * x14_0.low2Nonzero);
NondetRegStruct x16 = exec_Reg(ctx,x15_0, LAYOUT_LOOKUP(layout2, len123));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:90)
Val x17 = ((x16._super + x12_0.low2Nonzero) - (x16._super * x12_0.low2Nonzero));
NondetRegStruct x18 = exec_Reg(ctx,x17, LAYOUT_LOOKUP(layout2, uneven));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:94)
Val x19 = (x14_0.isZero._super * Val(48));
// ECallHostReadSetup(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:96)
Val x20 = (Val(1) - x14_0.isZero._super);
Val x21 = ((x19 + ((x20 * x18._super) * Val(12))) + ((x20 * (Val(1) - x18._super)) * Val(13)));
return ECallOutputStruct{
  .state = x21,   .s0 = (x13_0 + x12_0.high._super._super),   .s1 = x12_0.low2._super,   .s2 = x7._super._super};
}
ECallOutputStruct exec_ECallHostWrite(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECallHostWriteLayout> layout2)   {
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:103)
EQZ((arg1_0.state - Val(11)), "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:103)");
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:105)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, Val(1073725450), LAYOUT_LOOKUP(layout2, fd));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:106)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, Val(1073725451), LAYOUT_LOOKUP(layout2, ptr));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:107)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725452), LAYOUT_LOOKUP(layout2, len));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:108)
EQZ(x3._super.high, "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:108)");
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:109)
EQZ(x5._super.high, "ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:109)");
// HostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:10)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:111)
Val x6 = INVOKE_EXTERN(ctx,hostWrite, x3._super.low, x4._super.low, x4._super.high, x5._super.low);
NondetU16RegStruct x7 = exec_NondetU16Reg(ctx,x6, LAYOUT_LOOKUP(layout2, newLen));
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:113)
Val x8 = (x5._super.low - x7._super._super);
NondetU16RegStruct x9 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout2, diff));
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// ECallHostWrite(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:115)
ValU32Struct x10_0 = ValU32Struct{
  .low = x7._super._super,   .high = Val(0)};
MemoryWriteStruct x11_0 = exec_MemoryWrite(ctx,arg0, Val(1073725450), x10_0, LAYOUT_LOOKUP(layout2, _0));
return ECallOutputStruct{
  .state = Val(48),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
}
ECallOutputStruct exec_ECallHostReadBytes(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, Val arg3, Val arg4, BoundLayout<ECallHostReadBytesLayout> layout5)   {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:121)
EQZ((arg1_0.state - Val(12)), "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:121)");
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:123)
Val x6 = (arg4 - Val(1));
DecomposeLow2Struct x7 = exec_DecomposeLow2(ctx,x6, LAYOUT_LOOKUP(layout5, lenDecomp));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:125)
Val x8 = (x7.highZero._super * x7.low2Nonzero);
NondetRegStruct x9 = exec_Reg(ctx,x8, LAYOUT_LOOKUP(layout5, len123));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:127)
NondetRegStruct x10_0 = exec_IsZero(ctx,(arg3 - Val(3)), LAYOUT_LOOKUP(layout5, nextPtrEven));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:128)
Val x11_0 = (Val(1) - x10_0._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:129)
Val x12_0 = ((x10_0._super * (arg2_0 + Val(1))) + (x11_0 * arg2_0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:132)
Val x13_0 = ((x9._super + x11_0) - (x9._super * x11_0));
NondetRegStruct x14_0 = exec_Reg(ctx,x13_0, LAYOUT_LOOKUP(layout5, uneven));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:134)
NondetRegStruct x15_0 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout5, lenZero));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:136)
NondetRegStruct x16 = exec_NondetBitReg(ctx,bitAnd(arg3, Val(1)), LAYOUT_LOOKUP(layout5, low0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:137)
NondetRegStruct x17 = exec_BitReg(ctx,((arg3 - x16._super) * Val(1006632961)), LAYOUT_LOOKUP(layout5, low1));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:139)
GetDataStruct x18 = exec_MemoryRead(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout5, origWord));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:141)
MemoryWriteUnconstrainedStruct x19 = exec_MemoryWriteUnconstrained(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout5, _0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:143)
Val x20 = (Val(1) - x17._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)
Val x21 = (x18._super.low - x19.io.newTxn.dataLow._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:143)
ComponentStruct x22 = ComponentStruct{
};
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)
Val x23 = (x18._super.high - x19.io.newTxn.dataHigh._super);
ComponentStruct x24;
if (to_size_t(x17._super)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)
EQZ(x21, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:144)");
x24 = x22;
} else if (to_size_t(x20)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)
EQZ(x23, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:146)");
x24 = x22;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:149)
Val x25 = (x17._super * x18._super.high);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:150)
Val x26 = (x17._super * x19.io.newTxn.dataHigh._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:152)
SplitWordStruct x27 = exec_SplitWord(ctx,(x25 + (x20 * x18._super.low)), LAYOUT_LOOKUP(layout5, oldBytes));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:153)
SplitWordStruct x28 = exec_SplitWord(ctx,(x26 + (x20 * x19.io.newTxn.dataLow._super)), LAYOUT_LOOKUP(layout5, newBytes_0));
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)
Val x29 = (x27.byte0._super - x28.byte0._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)
Val x30 = (x27.byte1._super - x28.byte1._super);
ComponentStruct x31;
if (to_size_t(x16._super)) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)
EQZ(x29, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:156)");
x31 = x22;
} else if (to_size_t((Val(1) - x16._super))) {
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)
EQZ(x30, "ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:158)");
x31 = x22;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:164)
Val x32 = (Val(1) - x15_0._super);
// ECallHostReadBytes(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:162)
Val x33 = ((x15_0._super * Val(48)) + ((x32 * x14_0._super) * Val(12)));
return ECallOutputStruct{
  .state = (x33 + ((x32 * (Val(1) - x14_0._super)) * Val(13))),   .s0 = x12_0,   .s1 = (x11_0 * (arg3 + Val(1))),   .s2 = x6};
}
ECallOutputStruct exec_ECallHostReadWords(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, Val arg2_0, Val arg3, BoundLayout<ECallHostReadWordsLayout> layout4)   {
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:171)
EQZ((arg1_0.state - Val(13)), "ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:171)");
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:172)
DecomposeLow2Struct x5 = exec_DecomposeLow2(ctx,arg3, LAYOUT_LOOKUP(layout4, lenDecomp));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:173)
DecomposeLow2Struct x6 = exec_DecomposeLow2(ctx,x5.high._super._super, LAYOUT_LOOKUP(layout4, wordsDecomp));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:175)
Val x7 = (x6.low2Hot._super[1]._super + x6.low2Hot._super[2]._super);
Val x8 = ((x7 + x6.low2Hot._super[3]._super) * x6.highZero._super);
Val x9 = (Val(1) - x6.highZero._super);
Val x10_0 = (x8 + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:176)
Val x11_0 = (x6.low2Hot._super[2]._super + x6.low2Hot._super[3]._super);
Val x12_0 = ((x11_0 * x6.highZero._super) + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:177)
Val x13_0 = (x6.low2Hot._super[3]._super * x6.highZero._super);
Val x14_0 = (x13_0 + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:180)
Val x15_0 = (((x10_0 + x12_0) + x14_0) + x9);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:181)
ECallHostReadWords__0Struct4Array x16 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout4, _1), ([&](Val4Array::value_type x17, BoundLayout<ECallHostReadWords__0_SuperLayout4LayoutArray::value_type> x18) {
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:182)
Val x19 = (Val4Array{x10_0, x12_0, x14_0, x9}[to_size_t(x17)] * (arg2_0 + x17));
Val x20 = (Val(1) - Val4Array{x10_0, x12_0, x14_0, x9}[to_size_t(x17)]);
NondetRegStruct x21 = exec_Reg(ctx,(x19 + (x20 * Val(1073725504))), LAYOUT_LOOKUP(x18, addr));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:183)
MemoryWriteUnconstrainedStruct x22 = exec_MemoryWriteUnconstrained(ctx,arg0, x21._super, LAYOUT_LOOKUP(x18, _0));
return ECallHostReadWords__0Struct{
};

}));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:185)
Val x23 = (x5.high._super._super - x15_0);
NondetRegStruct x24 = exec_IsZero(ctx,x23, LAYOUT_LOOKUP(layout4, newLenHighZero));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:186)
Val x25 = (x24._super * (Val(1) - x5.low2Nonzero));
NondetRegStruct x26 = exec_Reg(ctx,x25, LAYOUT_LOOKUP(layout4, lenZero));
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:191)
Val x27 = (Val(1) - x26._super);
// ECallHostReadWords(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:189)
Val x28 = ((x26._super * Val(48)) + ((x27 * x24._super) * Val(12)));
return ECallOutputStruct{
  .state = (x28 + ((x27 * (Val(1) - x24._super)) * Val(13))),   .s0 = (arg2_0 + x15_0),   .s1 = Val(0),   .s2 = (arg3 - (x15_0 * Val(4)))};
}
InstOutputBaseStruct exec_ECall0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<ECall0Layout> layout2, GlobalBuf global3)   {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:201)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:202)
AddrDecomposeBitsStruct x5 = exec_AddrDecomposeBits(ctx,arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, pcAddr));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:203)
EQZ(x5.low2, "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:203)");
// ECallOutput(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:12)
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:21)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:211)
ECallOutputStruct x6 = ECallOutputStruct{
  .state = Val(0),   .s0 = Val(0),   .s1 = Val(0),   .s2 = Val(0)};
ECallOutputStruct x7;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:205)
ECallOutputStruct x8 = exec_MachineECall(ctx,arg0, arg1_0, x5._super, LAYOUT_LOOKUP(layout2, output.arm0._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm0._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:206)
ECallOutputStruct x9 = exec_ECallTerminate(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm1._super), global3);
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm1._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:207)
ECallOutputStruct x10_0 = exec_ECallHostReadSetup(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm2._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm2._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:208)
ECallOutputStruct x11_0 = exec_ECallHostWrite(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, output.arm3._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm3._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x11_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:209)
NondetRegStruct x12_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s0));
NondetRegStruct x13_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s1));
NondetRegStruct x14_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s2));
ECallOutputStruct x15_0 = exec_ECallHostReadBytes(ctx,arg0, arg1_0, x12_0._super, x13_0._super, x14_0._super, LAYOUT_LOOKUP(layout2, output.arm4._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm4._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x15_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:210)
NondetRegStruct x16 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s0));
NondetRegStruct x17 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout2, s2));
ECallOutputStruct x18 = exec_ECallHostReadWords(ctx,arg0, arg1_0, x16._super, x17._super, LAYOUT_LOOKUP(layout2, output.arm5._super));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm5._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x18;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:20)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:211)
EQZ(Val(2013265920), "loc(callsite( IllegalECall ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :20:6) at  ECall0 ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :211:18)))");
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra14.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra15.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra16.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra17.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra18.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm6._extra19.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// IllegalECall(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:20)
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:212)
EQZ(Val(2013265920), "loc(callsite( IllegalECall ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :20:6) at  ECall0 ( zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir :212:18)))");
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra0.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra1.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra2.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra3.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra4.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra5.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra6.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra7.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra8.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra9.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra10.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra11.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra12.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra13.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra14.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra15.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra16.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra17.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra18.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
STORE(LAYOUT_LOOKUP(layout2, output.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, output.arm7._extra19.count._super), 0), "ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:204)");
x7 = x6;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:214)
NondetRegStruct x19 = exec_Reg(ctx,x7.s0, LAYOUT_LOOKUP(layout2, s0));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:215)
NondetRegStruct x20 = exec_Reg(ctx,x7.s1, LAYOUT_LOOKUP(layout2, s1));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:216)
NondetRegStruct x21 = exec_Reg(ctx,x7.s2, LAYOUT_LOOKUP(layout2, s2));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:217)
NondetRegStruct x22 = exec_IsZero(ctx,(x7.state - Val(48)), LAYOUT_LOOKUP(layout2, isDecode));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:218)
NondetRegStruct x23 = exec_IsZero(ctx,(x7.state - Val(16)), LAYOUT_LOOKUP(layout2, isP2Entry));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:219)
NondetRegStruct x24 = exec_IsZero(ctx,(x7.state - Val(32)), LAYOUT_LOOKUP(layout2, isShaEcall));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:220)
NondetRegStruct x25 = exec_IsZero(ctx,(x7.state - Val(40)), LAYOUT_LOOKUP(layout2, isBigIntEcall));
// ECall0(zirgen/circuit/rv32im/v2/dsl/inst_ecall.zir:221)
Val x26 = ((x22._super + x23._super) + x24._super);
// AddU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:27)
Val x27 = (arg1_0.pcU32.low + ((x26 + x25._super) * Val(4)));
NormalizeU32Struct x28 = exec_NormalizeU32(ctx,DenormedValU32Struct{
  .low = x27,   .high = arg1_0.pcU32.high}, LAYOUT_LOOKUP(layout2, addPC));
return InstOutputBaseStruct{
  .newPc = x28._super,   .newState = x7.state,   .newMode = Val(1)};
}
NondetRegStruct exec_SBox(ExecContext& ctx,Val arg0, BoundLayout<SBoxLayout> layout1)   {
// SBox(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:25)
NondetRegStruct x2 = exec_Reg(ctx,((arg0 * arg0) * arg0), LAYOUT_LOOKUP(layout1, cubed));
// SBox(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:26)
Val x3 = ((x2._super * x2._super) * arg0);
NondetRegStruct x4 = exec_Reg(ctx,x3, LAYOUT_LOOKUP(layout1, _super));
return x4;
}
MultiplyByMIntStruct exec_DoIntRound(ExecContext& ctx,Val24Array arg0, Val arg1_0, BoundLayout<DoIntRoundLayout> layout2)   {
// DoIntRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:32)
NondetRegStruct x3 = exec_SBox(ctx,(arg0[0] + arg1_0), LAYOUT_LOOKUP(layout2, sbox));
// MultiplyByMInt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:13)
// DoIntRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:34)
Val x4 = ((x3._super + arg0[1]) + arg0[2]);
Val x5 = (((x4 + arg0[3]) + arg0[4]) + arg0[5]);
Val x6 = (((x5 + arg0[6]) + arg0[7]) + arg0[8]);
Val x7 = (((x6 + arg0[9]) + arg0[10]) + arg0[11]);
Val x8 = (((x7 + arg0[12]) + arg0[13]) + arg0[14]);
Val x9 = (((x8 + arg0[15]) + arg0[16]) + arg0[17]);
Val x10_0 = (((x9 + arg0[18]) + arg0[19]) + arg0[20]);
Val x11_0 = (((x10_0 + arg0[21]) + arg0[22]) + arg0[23]);
// MultiplyByMInt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:14)
MultiplyByMInt_Super_SuperStruct24Array x12_0 = MultiplyByMInt_Super_SuperStruct24Array{MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (x3._super * Val(1083257840)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[1] * Val(375892129)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[2] * Val(111593398)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[3] * Val(1867716110)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[4] * Val(658182609)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[5] * Val(51866717)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[6] * Val(1928969209)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[7] * Val(1942928017)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[8] * Val(1558116381)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[9] * Val(20525701)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[10] * Val(1188752902)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[11] * Val(106789798)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[12] * Val(1389833583)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[13] * Val(98371040)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[14] * Val(1001081699)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[15] * Val(1792686146)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[16] * Val(801504236)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[17] * Val(1997365680)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[18] * Val(1461037801)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[19] * Val(65998480)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[20] * Val(1974912880)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[21] * Val(606789471)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[22] * Val(13683276)))}, MultiplyByMInt_Super_SuperStruct{
  ._super = (x11_0 + (arg0[23] * Val(918610824)))}};
return MultiplyByMIntStruct{
  ._super = x12_0};
}
DoIntRoundsStruct exec_DoIntRounds(ExecContext& ctx,Val24Array arg0, BoundLayout<DoIntRoundsLayout> layout1)   {
// DoIntRounds(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:38)
DoIntRounds__0_SuperStruct21Array x2 = DoIntRounds__0_SuperStruct21Array{DoIntRounds__0_SuperStruct{
  ._super = Val(497520322)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1930103076)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1052077299)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1540960371)}, DoIntRounds__0_SuperStruct{
  ._super = Val(924863639)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1365519753)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1726563304)}, DoIntRounds__0_SuperStruct{
  ._super = Val(440300254)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1891545577)}, DoIntRounds__0_SuperStruct{
  ._super = Val(822033215)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1111544260)}, DoIntRounds__0_SuperStruct{
  ._super = Val(308575117)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1708681573)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1240419708)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1199068823)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1186174623)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1551596046)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1886977120)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1327682690)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1210751726)}, DoIntRounds__0_SuperStruct{
  ._super = Val(1810596765)}};
Val24Array x3 = reduce(x2, arg0, LAYOUT_LOOKUP(layout1, _super), ([&](Val24Array x4, DoIntRounds__0_SuperStruct21Array::value_type x5, BoundLayout<DoIntRoundLayout21LayoutArray::value_type> x6) {
MultiplyByMIntStruct x7 = exec_DoIntRound(ctx,x4, x5._super, x6);
Val24Array x8 = Val24Array{x7._super[0]._super, x7._super[1]._super, x7._super[2]._super, x7._super[3]._super, x7._super[4]._super, x7._super[5]._super, x7._super[6]._super, x7._super[7]._super, x7._super[8]._super, x7._super[9]._super, x7._super[10]._super, x7._super[11]._super, x7._super[12]._super, x7._super[13]._super, x7._super[14]._super, x7._super[15]._super, x7._super[16]._super, x7._super[17]._super, x7._super[18]._super, x7._super[19]._super, x7._super[20]._super, x7._super[21]._super, x7._super[22]._super, x7._super[23]._super};
return x8;

}));
return DoIntRoundsStruct{
  ._super = x3};
}
MultiplyByMExtStruct exec_DoExtRound(ExecContext& ctx,Val24Array arg0, Val24Array arg1_0, BoundLayout<DoExtRoundLayout> layout2)   {
// DoExtRound(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:103)
NondetRegStruct24Array x3 = map(Val24Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val24Array::value_type x4, BoundLayout<SBoxLayout24LayoutArray::value_type> x5) {
NondetRegStruct x6 = exec_SBox(ctx,(arg0[to_size_t(x4)] + arg1_0[to_size_t(x4)]), x5);
return x6;

}));
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x7 = (x3[0]._super + x3[1]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x8 = (x3[2]._super + x3[3]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x9 = (x3[1]._super * Val(2));
Val x10_0 = (x9 + x8);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x11_0 = (x3[3]._super * Val(2));
Val x12_0 = (x11_0 + x7);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x13_0 = ((x8 * Val(4)) + x12_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x14_0 = ((x7 * Val(4)) + x10_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x15_0 = (x12_0 + x14_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x16 = (x10_0 + x13_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x17 = (x3[4]._super + x3[5]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x18 = (x3[6]._super + x3[7]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x19 = (x3[5]._super * Val(2));
Val x20 = (x19 + x18);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x21 = (x3[7]._super * Val(2));
Val x22 = (x21 + x17);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x23 = ((x18 * Val(4)) + x22);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x24 = ((x17 * Val(4)) + x20);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x25 = (x22 + x24);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x26 = (x20 + x23);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x27 = (x3[8]._super + x3[9]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x28 = (x3[10]._super + x3[11]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x29 = (x3[9]._super * Val(2));
Val x30 = (x29 + x28);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x31 = (x3[11]._super * Val(2));
Val x32 = (x31 + x27);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x33 = ((x28 * Val(4)) + x32);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x34 = ((x27 * Val(4)) + x30);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x35 = (x32 + x34);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x36 = (x30 + x33);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x37 = (x3[12]._super + x3[13]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x38 = (x3[14]._super + x3[15]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x39 = (x3[13]._super * Val(2));
Val x40 = (x39 + x38);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x41 = (x3[15]._super * Val(2));
Val x42 = (x41 + x37);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x43 = ((x38 * Val(4)) + x42);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x44 = ((x37 * Val(4)) + x40);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x45 = (x42 + x44);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x46 = (x40 + x43);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x47 = (x3[16]._super + x3[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x48 = (x3[18]._super + x3[19]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x49 = (x3[17]._super * Val(2));
Val x50 = (x49 + x48);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x51 = (x3[19]._super * Val(2));
Val x52 = (x51 + x47);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x53 = ((x48 * Val(4)) + x52);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x54 = ((x47 * Val(4)) + x50);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x55 = (x52 + x54);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x56 = (x50 + x53);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x57 = (x3[20]._super + x3[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x58 = (x3[22]._super + x3[23]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x59 = (x3[21]._super * Val(2));
Val x60 = (x59 + x58);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x61 = (x3[23]._super * Val(2));
Val x62 = (x61 + x57);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x63 = ((x58 * Val(4)) + x62);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x64 = ((x57 * Val(4)) + x60);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x65 = (x62 + x64);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x66 = (x60 + x63);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x67 = (((x15_0 + x25) + x35) + x45);
Val x68 = (((x14_0 + x24) + x34) + x44);
Val x69 = (((x16 + x26) + x36) + x46);
Val x70 = (((x13_0 + x23) + x33) + x43);
Val x71 = ((x67 + x55) + x65);
Val x72 = ((x68 + x54) + x64);
Val x73 = ((x69 + x56) + x66);
Val x74 = ((x70 + x53) + x63);
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:65)
MultiplyByMExt_Super_SuperStruct24Array x75 = MultiplyByMExt_Super_SuperStruct24Array{MultiplyByMExt_Super_SuperStruct{
  ._super = (x15_0 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x14_0 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x16 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x13_0 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x25 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x24 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x26 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x23 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x35 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x34 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x36 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x33 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x45 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x44 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x46 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x43 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x55 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x54 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x56 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x53 + x74)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x65 + x71)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x64 + x72)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x66 + x73)}, MultiplyByMExt_Super_SuperStruct{
  ._super = (x63 + x74)}};
return MultiplyByMExtStruct{
  ._super = x75};
}
MultiplyByMExtStruct exec_DoExtRoundByIdx(ExecContext& ctx,Val24Array arg0, Val arg1_0, BoundLayout<DoExtRoundByIdxLayout> layout2)   {
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:115)
OneHot_8_Struct x3 = exec_OneHot_8_(ctx,arg1_0, LAYOUT_LOOKUP(layout2, idxHot));
// MultBy(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:111)
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:119)
Val x4 = (x3.bits[0]._super * Val(262278199));
Val x5 = (x3.bits[0]._super * Val(127253399));
Val x6 = (x3.bits[0]._super * Val(314968988));
Val x7 = (x3.bits[0]._super * Val(246143118));
Val x8 = (x3.bits[0]._super * Val(157582794));
Val x9 = (x3.bits[0]._super * Val(118043943));
Val x10_0 = (x3.bits[0]._super * Val(454905424));
Val x11_0 = (x3.bits[0]._super * Val(815798990));
Val x12_0 = (x3.bits[0]._super * Val(1004040026));
Val x13_0 = (x3.bits[0]._super * Val(1773108264));
Val x14_0 = (x3.bits[0]._super * Val(1066694495));
Val x15_0 = (x3.bits[0]._super * Val(1930780904));
Val x16 = (x3.bits[0]._super * Val(1180307149));
Val x17 = (x3.bits[0]._super * Val(1464793095));
Val x18 = (x3.bits[0]._super * Val(1660766320));
Val x19 = (x3.bits[0]._super * Val(1389166148));
Val x20 = (x3.bits[0]._super * Val(343354132));
Val x21 = (x3.bits[0]._super * Val(1307439985));
Val x22 = (x3.bits[0]._super * Val(638242172));
Val x23 = (x3.bits[0]._super * Val(525458520));
Val x24 = (x3.bits[0]._super * Val(1964135730));
Val x25 = (x3.bits[0]._super * Val(1751797115));
Val x26 = (x3.bits[0]._super * Val(1421525369));
Val x27 = (x3.bits[0]._super * Val(831813382));
Val x28 = (x3.bits[1]._super * Val(695835963));
Val x29 = (x3.bits[1]._super * Val(1845603984));
Val x30 = (x3.bits[1]._super * Val(540703332));
Val x31 = (x3.bits[1]._super * Val(1333667262));
Val x32 = (x3.bits[1]._super * Val(1917861751));
Val x33 = (x3.bits[1]._super * Val(1170029417));
Val x34 = (x3.bits[1]._super * Val(1989924532));
Val x35 = (x3.bits[1]._super * Val(1518763784));
Val x36 = (x3.bits[1]._super * Val(1339793538));
Val x37 = (x3.bits[1]._super * Val(622609176));
Val x38 = (x3.bits[1]._super * Val(686842369));
Val x39 = (x3.bits[1]._super * Val(1737016378));
Val x40 = (x3.bits[1]._super * Val(1282239129));
Val x41 = (x3.bits[1]._super * Val(897025192));
Val x42 = (x3.bits[1]._super * Val(716894289));
Val x43 = (x3.bits[1]._super * Val(1997503974));
Val x44 = (x3.bits[1]._super * Val(395622276));
Val x45 = (x3.bits[1]._super * Val(1201063290));
Val x46 = (x3.bits[1]._super * Val(1917549072));
Val x47 = (x3.bits[1]._super * Val(1150912935));
Val x48 = (x3.bits[1]._super * Val(1687379185));
Val x49 = (x3.bits[1]._super * Val(1507936940));
Val x50 = (x3.bits[1]._super * Val(241306552));
Val x51 = (x3.bits[1]._super * Val(989176635));
Val x52 = (x3.bits[2]._super * Val(1147522062));
Val x53 = (x3.bits[2]._super * Val(27129487));
Val x54 = (x3.bits[2]._super * Val(1257820264));
Val x55 = (x3.bits[2]._super * Val(142102402));
Val x56 = (x3.bits[2]._super * Val(217046702));
Val x57 = (x3.bits[2]._super * Val(1664590951));
Val x58 = (x3.bits[2]._super * Val(855276054));
Val x59 = (x3.bits[2]._super * Val(1215259350));
Val x60 = (x3.bits[2]._super * Val(946500736));
Val x61 = (x3.bits[2]._super * Val(552696906));
Val x62 = (x3.bits[2]._super * Val(1424297384));
Val x63 = (x3.bits[2]._super * Val(538103555));
Val x64 = (x3.bits[2]._super * Val(1608853840));
Val x65 = (x3.bits[2]._super * Val(162510541));
Val x66 = (x3.bits[2]._super * Val(623051854));
Val x67 = (x3.bits[2]._super * Val(1549062383));
Val x68 = (x3.bits[2]._super * Val(1908416316));
Val x69 = (x3.bits[2]._super * Val(1622328571));
Val x70 = (x3.bits[2]._super * Val(1079030649));
Val x71 = (x3.bits[2]._super * Val(1584033957));
Val x72 = (x3.bits[2]._super * Val(1099252725));
Val x73 = (x3.bits[2]._super * Val(1910423126));
Val x74 = (x3.bits[2]._super * Val(447555988));
Val x75 = (x3.bits[2]._super * Val(862495875));
Val x76 = (x3.bits[3]._super * Val(128479034));
Val x77 = (x3.bits[3]._super * Val(1587822577));
Val x78 = (x3.bits[3]._super * Val(608401422));
Val x79 = (x3.bits[3]._super * Val(1290028279));
Val x80 = (x3.bits[3]._super * Val(342857858));
Val x81 = (x3.bits[3]._super * Val(825405577));
Val x82 = (x3.bits[3]._super * Val(427731030));
Val x83 = (x3.bits[3]._super * Val(1718628547));
Val x84 = (x3.bits[3]._super * Val(588764636));
Val x85 = (x3.bits[3]._super * Val(204228775));
Val x86 = (x3.bits[3]._super * Val(1454563174));
Val x87 = (x3.bits[3]._super * Val(1740472809));
Val x88 = (x3.bits[3]._super * Val(1338899225));
Val x89 = (x3.bits[3]._super * Val(1269493554));
Val x90 = (x3.bits[3]._super * Val(53007114));
Val x91 = (x3.bits[3]._super * Val(1647670797));
Val x92 = (x3.bits[3]._super * Val(306391314));
Val x93 = (x3.bits[3]._super * Val(172614232));
Val x94 = (x3.bits[3]._super * Val(51256176));
Val x95 = (x3.bits[3]._super * Val(1221257987));
Val x96 = (x3.bits[3]._super * Val(1239734761));
Val x97 = (x3.bits[3]._super * Val(273790406));
Val x98 = (x3.bits[3]._super * Val(1781980094));
Val x99 = (x3.bits[3]._super * Val(1291790245));
Val x100 = (x3.bits[4]._super * Val(53041581));
Val x101 = (x3.bits[4]._super * Val(723038058));
Val x102 = (x3.bits[4]._super * Val(1439947916));
Val x103 = (x3.bits[4]._super * Val(1136469704));
Val x104 = (x3.bits[4]._super * Val(205609311));
Val x105 = (x3.bits[4]._super * Val(1883820770));
Val x106 = (x3.bits[4]._super * Val(14387587));
Val x107 = (x3.bits[4]._super * Val(720724951));
Val x108 = (x3.bits[4]._super * Val(1854174607));
Val x109 = (x3.bits[4]._super * Val(1629316321));
Val x110 = (x3.bits[4]._super * Val(530151394));
Val x111 = (x3.bits[4]._super * Val(1679178250));
Val x112 = (x3.bits[4]._super * Val(1549779579));
Val x113 = (x3.bits[4]._super * Val(48375137));
Val x114 = (x3.bits[4]._super * Val(976057819));
Val x115 = (x3.bits[4]._super * Val(463976218));
Val x116 = (x3.bits[4]._super * Val(875839332));
Val x117 = (x3.bits[4]._super * Val(1946596189));
Val x118 = (x3.bits[4]._super * Val(434078361));
Val x119 = (x3.bits[4]._super * Val(1878280202));
Val x120 = (x3.bits[4]._super * Val(1363837384));
Val x121 = (x3.bits[4]._super * Val(1470845646));
Val x122 = (x3.bits[4]._super * Val(1792450386));
Val x123 = (x3.bits[4]._super * Val(1040977421));
Val x124 = (x3.bits[5]._super * Val(1209164052));
Val x125 = (x3.bits[5]._super * Val(714957516));
Val x126 = (x3.bits[5]._super * Val(390340387));
Val x127 = (x3.bits[5]._super * Val(1213686459));
Val x128 = (x3.bits[5]._super * Val(790726260));
Val x129 = (x3.bits[5]._super * Val(117294666));
Val x130 = (x3.bits[5]._super * Val(140621810));
Val x131 = (x3.bits[5]._super * Val(993455846));
Val x132 = (x3.bits[5]._super * Val(1889603648));
Val x133 = (x3.bits[5]._super * Val(78845751));
Val x134 = (x3.bits[5]._super * Val(925018226));
Val x135 = (x3.bits[5]._super * Val(708123747));
Val x136 = (x3.bits[5]._super * Val(1647665372));
Val x137 = (x3.bits[5]._super * Val(1649953458));
Val x138 = (x3.bits[5]._super * Val(942439428));
Val x139 = (x3.bits[5]._super * Val(1006235079));
Val x140 = (x3.bits[5]._super * Val(238616145));
Val x141 = (x3.bits[5]._super * Val(930036496));
Val x142 = (x3.bits[5]._super * Val(1401020792));
Val x143 = (x3.bits[5]._super * Val(989618631));
Val x144 = (x3.bits[5]._super * Val(1545325389));
Val x145 = (x3.bits[5]._super * Val(1715719711));
Val x146 = (x3.bits[5]._super * Val(755691969));
Val x147 = (x3.bits[5]._super * Val(150307788));
Val x148 = (x3.bits[6]._super * Val(1567618575));
Val x149 = (x3.bits[6]._super * Val(1663353317));
Val x150 = (x3.bits[6]._super * Val(1950429111));
Val x151 = (x3.bits[6]._super * Val(1891637550));
Val x152 = (x3.bits[6]._super * Val(192082241));
Val x153 = (x3.bits[6]._super * Val(1080533265));
Val x154 = (x3.bits[6]._super * Val(1463323727));
Val x155 = (x3.bits[6]._super * Val(890243564));
Val x156 = (x3.bits[6]._super * Val(158646617));
Val x157 = (x3.bits[6]._super * Val(1402624179));
Val x158 = (x3.bits[6]._super * Val(59510015));
Val x159 = (x3.bits[6]._super * Val(1198261138));
Val x160 = (x3.bits[6]._super * Val(1065075039));
Val x161 = (x3.bits[6]._super * Val(1150410028));
Val x162 = (x3.bits[6]._super * Val(1293938517));
Val x163 = (x3.bits[6]._super * Val(76770019));
Val x164 = (x3.bits[6]._super * Val(1478577620));
Val x165 = (x3.bits[6]._super * Val(1748789933));
Val x166 = (x3.bits[6]._super * Val(457372011));
Val x167 = (x3.bits[6]._super * Val(1841795381));
Val x168 = (x3.bits[6]._super * Val(760115692));
Val x169 = (x3.bits[6]._super * Val(1042892522));
Val x170 = (x3.bits[6]._super * Val(1507649755));
Val x171 = (x3.bits[6]._super * Val(1827572010));
Val x172 = (x3.bits[7]._super * Val(1206940496));
Val x173 = (x3.bits[7]._super * Val(1896271507));
Val x174 = (x3.bits[7]._super * Val(1003792297));
Val x175 = (x3.bits[7]._super * Val(738091882));
Val x176 = (x3.bits[7]._super * Val(1124078057));
Val x177 = (x3.bits[7]._super * Val(1889898));
Val x178 = (x3.bits[7]._super * Val(813674331));
Val x179 = (x3.bits[7]._super * Val(228520958));
Val x180 = (x3.bits[7]._super * Val(1832911930));
Val x181 = (x3.bits[7]._super * Val(781141772));
Val x182 = (x3.bits[7]._super * Val(459826664));
Val x183 = (x3.bits[7]._super * Val(202271745));
Val x184 = (x3.bits[7]._super * Val(1296144415));
Val x185 = (x3.bits[7]._super * Val(1111203133));
Val x186 = (x3.bits[7]._super * Val(1090783436));
Val x187 = (x3.bits[7]._super * Val(641665156));
Val x188 = (x3.bits[7]._super * Val(1393671120));
Val x189 = (x3.bits[7]._super * Val(1303271640));
Val x190 = (x3.bits[7]._super * Val(809508074));
Val x191 = (x3.bits[7]._super * Val(162506101));
Val x192 = (x3.bits[7]._super * Val(1262312258));
Val x193 = (x3.bits[7]._super * Val(1672219447));
Val x194 = (x3.bits[7]._super * Val(1608891156));
Val x195 = (x3.bits[7]._super * Val(1380248020));
// AddConsts(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:107)
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:118)
Val x196 = (((x4 + x28) + x52) + x76);
Val x197 = (((x5 + x29) + x53) + x77);
Val x198 = (((x6 + x30) + x54) + x78);
Val x199 = (((x7 + x31) + x55) + x79);
Val x200 = (((x8 + x32) + x56) + x80);
Val x201 = (((x9 + x33) + x57) + x81);
Val x202 = (((x10_0 + x34) + x58) + x82);
Val x203 = (((x11_0 + x35) + x59) + x83);
Val x204 = (((x12_0 + x36) + x60) + x84);
Val x205 = (((x13_0 + x37) + x61) + x85);
Val x206 = (((x14_0 + x38) + x62) + x86);
Val x207 = (((x15_0 + x39) + x63) + x87);
Val x208 = (((x16 + x40) + x64) + x88);
Val x209 = (((x17 + x41) + x65) + x89);
Val x210 = (((x18 + x42) + x66) + x90);
Val x211 = (((x19 + x43) + x67) + x91);
Val x212 = (((x20 + x44) + x68) + x92);
Val x213 = (((x21 + x45) + x69) + x93);
Val x214 = (((x22 + x46) + x70) + x94);
Val x215 = (((x23 + x47) + x71) + x95);
Val x216 = (((x24 + x48) + x72) + x96);
Val x217 = (((x25 + x49) + x73) + x97);
Val x218 = (((x26 + x50) + x74) + x98);
Val x219 = (((x27 + x51) + x75) + x99);
Val x220 = (((x196 + x100) + x124) + x148);
Val x221 = (((x197 + x101) + x125) + x149);
Val x222 = (((x198 + x102) + x126) + x150);
Val x223 = (((x199 + x103) + x127) + x151);
Val x224 = (((x200 + x104) + x128) + x152);
Val x225 = (((x201 + x105) + x129) + x153);
Val x226 = (((x202 + x106) + x130) + x154);
Val x227 = (((x203 + x107) + x131) + x155);
Val x228 = (((x204 + x108) + x132) + x156);
Val x229 = (((x205 + x109) + x133) + x157);
Val x230 = (((x206 + x110) + x134) + x158);
Val x231 = (((x207 + x111) + x135) + x159);
Val x232 = (((x208 + x112) + x136) + x160);
Val x233 = (((x209 + x113) + x137) + x161);
Val x234 = (((x210 + x114) + x138) + x162);
Val x235 = (((x211 + x115) + x139) + x163);
Val x236 = (((x212 + x116) + x140) + x164);
Val x237 = (((x213 + x117) + x141) + x165);
Val x238 = (((x214 + x118) + x142) + x166);
Val x239 = (((x215 + x119) + x143) + x167);
Val x240 = (((x216 + x120) + x144) + x168);
Val x241 = (((x217 + x121) + x145) + x169);
Val x242 = (((x218 + x122) + x146) + x170);
Val x243 = (((x219 + x123) + x147) + x171);
// DoExtRoundByIdx(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:122)
MultiplyByMExtStruct x244 = exec_DoExtRound(ctx,arg0, Val24Array{(x220 + x172), (x221 + x173), (x222 + x174), (x223 + x175), (x224 + x176), (x225 + x177), (x226 + x178), (x227 + x179), (x228 + x180), (x229 + x181), (x230 + x182), (x231 + x183), (x232 + x184), (x233 + x185), (x234 + x186), (x235 + x187), (x236 + x188), (x237 + x189), (x238 + x190), (x239 + x191), (x240 + x192), (x241 + x193), (x242 + x194), (x243 + x195)}, LAYOUT_LOOKUP(layout2, _super));
return x244;
}
PoseidonStateStruct back_PoseidonState(ExecContext& ctx,Index distance0, BoundLayout<PoseidonStateLayout> layout1)   {
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
NondetRegStruct x2 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, hasState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x3 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, bufOutAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, isElem));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, checkOut));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x7 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, loadTxType));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x8 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x9 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, subState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x10_0 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, bufInAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x11_0 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, count));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x12_0 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, mode));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct24Array x13_0 = map(Val24Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23)}, LAYOUT_LOOKUP(layout1, inner), ([&](Val24Array::value_type x14_0, BoundLayout<NondetRegLayout24LayoutArray::value_type> x15_0) {
NondetRegStruct x16 = back_Reg(ctx,distance0, x15_0);
return x16;

}));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x17 = back_ExtReg(ctx,distance0, LAYOUT_LOOKUP(layout1, zcheck));
return PoseidonStateStruct{
  .hasState = x2,   .stateAddr = x3,   .bufOutAddr = x4,   .isElem = x5,   .checkOut = x6,   .loadTxType = x7,   .nextState = x8,   .subState = x9,   .bufInAddr = x10_0,   .count = x11_0,   .mode = x12_0,   .inner = x13_0,   .zcheck = x17};
}
PoseidonStateStruct exec_PoseidonState(ExecContext& ctx,PoseidonOpDefStruct arg0, Val arg1_0, Val arg2_0, Val arg3, Val arg4, Val arg5, Val24Array arg6, ExtVal arg7, BoundLayout<PoseidonStateLayout> layout8)   {
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:34)
NondetRegStruct x9 = exec_Reg(ctx,arg0.hasState, LAYOUT_LOOKUP(layout8, hasState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:35)
NondetRegStruct x10_0 = exec_Reg(ctx,arg0.stateAddr, LAYOUT_LOOKUP(layout8, stateAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:36)
NondetRegStruct x11_0 = exec_Reg(ctx,arg0.bufOutAddr, LAYOUT_LOOKUP(layout8, bufOutAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:37)
NondetRegStruct x12_0 = exec_Reg(ctx,arg0.isElem, LAYOUT_LOOKUP(layout8, isElem));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:38)
NondetRegStruct x13_0 = exec_Reg(ctx,arg0.checkOut, LAYOUT_LOOKUP(layout8, checkOut));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:39)
NondetRegStruct x14_0 = exec_Reg(ctx,arg0.loadTxType, LAYOUT_LOOKUP(layout8, loadTxType));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:41)
NondetRegStruct x15_0 = exec_Reg(ctx,arg1_0, LAYOUT_LOOKUP(layout8, nextState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:42)
NondetRegStruct x16 = exec_Reg(ctx,arg2_0, LAYOUT_LOOKUP(layout8, subState));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:43)
NondetRegStruct x17 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout8, bufInAddr));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:44)
NondetRegStruct x18 = exec_Reg(ctx,arg4, LAYOUT_LOOKUP(layout8, count));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:45)
NondetRegStruct x19 = exec_Reg(ctx,arg5, LAYOUT_LOOKUP(layout8, mode));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:47)
NondetRegStruct24Array x20 = map(arg6, LAYOUT_LOOKUP(layout8, inner), ([&](Val24Array::value_type x21, BoundLayout<NondetRegLayout24LayoutArray::value_type> x22) {
NondetRegStruct x23 = exec_Reg(ctx,x21, x22);
return x23;

}));
// PoseidonState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:48)
NondetExtRegStruct x24 = exec_ExtReg(ctx,arg7, LAYOUT_LOOKUP(layout8, zcheck));
return PoseidonStateStruct{
  .hasState = x9,   .stateAddr = x10_0,   .bufOutAddr = x11_0,   .isElem = x12_0,   .checkOut = x13_0,   .loadTxType = x14_0,   .nextState = x15_0,   .subState = x16,   .bufInAddr = x17,   .count = x18,   .mode = x19,   .inner = x20,   .zcheck = x24};
}
PoseidonStateStruct exec_PoseidonInvalid(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:52)
EQZ(Val(2013265920), "PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:52)");
// PoseidonInvalid(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:61)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(0),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(0), Val(0), Val(0), Val(0), Val(0), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
ReadAddrStruct exec_ReadAddr(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<ReadAddrLayout> layout2)   {
// ReadAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:78)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, (arg1_0 + Val(1073725440)), LAYOUT_LOOKUP(layout2, addr32));
// ReadAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:79)
Val x4 = (x3._super.high * Val(16384));
// Div(<preamble>:19)
Val x5 = (x3._super.low * Val(1509949441));
return ReadAddrStruct{
  ._super = (x4 + x5)};
}
PoseidonStateStruct exec_PoseidonEcall(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonEcallLayout> layout2)   {
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:84)
ReadAddrStruct x3 = exec_ReadAddr(ctx,arg0, Val(10), LAYOUT_LOOKUP(layout2, stateAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:85)
ReadAddrStruct x4 = exec_ReadAddr(ctx,arg0, Val(11), LAYOUT_LOOKUP(layout2, bufInAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:86)
ReadAddrStruct x5 = exec_ReadAddr(ctx,arg0, Val(12), LAYOUT_LOOKUP(layout2, bufOutAddr));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:87)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, Val(1073725453), LAYOUT_LOOKUP(layout2, bitsAndCount));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:90)
NondetRegStruct x7 = exec_IsZero(ctx,x3._super, LAYOUT_LOOKUP(layout2, _0));
Val x8 = (Val(1) - x7._super);
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:94)
Val x9 = bitAnd(x6._super.high, Val(32768));
NondetRegStruct x10_0 = exec_NondetBitReg(ctx,(x9 * Val(2013204481)), LAYOUT_LOOKUP(layout2, isElem));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:95)
Val x11_0 = bitAnd(x6._super.high, Val(16384));
NondetRegStruct x12_0 = exec_NondetBitReg(ctx,(x11_0 * Val(2013143041)), LAYOUT_LOOKUP(layout2, checkOut));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:96)
Val x13_0 = ((x10_0._super * Val(32768)) + (x12_0._super * Val(16384)));
Val x14_0 = (x6._super.high - x13_0);
EQZ(x14_0, "PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:96)");
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:99)
NondetRegStruct x15_0 = exec_IsZero(ctx,x6._super.low, LAYOUT_LOOKUP(layout2, countZero));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:102)
Val x16 = (Val(1) - x15_0._super);
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:101)
Val x17 = ((x15_0._super * Val(48)) + ((x16 * x8) * Val(17)));
// PoseidonEcall(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:105)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = x8,   .stateAddr = x3._super,   .bufOutAddr = x5._super,   .isElem = x10_0._super,   .checkOut = x12_0._super,   .loadTxType = Val(0)}, (x17 + ((x16 * (Val(1) - x8)) * Val(18))), Val(0), x4._super, x6._super.low, arg1_0, Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonPagingEntry(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// Div(<preamble>:19)
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:110)
Val x3 = (arg1_0 * Val(1342177281));
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:114)
Val x4 = ((Val(1) - x3) * Val(1140850688));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:111)
PoseidonOpDefStruct x5 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = ((x3 * Val(1073741824)) + x4),   .isElem = Val(1),   .checkOut = Val(1),   .loadTxType = Val(1)};
// PoseidonPagingEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:119)
PoseidonStateStruct x6 = exec_PoseidonState(ctx,x5, Val(22), Val(0), Val(0), Val(0), arg1_0, Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x6;
}
PoseidonStateStruct exec_PoseidonEntry(ExecContext& ctx,NondetRegStruct arg0, ValU32Struct arg1_0, Val arg2_0, BoundLayout<PoseidonEntryLayout> layout3)   {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:131)
NondetRegStruct x4 = exec_IsZero(ctx,(arg1_0.low + arg1_0.high), LAYOUT_LOOKUP(layout3, pcZero));
PoseidonStateStruct x5;
if (to_size_t(x4._super)) {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:133)
PoseidonStateStruct x6 = exec_PoseidonPagingEntry(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, _super.arm0._super));
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra0.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra1.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra2.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra3.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra4.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra5.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra6.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra7.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra8.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra9.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra10.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
STORE(LAYOUT_LOOKUP(layout3, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout3, _super.arm0._extra11.count._super), 0), "PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)");
x5 = x6;
} else if (to_size_t((Val(1) - x4._super))) {
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:135)
PoseidonStateStruct x7 = exec_PoseidonEcall(ctx,arg0, arg2_0, LAYOUT_LOOKUP(layout3, _super.arm1));
x5 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonEntry(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:132)
PoseidonStateStruct x8 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout3, _super._super));
return x8;
}
ReadElemStruct exec_ReadElem(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<ReadElemLayout> layout2)   {
// ReadElem(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:140)
GetDataStruct x3 = exec_MemoryRead(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, elem32));
// ReadElem(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:141)
Val x4 = (x3._super.high * Val(65536));
return ReadElemStruct{
  ._super = (x4 + x3._super.low)};
}
PoseidonStateStruct exec_PoseidonLoadState(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadStateLayout> layout2)   {
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:146)
ReadElemStruct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x4, BoundLayout<ReadElemLayout8LayoutArray::value_type> x5) {
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:147)
Val x6 = (arg1_0.stateAddr._super + x4);
ReadElemStruct x7 = exec_ReadElem(ctx,arg0, x6, x5);
return x7;

}));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:156)
PoseidonOpDefStruct x8 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:149)
Val24Array x9 = Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), x3[0]._super, x3[1]._super, x3[2]._super, x3[3]._super, x3[4]._super, x3[5]._super, x3[6]._super, x3[7]._super};
// PoseidonLoadState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:156)
PoseidonStateStruct x10_0 = exec_PoseidonState(ctx,x8, Val(18), Val(0), arg1_0.bufInAddr._super, arg1_0.count._super, arg1_0.mode._super, x9, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x10_0;
}
PoseidonStateStruct exec_PoseidonLoadInShort(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInShortLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:176)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:177)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:178)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:180)
BoundLayout<_globalLayout> x10_0 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x11_0 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10_0, rng));
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x12_0 = (x11_0._super * ExtVal(1, 0, 0, 0));
ExtVal x13_0 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x14_0 = (x12_0 * x11_0._super);
ExtVal x15_0 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x16 = (((x13_0 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x15_0 * x12_0));
ExtVal x17 = (x14_0 * x11_0._super);
ExtVal x18 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x19 = (x17 * x11_0._super);
ExtVal x20 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x21 = (x19 * x11_0._super);
ExtVal x22 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x23 = (((x16 + (x18 * x14_0)) + (x20 * x17)) + (x22 * x19));
ExtVal x24 = (x21 * x11_0._super);
ExtVal x25 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x26 = (x24 * x11_0._super);
ExtVal x27 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x28 = (x26 * x11_0._super);
ExtVal x29 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x30 = (((x23 + (x25 * x21)) + (x27 * x24)) + (x29 * x26));
ExtVal x31 = (x28 * x11_0._super);
ExtVal x32 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x33 = (x31 * x11_0._super);
ExtVal x34 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x35 = (x33 * x11_0._super);
ExtVal x36 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x37 = (((x30 + (x32 * x28)) + (x34 * x31)) + (x36 * x33));
ExtVal x38 = (x35 * x11_0._super);
ExtVal x39 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x40 = (x38 * x11_0._super);
ExtVal x41 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x42 = (x40 * x11_0._super);
ExtVal x43 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x44 = (((x37 + (x39 * x35)) + (x41 * x38)) + (x43 * x40));
ExtVal x45 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x46 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x47 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10_0, rng));
// Pow(zirgen/circuit/rv32im/v2/dsl/poly.zir:10)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x48 = ((x47._super * ExtVal(1, 0, 0, 0)) * x47._super);
ExtVal x49 = (((x48 * x47._super) * x47._super) * x47._super);
ExtVal x50 = (((x49 * x47._super) * x47._super) * x47._super);
ExtVal x51 = (((x50 * x47._super) * x47._super) * x47._super);
ExtVal x52 = (((x51 * x47._super) * x47._super) * x47._super);
ExtVal x53 = (arg1_0.zcheck._super * ((x52 * x47._super) * x47._super));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInShort(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:194)
PoseidonOpDefStruct x54 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
Val x55 = (arg1_0.bufInAddr._super + Val(8));
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x56 = (x5[0]._super.low + x5[0]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x57 = (x5[1]._super.low + x5[1]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x58 = (x5[0]._super.high * Val(2));
Val x59 = (x58 + x57);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x60 = (x5[1]._super.high * Val(2));
Val x61 = (x60 + x56);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x62 = ((x57 * Val(4)) + x61);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x63 = ((x56 * Val(4)) + x59);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x64 = (x61 + x63);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x65 = (x59 + x62);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x66 = (x5[2]._super.low + x5[2]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x67 = (x5[3]._super.low + x5[3]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x68 = (x5[2]._super.high * Val(2));
Val x69 = (x68 + x67);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x70 = (x5[3]._super.high * Val(2));
Val x71 = (x70 + x66);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x72 = ((x67 * Val(4)) + x71);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x73 = ((x66 * Val(4)) + x69);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x74 = (x71 + x73);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x75 = (x69 + x72);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x76 = (x5[4]._super.low + x5[4]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x77 = (x5[5]._super.low + x5[5]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x78 = (x5[4]._super.high * Val(2));
Val x79 = (x78 + x77);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x80 = (x5[5]._super.high * Val(2));
Val x81 = (x80 + x76);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x82 = ((x77 * Val(4)) + x81);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x83 = ((x76 * Val(4)) + x79);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x84 = (x81 + x83);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x85 = (x79 + x82);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x86 = (x5[6]._super.low + x5[6]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x87 = (x5[7]._super.low + x5[7]._super.high);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x88 = (x5[6]._super.high * Val(2));
Val x89 = (x88 + x87);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x90 = (x5[7]._super.high * Val(2));
Val x91 = (x90 + x86);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x92 = ((x87 * Val(4)) + x91);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x93 = ((x86 * Val(4)) + x89);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x94 = (x91 + x93);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x95 = (x89 + x92);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x96 = (arg1_0.inner[16]._super + arg1_0.inner[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x97 = (arg1_0.inner[18]._super + arg1_0.inner[19]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x98 = (arg1_0.inner[17]._super * Val(2));
Val x99 = (x98 + x97);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x100 = (arg1_0.inner[19]._super * Val(2));
Val x101 = (x100 + x96);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x102 = ((x97 * Val(4)) + x101);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x103 = ((x96 * Val(4)) + x99);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x104 = (x101 + x103);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x105 = (x99 + x102);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x106 = (arg1_0.inner[20]._super + arg1_0.inner[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x107 = (arg1_0.inner[22]._super + arg1_0.inner[23]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x108 = (arg1_0.inner[21]._super * Val(2));
Val x109 = (x108 + x107);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x110 = (arg1_0.inner[23]._super * Val(2));
Val x111 = (x110 + x106);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x112 = ((x107 * Val(4)) + x111);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x113 = ((x106 * Val(4)) + x109);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x114 = (x111 + x113);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x115 = (x109 + x112);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x116 = (((x64 + x74) + x84) + x94);
Val x117 = (((x63 + x73) + x83) + x93);
Val x118 = (((x65 + x75) + x85) + x95);
Val x119 = (((x62 + x72) + x82) + x92);
Val x120 = ((x116 + x104) + x114);
Val x121 = ((x117 + x103) + x113);
Val x122 = ((x118 + x105) + x115);
Val x123 = ((x119 + x102) + x112);
PoseidonStateStruct x124 = exec_PoseidonState(ctx,x54, Val(24), Val(0), x55, arg1_0.count._super, arg1_0.mode._super, Val24Array{(x64 + x120), (x63 + x121), (x65 + x122), (x62 + x123), (x74 + x120), (x73 + x121), (x75 + x122), (x72 + x123), (x84 + x120), (x83 + x121), (x85 + x122), (x82 + x123), (x94 + x120), (x93 + x121), (x95 + x122), (x92 + x123), (x104 + x120), (x103 + x121), (x105 + x122), (x102 + x123), (x114 + x120), (x113 + x121), (x115 + x122), (x112 + x123)}, (x53 + ((x44 + (x45 * x42)) + (x46 * (x42 * x11_0._super)))), LAYOUT_LOOKUP(layout2, _super));
return x124;
}
PoseidonStateStruct exec_PoseidonLoadInLow(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInLowLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:199)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:200)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:201)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:203)
BoundLayout<_globalLayout> x10_0 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x11_0 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10_0, rng));
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x12_0 = (x11_0._super * ExtVal(1, 0, 0, 0));
ExtVal x13_0 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x14_0 = (x12_0 * x11_0._super);
ExtVal x15_0 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x16 = (((x13_0 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x15_0 * x12_0));
ExtVal x17 = (x14_0 * x11_0._super);
ExtVal x18 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x19 = (x17 * x11_0._super);
ExtVal x20 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x21 = (x19 * x11_0._super);
ExtVal x22 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x23 = (((x16 + (x18 * x14_0)) + (x20 * x17)) + (x22 * x19));
ExtVal x24 = (x21 * x11_0._super);
ExtVal x25 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x26 = (x24 * x11_0._super);
ExtVal x27 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x28 = (x26 * x11_0._super);
ExtVal x29 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x30 = (((x23 + (x25 * x21)) + (x27 * x24)) + (x29 * x26));
ExtVal x31 = (x28 * x11_0._super);
ExtVal x32 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x33 = (x31 * x11_0._super);
ExtVal x34 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x35 = (x33 * x11_0._super);
ExtVal x36 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x37 = (((x30 + (x32 * x28)) + (x34 * x31)) + (x36 * x33));
ExtVal x38 = (x35 * x11_0._super);
ExtVal x39 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x40 = (x38 * x11_0._super);
ExtVal x41 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x42 = (x40 * x11_0._super);
ExtVal x43 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x44 = (((x37 + (x39 * x35)) + (x41 * x38)) + (x43 * x40));
ExtVal x45 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x46 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x47 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x10_0, rng));
// Pow(zirgen/circuit/rv32im/v2/dsl/poly.zir:10)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x48 = ((x47._super * ExtVal(1, 0, 0, 0)) * x47._super);
ExtVal x49 = (((x48 * x47._super) * x47._super) * x47._super);
ExtVal x50 = (((x49 * x47._super) * x47._super) * x47._super);
ExtVal x51 = (((x50 * x47._super) * x47._super) * x47._super);
ExtVal x52 = (((x51 * x47._super) * x47._super) * x47._super);
ExtVal x53 = (arg1_0.zcheck._super * ((x52 * x47._super) * x47._super));
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:206)
Val x54 = (x5[0]._super.high * Val(65536));
Val x55 = (x5[1]._super.high * Val(65536));
Val x56 = (x5[2]._super.high * Val(65536));
Val x57 = (x5[3]._super.high * Val(65536));
Val x58 = (x5[4]._super.high * Val(65536));
Val x59 = (x5[5]._super.high * Val(65536));
Val x60 = (x5[6]._super.high * Val(65536));
Val x61 = (x5[7]._super.high * Val(65536));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:211)
PoseidonOpDefStruct x62 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
Val x63 = (arg1_0.bufInAddr._super + Val(8));
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:204)
Val24Array x64 = Val24Array{(x54 + x5[0]._super.low), (x55 + x5[1]._super.low), (x56 + x5[2]._super.low), (x57 + x5[3]._super.low), (x58 + x5[4]._super.low), (x59 + x5[5]._super.low), (x60 + x5[6]._super.low), (x61 + x5[7]._super.low), arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonLoadInLow(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:211)
PoseidonStateStruct x65 = exec_PoseidonState(ctx,x62, Val(18), Val(1), x63, arg1_0.count._super, arg1_0.mode._super, x64, (x53 + ((x44 + (x45 * x42)) + (x46 * (x42 * x11_0._super)))), LAYOUT_LOOKUP(layout2, _super));
return x65;
}
PoseidonStateStruct exec_PoseidonLoadInHigh(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInHighLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:216)
OneHot_3_Struct x4 = exec_OneHot_3_(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, txType));
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:217)
GetDataStruct8Array x5 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, loadList), ([&](Val8Array::value_type x6, BoundLayout<MemoryGetLayout8LayoutArray::value_type> x7) {
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:218)
Val x8 = (arg1_0.bufInAddr._super + x6);
GetDataStruct x9 = exec_MemoryGet(ctx,arg0, x8, x4, x7);
return x9;

}));
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:222)
Val x10_0 = (x5[0]._super.high * Val(65536));
Val x11_0 = (x5[1]._super.high * Val(65536));
Val x12_0 = (x11_0 + x5[1]._super.low);
Val x13_0 = (x5[2]._super.high * Val(65536));
Val x14_0 = (x5[3]._super.high * Val(65536));
Val x15_0 = (x14_0 + x5[3]._super.low);
Val x16 = (x5[4]._super.high * Val(65536));
Val x17 = (x5[5]._super.high * Val(65536));
Val x18 = (x17 + x5[5]._super.low);
Val x19 = (x5[6]._super.high * Val(65536));
Val x20 = (x5[7]._super.high * Val(65536));
Val x21 = (x20 + x5[7]._super.low);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:159)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:227)
BoundLayout<_globalLayout> x22 = BIND_LAYOUT(kLayoutGlobal, global3);
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x23 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x22, rng));
// PolyEvalStateReduce(zirgen/circuit/rv32im/v2/dsl/poly.zir:14)
// PolyEval(zirgen/circuit/rv32im/v2/dsl/poly.zir:18)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:170)
ExtVal x24 = (x23._super * ExtVal(1, 0, 0, 0));
ExtVal x25 = (x5[0].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x26 = (x24 * x23._super);
ExtVal x27 = (x5[0].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x28 = (((x25 * ExtVal(1, 0, 0, 0)) + ExtVal(0, 0, 0, 0)) + (x27 * x24));
ExtVal x29 = (x26 * x23._super);
ExtVal x30 = (x5[1].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x31 = (x29 * x23._super);
ExtVal x32 = (x5[1].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x33 = (x31 * x23._super);
ExtVal x34 = (x5[2].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x35 = (((x28 + (x30 * x26)) + (x32 * x29)) + (x34 * x31));
ExtVal x36 = (x33 * x23._super);
ExtVal x37 = (x5[2].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x38 = (x36 * x23._super);
ExtVal x39 = (x5[3].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x40 = (x38 * x23._super);
ExtVal x41 = (x5[3].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x42 = (((x35 + (x37 * x33)) + (x39 * x36)) + (x41 * x38));
ExtVal x43 = (x40 * x23._super);
ExtVal x44 = (x5[4].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x45 = (x43 * x23._super);
ExtVal x46 = (x5[4].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x47 = (x45 * x23._super);
ExtVal x48 = (x5[5].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x49 = (((x42 + (x44 * x40)) + (x46 * x43)) + (x48 * x45));
ExtVal x50 = (x47 * x23._super);
ExtVal x51 = (x5[5].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x52 = (x50 * x23._super);
ExtVal x53 = (x5[6].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x54 = (x52 * x23._super);
ExtVal x55 = (x5[6].diffHigh + ExtVal(0, 0, 0, 0));
ExtVal x56 = (((x49 + (x51 * x47)) + (x53 * x50)) + (x55 * x52));
ExtVal x57 = (x5[7].diffLow + ExtVal(0, 0, 0, 0));
ExtVal x58 = (x5[7].diffHigh + ExtVal(0, 0, 0, 0));
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:160)
NondetExtRegStruct x59 = back_ExtReg(ctx,0, LAYOUT_LOOKUP(x22, rng));
// Pow(zirgen/circuit/rv32im/v2/dsl/poly.zir:10)
// ShiftPoly(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:171)
ExtVal x60 = ((x59._super * ExtVal(1, 0, 0, 0)) * x59._super);
ExtVal x61 = (((x60 * x59._super) * x59._super) * x59._super);
ExtVal x62 = (((x61 * x59._super) * x59._super) * x59._super);
ExtVal x63 = (((x62 * x59._super) * x59._super) * x59._super);
ExtVal x64 = (((x63 * x59._super) * x59._super) * x59._super);
ExtVal x65 = (arg1_0.zcheck._super * ((x64 * x59._super) * x59._super));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonLoadInHigh(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:228)
PoseidonOpDefStruct x66 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
Val x67 = (arg1_0.bufInAddr._super + Val(8));
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:61)
Val x68 = (arg1_0.inner[0]._super + arg1_0.inner[1]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x69 = (arg1_0.inner[2]._super + arg1_0.inner[3]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x70 = (arg1_0.inner[1]._super * Val(2));
Val x71 = (x70 + x69);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x72 = (arg1_0.inner[3]._super * Val(2));
Val x73 = (x72 + x68);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x74 = ((x69 * Val(4)) + x73);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x75 = ((x68 * Val(4)) + x71);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x76 = (x73 + x75);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x77 = (x71 + x74);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x78 = (arg1_0.inner[4]._super + arg1_0.inner[5]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x79 = (arg1_0.inner[6]._super + arg1_0.inner[7]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x80 = (arg1_0.inner[5]._super * Val(2));
Val x81 = (x80 + x79);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x82 = (arg1_0.inner[7]._super * Val(2));
Val x83 = (x82 + x78);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x84 = ((x79 * Val(4)) + x83);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x85 = ((x78 * Val(4)) + x81);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x86 = (x83 + x85);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x87 = (x81 + x84);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x88 = ((x10_0 + x5[0]._super.low) + x12_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x89 = ((x13_0 + x5[2]._super.low) + x15_0);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x90 = ((x12_0 * Val(2)) + x89);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x91 = ((x15_0 * Val(2)) + x88);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x92 = ((x89 * Val(4)) + x91);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x93 = ((x88 * Val(4)) + x90);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x94 = (x91 + x93);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x95 = (x90 + x92);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x96 = ((x16 + x5[4]._super.low) + x18);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x97 = ((x19 + x5[6]._super.low) + x21);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x98 = ((x18 * Val(2)) + x97);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x99 = ((x21 * Val(2)) + x96);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x100 = ((x97 * Val(4)) + x99);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x101 = ((x96 * Val(4)) + x98);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x102 = (x99 + x101);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x103 = (x98 + x100);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x104 = (arg1_0.inner[16]._super + arg1_0.inner[17]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x105 = (arg1_0.inner[18]._super + arg1_0.inner[19]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x106 = (arg1_0.inner[17]._super * Val(2));
Val x107 = (x106 + x105);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x108 = (arg1_0.inner[19]._super * Val(2));
Val x109 = (x108 + x104);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x110 = ((x105 * Val(4)) + x109);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x111 = ((x104 * Val(4)) + x107);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x112 = (x109 + x111);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x113 = (x107 + x110);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:42)
Val x114 = (arg1_0.inner[20]._super + arg1_0.inner[21]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:43)
Val x115 = (arg1_0.inner[22]._super + arg1_0.inner[23]._super);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:44)
Val x116 = (arg1_0.inner[21]._super * Val(2));
Val x117 = (x116 + x115);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:45)
Val x118 = (arg1_0.inner[23]._super * Val(2));
Val x119 = (x118 + x114);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:46)
Val x120 = ((x115 * Val(4)) + x119);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:47)
Val x121 = ((x114 * Val(4)) + x117);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:48)
Val x122 = (x119 + x121);
// MultiplyByCirculant(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:49)
Val x123 = (x117 + x120);
// ReduceVec4(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:54)
// MultiplyByMExt(zirgen/circuit/rv32im/v2/dsl/poseidon2.zir:64)
Val x124 = (((x76 + x86) + x94) + x102);
Val x125 = (((x75 + x85) + x93) + x101);
Val x126 = (((x77 + x87) + x95) + x103);
Val x127 = (((x74 + x84) + x92) + x100);
Val x128 = ((x124 + x112) + x122);
Val x129 = ((x125 + x111) + x121);
Val x130 = ((x126 + x113) + x123);
Val x131 = ((x127 + x110) + x120);
PoseidonStateStruct x132 = exec_PoseidonState(ctx,x66, Val(24), Val(0), x67, arg1_0.count._super, arg1_0.mode._super, Val24Array{(x76 + x128), (x75 + x129), (x77 + x130), (x74 + x131), (x86 + x128), (x85 + x129), (x87 + x130), (x84 + x131), (x94 + x128), (x93 + x129), (x95 + x130), (x92 + x131), (x102 + x128), (x101 + x129), (x103 + x130), (x100 + x131), (x112 + x128), (x111 + x129), (x113 + x130), (x110 + x131), (x122 + x128), (x121 + x129), (x123 + x130), (x120 + x131)}, (x65 + ((x56 + (x57 * x54)) + (x58 * (x54 * x23._super)))), LAYOUT_LOOKUP(layout2, _super));
return x132;
}
PoseidonStateStruct exec_PoseidonLoadIn(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonLoadInLayout> layout2, GlobalBuf global3)   {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:232)
Val x4 = (arg1_0.isElem._super + arg1_0.subState._super);
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:233)
OneHot_3_Struct x5 = exec_OneHot_3_(ctx,x4, LAYOUT_LOOKUP(layout2, _0));
PoseidonStateStruct x6;
if (to_size_t(x5._super[0]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:234)
PoseidonStateStruct x7 = exec_PoseidonLoadInShort(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0), global3);
x6 = x7;
} else if (to_size_t(x5._super[1]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:235)
PoseidonStateStruct x8 = exec_PoseidonLoadInLow(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1), global3);
x6 = x8;
} else if (to_size_t(x5._super[2]._super)) {
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:236)
PoseidonStateStruct x9 = exec_PoseidonLoadInHigh(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm2), global3);
x6 = x9;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonLoadIn(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:233)
PoseidonStateStruct x10_0 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, _super._super));
return x10_0;
}
PoseidonStateStruct exec_PoseidonExtRound(ExecContext& ctx,PoseidonStateStruct arg0, BoundLayout<PoseidonExtRoundLayout> layout1)   {
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:241)
Val x2 = (arg0.subState._super - Val(3));
NondetRegStruct x3 = exec_IsZero(ctx,x2, LAYOUT_LOOKUP(layout1, isRound3));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:242)
Val x4 = (arg0.subState._super - Val(7));
NondetRegStruct x5 = exec_IsZero(ctx,x4, LAYOUT_LOOKUP(layout1, isRound7));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:243)
Val x6 = (arg0.count._super - Val(1));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:244)
NondetRegStruct x7 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout1, lastBlock));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:245)
Val x8 = (arg0.count._super - x5._super);
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:248)
Val x9 = ((Val(1) - x3._super) - x5._super);
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:247)
Val x10_0 = ((x3._super * Val(25)) + (x9 * Val(24)));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:249)
Val x11_0 = (x5._super * (Val(1) - x7._super));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:250)
Val x12_0 = ((x5._super * x7._super) * Val(21));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:251)
Val x13_0 = (arg0.subState._super + Val(1));
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:240)
Val24Array x14_0 = Val24Array{arg0.inner[0]._super, arg0.inner[1]._super, arg0.inner[2]._super, arg0.inner[3]._super, arg0.inner[4]._super, arg0.inner[5]._super, arg0.inner[6]._super, arg0.inner[7]._super, arg0.inner[8]._super, arg0.inner[9]._super, arg0.inner[10]._super, arg0.inner[11]._super, arg0.inner[12]._super, arg0.inner[13]._super, arg0.inner[14]._super, arg0.inner[15]._super, arg0.inner[16]._super, arg0.inner[17]._super, arg0.inner[18]._super, arg0.inner[19]._super, arg0.inner[20]._super, arg0.inner[21]._super, arg0.inner[22]._super, arg0.inner[23]._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:252)
MultiplyByMExtStruct x15_0 = exec_DoExtRoundByIdx(ctx,x14_0, arg0.subState._super, LAYOUT_LOOKUP(layout1, nextInner));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:253)
PoseidonOpDefStruct x16 = PoseidonOpDefStruct{
  .hasState = arg0.hasState._super,   .stateAddr = arg0.stateAddr._super,   .bufOutAddr = arg0.bufOutAddr._super,   .isElem = arg0.isElem._super,   .checkOut = arg0.checkOut._super,   .loadTxType = arg0.loadTxType._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:252)
Val24Array x17 = Val24Array{x15_0._super[0]._super, x15_0._super[1]._super, x15_0._super[2]._super, x15_0._super[3]._super, x15_0._super[4]._super, x15_0._super[5]._super, x15_0._super[6]._super, x15_0._super[7]._super, x15_0._super[8]._super, x15_0._super[9]._super, x15_0._super[10]._super, x15_0._super[11]._super, x15_0._super[12]._super, x15_0._super[13]._super, x15_0._super[14]._super, x15_0._super[15]._super, x15_0._super[16]._super, x15_0._super[17]._super, x15_0._super[18]._super, x15_0._super[19]._super, x15_0._super[20]._super, x15_0._super[21]._super, x15_0._super[22]._super, x15_0._super[23]._super};
// PoseidonExtRound(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:253)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,x16, ((x10_0 + (x11_0 * Val(18))) + x12_0), (x9 * x13_0), arg0.bufInAddr._super, x8, arg0.mode._super, x17, arg0.zcheck._super, LAYOUT_LOOKUP(layout1, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonIntRounds(ExecContext& ctx,PoseidonStateStruct arg0, BoundLayout<PoseidonIntRoundsLayout> layout1)   {
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:256)
Val24Array x2 = Val24Array{arg0.inner[0]._super, arg0.inner[1]._super, arg0.inner[2]._super, arg0.inner[3]._super, arg0.inner[4]._super, arg0.inner[5]._super, arg0.inner[6]._super, arg0.inner[7]._super, arg0.inner[8]._super, arg0.inner[9]._super, arg0.inner[10]._super, arg0.inner[11]._super, arg0.inner[12]._super, arg0.inner[13]._super, arg0.inner[14]._super, arg0.inner[15]._super, arg0.inner[16]._super, arg0.inner[17]._super, arg0.inner[18]._super, arg0.inner[19]._super, arg0.inner[20]._super, arg0.inner[21]._super, arg0.inner[22]._super, arg0.inner[23]._super};
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:257)
DoIntRoundsStruct x3 = exec_DoIntRounds(ctx,x2, LAYOUT_LOOKUP(layout1, nextInner));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonIntRounds(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:258)
PoseidonOpDefStruct x4 = PoseidonOpDefStruct{
  .hasState = arg0.hasState._super,   .stateAddr = arg0.stateAddr._super,   .bufOutAddr = arg0.bufOutAddr._super,   .isElem = arg0.isElem._super,   .checkOut = arg0.checkOut._super,   .loadTxType = arg0.loadTxType._super};
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x4, Val(24), Val(4), arg0.bufInAddr._super, arg0.count._super, arg0.mode._super, x3._super, arg0.zcheck._super, LAYOUT_LOOKUP(layout1, _super));
return x5;
}
PoseidonStateStruct exec_PoseidonCheckOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonCheckOutLayout> layout2)   {
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:262)
PoseidonCheckOut__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonCheckOut__0_SuperLayout8LayoutArray::value_type> x5) {
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:264)
Val x6 = (arg1_0.bufOutAddr._super + x4);
ReadElemStruct x7 = exec_ReadElem(ctx,arg0, x6, LAYOUT_LOOKUP(x5, goal));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:265)
Val x8 = (x7._super - arg1_0.inner[to_size_t(x4)]._super);
EQZ(x8, "PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:265)");
return PoseidonCheckOut__0Struct{
};

}));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:267)
NondetRegStruct x9 = exec_IsZero(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, isNormal));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:268)
Val x10_0 = ((Val(1) - x9._super) * Val(22));
Val x11_0 = ((x9._super * Val(48)) + x10_0);
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:269)
Val x12_0 = (arg1_0.hasState._super * Val(23));
Val x13_0 = (Val(1) - arg1_0.hasState._super);
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:274)
ExtVal x14_0 = inv_0(arg1_0.zcheck._super);
NondetExtRegStruct x15_0 = exec_NondetExtReg(ctx,x14_0, LAYOUT_LOOKUP(layout2, extInv));
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:275)
ExtVal x16 = (x15_0._super * arg1_0.zcheck._super);
EQZ((x16 - ExtVal(1, 0, 0, 0)), "loc(callsite(unknown at  PoseidonCheckOut ( zirgen/circuit/rv32im/v2/dsl/inst_p2.zir :275:10)))");
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:276)
PoseidonOpDefStruct x17 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:261)
Val24Array x18 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonCheckOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:276)
PoseidonStateStruct x19 = exec_PoseidonState(ctx,x17, (x12_0 + (x13_0 * x11_0)), Val(0), Val(0), Val(0), arg1_0.mode._super, x18, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x19;
}
FieldToWordStruct exec_FieldToWord(ExecContext& ctx,Val arg0, BoundLayout<FieldToWordLayout> layout1)   {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:281)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, low));
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:282)
NondetU16RegStruct x3 = exec_U16Reg(ctx,((arg0 - x2._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout1, high));
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:286)
Val x4 = isz(x2._super._super);
NondetRegStruct x5 = exec_NondetBitReg(ctx,x4, LAYOUT_LOOKUP(layout1, lowIsZero));
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:291)
Val x6 = (Val(30720) - x3._super._super);
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:289)
ComponentStruct x7 = ComponentStruct{
};
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:293)
Val x8 = (Val(30719) - x3._super._super);
ComponentStruct x9;
if (to_size_t(x5._super)) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)
EQZ(x2._super._super, "FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:290)");
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:291)
NondetU16RegStruct x10_0 = exec_U16Reg(ctx,x6, LAYOUT_LOOKUP(layout1, _2.arm0._0));
x9 = x7;
} else if (to_size_t((Val(1) - x5._super))) {
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:293)
NondetU16RegStruct x11_0 = exec_U16Reg(ctx,x8, LAYOUT_LOOKUP(layout1, _2.arm1._0));
x9 = x7;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// FieldToWord(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:296)
ValU32Struct x12_0 = ValU32Struct{
  .low = x2._super._super,   .high = x3._super._super};
return FieldToWordStruct{
  .ret = x12_0};
}
PoseidonStateStruct exec_PoseidonStoreOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonStoreOutLayout> layout2)   {
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:300)
PoseidonStoreOut__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonStoreOut__0_SuperLayout8LayoutArray::value_type> x5) {
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:301)
FieldToWordStruct x6 = exec_FieldToWord(ctx,arg1_0.inner[to_size_t(x4)]._super, LAYOUT_LOOKUP(x5, ftw));
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:302)
Val x7 = (arg1_0.bufOutAddr._super + x4);
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, x7, x6.ret, LAYOUT_LOOKUP(x5, mw));
return PoseidonStoreOut__0Struct{
};

}));
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:306)
NondetRegStruct x9 = exec_IsZero(ctx,arg1_0.loadTxType._super, LAYOUT_LOOKUP(layout2, isNormal));
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:307)
Val x10_0 = ((Val(1) - x9._super) * Val(22));
Val x11_0 = ((x9._super * Val(48)) + x10_0);
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:309)
Val x12_0 = (arg1_0.hasState._super * Val(23));
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:310)
Val x13_0 = (Val(1) - arg1_0.hasState._super);
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:311)
ExtVal x14_0 = inv_0(arg1_0.zcheck._super);
NondetExtRegStruct x15_0 = exec_NondetExtReg(ctx,x14_0, LAYOUT_LOOKUP(layout2, extInv));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:312)
PoseidonOpDefStruct x16 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:299)
Val24Array x17 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonStoreOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:312)
PoseidonStateStruct x18 = exec_PoseidonState(ctx,x16, (x12_0 + (x13_0 * x11_0)), Val(0), Val(0), Val(0), arg1_0.mode._super, x17, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x18;
}
PoseidonStateStruct exec_PoseidonDoOut(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonDoOutLayout> layout2)   {
// PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)
Val x3 = (Val(1) - arg1_0.checkOut._super);
PoseidonStateStruct x4;
if (to_size_t(arg1_0.checkOut._super)) {
PoseidonStateStruct x5 = exec_PoseidonCheckOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm0._super));
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra0.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra1.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra2.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra3.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra4.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra5.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra6.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra7.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra8.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra9.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra10.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra11.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra12.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra13.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra14.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra15.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra16.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra17.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra18.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra19.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra20.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra21.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra22.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
STORE(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, _super.arm0._extra23.count._super), 0), "PoseidonDoOut(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:316)");
x4 = x5;
} else if (to_size_t(x3)) {
PoseidonStateStruct x6 = exec_PoseidonStoreOut(ctx,arg0, arg1_0, LAYOUT_LOOKUP(layout2, _super.arm1));
x4 = x6;
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x7 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, _super._super));
return x7;
}
PoseidonStateStruct exec_PoseidonStoreState(ExecContext& ctx,NondetRegStruct arg0, PoseidonStateStruct arg1_0, BoundLayout<PoseidonStoreStateLayout> layout2)   {
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:320)
PoseidonStoreState__0Struct8Array x3 = map(Val8Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val8Array::value_type x4, BoundLayout<PoseidonStoreState__0_SuperLayout8LayoutArray::value_type> x5) {
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:321)
FieldToWordStruct x6 = exec_FieldToWord(ctx,arg1_0.inner[to_size_t((x4 + Val(16)))]._super, LAYOUT_LOOKUP(x5, ftw));
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:322)
Val x7 = (arg1_0.stateAddr._super + x4);
MemoryWriteStruct x8 = exec_MemoryWrite(ctx,arg0, x7, x6.ret, LAYOUT_LOOKUP(x5, mw));
return PoseidonStoreState__0Struct{
};

}));
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// GetDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:72)
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:326)
PoseidonOpDefStruct x9 = PoseidonOpDefStruct{
  .hasState = arg1_0.hasState._super,   .stateAddr = arg1_0.stateAddr._super,   .bufOutAddr = arg1_0.bufOutAddr._super,   .isElem = arg1_0.isElem._super,   .checkOut = arg1_0.checkOut._super,   .loadTxType = arg1_0.loadTxType._super};
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:319)
Val24Array x10_0 = Val24Array{arg1_0.inner[0]._super, arg1_0.inner[1]._super, arg1_0.inner[2]._super, arg1_0.inner[3]._super, arg1_0.inner[4]._super, arg1_0.inner[5]._super, arg1_0.inner[6]._super, arg1_0.inner[7]._super, arg1_0.inner[8]._super, arg1_0.inner[9]._super, arg1_0.inner[10]._super, arg1_0.inner[11]._super, arg1_0.inner[12]._super, arg1_0.inner[13]._super, arg1_0.inner[14]._super, arg1_0.inner[15]._super, arg1_0.inner[16]._super, arg1_0.inner[17]._super, arg1_0.inner[18]._super, arg1_0.inner[19]._super, arg1_0.inner[20]._super, arg1_0.inner[21]._super, arg1_0.inner[22]._super, arg1_0.inner[23]._super};
// PoseidonStoreState(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:326)
PoseidonStateStruct x11_0 = exec_PoseidonState(ctx,x9, Val(48), Val(0), Val(0), Val(0), arg1_0.mode._super, x10_0, ExtVal(0, 0, 0, 0), LAYOUT_LOOKUP(layout2, _super));
return x11_0;
}
IsU24Struct exec_IsU24(ExecContext& ctx,Val arg0, BoundLayout<IsU24Layout> layout1)   {
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:340)
NondetU16RegStruct x2 = exec_NondetU16Reg(ctx,bitAnd(arg0, Val(65535)), LAYOUT_LOOKUP(layout1, low16));
// IsU24(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:341)
NondetRegStruct x3 = exec_U8Reg(ctx,((arg0 - x2._super._super) * Val(2013235201)), LAYOUT_LOOKUP(layout1, _0));
return IsU24Struct{
};
}
PoseidonStateStruct exec_PoseidonPagingLoadNode(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:345)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(1),   .checkOut = Val(1),   .loadTxType = Val(1)};
// NodeIdxToAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:337)
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:357)
Val x4 = (((arg1_0 * Val(2)) + Val(1)) * Val(8));
// PoseidonPagingLoadNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:353)
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x3, Val(18), Val(0), (Val(1140850688) - x4), Val(1), Val(0), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x5;
}
PoseidonStateStruct exec_PoseidonPagingLoadPage(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingLoadPage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:367)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(0),   .checkOut = Val(1),   .loadTxType = Val(1)};
// PoseidonPagingLoadPage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:375)
PoseidonStateStruct x4 = exec_PoseidonState(ctx,x3, Val(18), Val(0), ((arg1_0 - Val(4194304)) * Val(256)), Val(32), Val(1), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x4;
}
PoseidonStateStruct exec_PoseidonPagingLoadDone(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonPagingLoadDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:389)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(1073741824),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(1), Val(0), Val(0), Val(0), Val(2), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
PoseidonStateStruct exec_PoseidonPagingStoreNode(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:393)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(1),   .checkOut = Val(0),   .loadTxType = Val(2)};
// NodeIdxToAddr(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:337)
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:405)
Val x4 = (((arg1_0 * Val(2)) + Val(1)) * Val(8));
// PoseidonPagingStoreNode(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:401)
PoseidonStateStruct x5 = exec_PoseidonState(ctx,x3, Val(18), Val(0), (Val(1140850688) - x4), Val(1), Val(4), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x5;
}
PoseidonStateStruct exec_PoseidonPagingStorePage(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<PoseidonStateLayout> layout2)   {
// PoseidonOpDef(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:8)
// PoseidonPagingStorePage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:415)
PoseidonOpDefStruct x3 = PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = (Val(1140850688) - (arg1_0 * Val(8))),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(2)};
// PoseidonPagingStorePage(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:423)
PoseidonStateStruct x4 = exec_PoseidonState(ctx,x3, Val(18), Val(0), ((arg1_0 - Val(4194304)) * Val(256)), Val(32), Val(3), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout2);
return x4;
}
PoseidonStateStruct exec_PoseidonPagingStoreDone(ExecContext& ctx,BoundLayout<PoseidonStateLayout> layout0)   {
// PoseidonPagingStoreDone(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:437)
PoseidonStateStruct x1 = exec_PoseidonState(ctx,PoseidonOpDefStruct{
  .hasState = Val(0),   .stateAddr = Val(0),   .bufOutAddr = Val(1140850688),   .isElem = Val(0),   .checkOut = Val(0),   .loadTxType = Val(0)}, Val(5), Val(0), Val(0), Val(0), Val(5), Val24Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, ExtVal(0, 0, 0, 0), layout0);
return x1;
}
PoseidonStateStruct exec_PoseidonPaging(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, PoseidonStateStruct arg2_0, BoundLayout<PoseidonPagingLayout> layout3)   {
// NodeAddrToIdx(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:336)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:441)
Val x4 = (Val(1140850688) - arg2_0.bufOutAddr._super);
// Div(<preamble>:19)
Val x5 = (x4 * Val(1761607681));
// nextPagingIdx(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:334)
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:442)
auto [x6, x7] = INVOKE_EXTERN(ctx,nextPagingIdx);
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:443)
NondetRegStruct x8 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout3, curIdx));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:444)
NondetRegStruct x9 = exec_NondetReg(ctx,x7, LAYOUT_LOOKUP(layout3, curMode));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:445)
OneHot_6_Struct x10_0 = exec_OneHot_6_(ctx,x9._super, LAYOUT_LOOKUP(layout3, modeSplit));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:446)
Val x11_0 = (x10_0.bits[0]._super + x10_0.bits[1]._super);
Val x12_0 = (x11_0 + x10_0.bits[2]._super);
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:447)
IsU24Struct x13_0 = exec_IsU24(ctx,x8._super, LAYOUT_LOOKUP(layout3, _0));
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:448)
ComponentStruct x14_0 = ComponentStruct{
};
ComponentStruct x15_0;
if (to_size_t(x12_0)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:449)
IsU24Struct x16 = exec_IsU24(ctx,(x8._super - (x5 + Val(1))), LAYOUT_LOOKUP(layout3, _3.arm0._0));
x15_0 = x14_0;
} else if (to_size_t((Val(1) - x12_0))) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:451)
IsU24Struct x17 = exec_IsU24(ctx,((x5 - Val(1)) - x8._super), LAYOUT_LOOKUP(layout3, _3.arm1._0));
x15_0 = x14_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:454)
NondetRegStruct x18 = exec_BitReg(ctx,(x9._super - arg1_0), LAYOUT_LOOKUP(layout3, _4));
PoseidonStateStruct x19;
if (to_size_t(x10_0._super[0]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:456)
PoseidonStateStruct x20 = exec_PoseidonPagingLoadNode(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm0));
x19 = x20;
} else if (to_size_t(x10_0._super[1]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:457)
PoseidonStateStruct x21 = exec_PoseidonPagingLoadPage(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm1));
x19 = x21;
} else if (to_size_t(x10_0._super[2]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:458)
PoseidonStateStruct x22 = exec_PoseidonPagingLoadDone(ctx,LAYOUT_LOOKUP(layout3, _super.arm2));
x19 = x22;
} else if (to_size_t(x10_0._super[3]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:459)
PoseidonStateStruct x23 = exec_PoseidonPagingStorePage(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm3));
x19 = x23;
} else if (to_size_t(x10_0._super[4]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:460)
PoseidonStateStruct x24 = exec_PoseidonPagingStoreNode(ctx,arg0, x8._super, LAYOUT_LOOKUP(layout3, _super.arm4));
x19 = x24;
} else if (to_size_t(x10_0._super[5]._super)) {
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:461)
PoseidonStateStruct x25 = exec_PoseidonPagingStoreDone(ctx,LAYOUT_LOOKUP(layout3, _super.arm5));
x19 = x25;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// PoseidonPaging(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:455)
PoseidonStateStruct x26 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout3, _super._super));
return x26;
}
InstOutputBaseStruct exec_Poseidon0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Poseidon0Layout> layout2, GlobalBuf global3)   {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:466)
DoCycleTableStruct x4 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:467)
Val x5 = (arg1_0.state - (arg1_0.minor + Val(16)));
EQZ(x5, "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:467)");
PoseidonStateStruct x6;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:470)
PoseidonStateStruct x7 = exec_PoseidonEntry(ctx,arg0, arg1_0.pcU32, arg1_0.mode, LAYOUT_LOOKUP(layout2, stateRedef.arm0._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:471)
PoseidonStateStruct x8 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x9 = exec_PoseidonLoadState(ctx,arg0, x8, LAYOUT_LOOKUP(layout2, stateRedef.arm1._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:472)
PoseidonStateStruct x10_0 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x11_0 = exec_PoseidonLoadIn(ctx,arg0, x10_0, LAYOUT_LOOKUP(layout2, stateRedef.arm2._super), global3);
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x11_0;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:473)
PoseidonStateStruct x12_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra46.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra47.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra48.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra49.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:474)
PoseidonStateStruct x13_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra46.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra46.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra47.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra47.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra48.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra48.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra49.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra49.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x13_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:475)
PoseidonStateStruct x14_0 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x15_0 = exec_PoseidonDoOut(ctx,arg0, x14_0, LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x15_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:476)
PoseidonStateStruct x16 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x17 = exec_PoseidonPaging(ctx,arg0, arg1_0.mode, x16, LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra36.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra37.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra38.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra39.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra40.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra40.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra41.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra41.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra42.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra42.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra43.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra43.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra44.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra44.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra45.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra45.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x17;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:477)
PoseidonStateStruct x18 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x19 = exec_PoseidonStoreState(ctx,arg0, x18, LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:469)");
x6 = x19;
} else {
   assert(0 && "Reached unreachable mux arm");
}
PoseidonStateStruct x20 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// Poseidon0(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:479)
InstOutputBaseStruct x21 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x20.nextState._super,   .newMode = x20.mode._super};
return x21;
}
InstOutputBaseStruct exec_Poseidon1(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Poseidon1Layout> layout2)   {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:483)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:484)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(24)));
EQZ(x4, "Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:484)");
PoseidonStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:487)
PoseidonStateStruct x6 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x7 = exec_PoseidonExtRound(ctx,x6, LAYOUT_LOOKUP(layout2, stateRedef.arm0));
x5 = x7;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:488)
PoseidonStateStruct x8 = back_PoseidonState(ctx,1, LAYOUT_LOOKUP(layout2, state));
PoseidonStateStruct x9 = exec_PoseidonIntRounds(ctx,x8, LAYOUT_LOOKUP(layout2, stateRedef.arm1));
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:489)
PoseidonStateStruct x10_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm2));
x5 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:490)
PoseidonStateStruct x11_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3));
x5 = x11_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:491)
PoseidonStateStruct x12_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4));
x5 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:492)
PoseidonStateStruct x13_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5));
x5 = x13_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:493)
PoseidonStateStruct x14_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6));
x5 = x14_0;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:494)
PoseidonStateStruct x15_0 = exec_PoseidonInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7));
x5 = x15_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:486)
PoseidonStateStruct x16 = back_PoseidonState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// Poseidon1(zirgen/circuit/rv32im/v2/dsl/inst_p2.zir:496)
InstOutputBaseStruct x17 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x16.nextState._super,   .newMode = x16.mode._super};
return x17;
}
CarryExtractStruct exec_CarryExtract(ExecContext& ctx,Val arg0, BoundLayout<CarryExtractLayout> layout1)   {
// Div(<preamble>:19)
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:34)
Val x2 = (bitAnd(arg0, Val(983040)) * Val(2013235201));
NondetRegStruct x3 = exec_NondetBitReg(ctx,bitAnd(x2, Val(1)), LAYOUT_LOOKUP(layout1, bit0));
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:35)
NondetRegStruct x4 = exec_NondetBitReg(ctx,(bitAnd(x2, Val(2)) * Val(1006632961)), LAYOUT_LOOKUP(layout1, bit1));
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:36)
NondetRegStruct x5 = exec_NondetBitReg(ctx,(bitAnd(x2, Val(4)) * Val(1509949441)), LAYOUT_LOOKUP(layout1, bit2));
// CarryExtract(zirgen/circuit/rv32im/v2/dsl/sha2.zir:37)
Val x6 = ((x5._super * Val(4)) + (x4._super * Val(2)));
Val x7 = (x6 + x3._super);
return CarryExtractStruct{
  .carry = x7,   .out = (arg0 - (x7 * Val(65536)))};
}
UnpackReg_32__16_Struct exec_UnpackReg_32__16_(ExecContext& ctx,Val2Array arg0, BoundLayout<UnpackReg_32__16_Layout> layout1)   {
// Div(<preamble>:15)
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:34)
DivStruct x2 = DivStruct{
  ._super = bitAnd(arg0[0], Val(1))};
// Div(<preamble>:19)
Val x3 = (bitAnd(arg0[0], Val(2)) * Val(1006632961));
Val x4 = (bitAnd(arg0[0], Val(4)) * Val(1509949441));
Val x5 = (bitAnd(arg0[0], Val(8)) * Val(1761607681));
Val x6 = (bitAnd(arg0[0], Val(16)) * Val(1887436801));
Val x7 = (bitAnd(arg0[0], Val(32)) * Val(1950351361));
Val x8 = (bitAnd(arg0[0], Val(64)) * Val(1981808641));
Val x9 = (bitAnd(arg0[0], Val(128)) * Val(1997537281));
Val x10_0 = (bitAnd(arg0[0], Val(256)) * Val(2005401601));
Val x11_0 = (bitAnd(arg0[0], Val(512)) * Val(2009333761));
Val x12_0 = (bitAnd(arg0[0], Val(1024)) * Val(2011299841));
Val x13_0 = (bitAnd(arg0[0], Val(2048)) * Val(2012282881));
Val x14_0 = (bitAnd(arg0[0], Val(4096)) * Val(2012774401));
Val x15_0 = (bitAnd(arg0[0], Val(8192)) * Val(2013020161));
Val x16 = (bitAnd(arg0[0], Val(16384)) * Val(2013143041));
Val x17 = (bitAnd(arg0[0], Val(32768)) * Val(2013204481));
// Div(<preamble>:15)
DivStruct x18 = DivStruct{
  ._super = bitAnd(arg0[1], Val(1))};
// Div(<preamble>:19)
Val x19 = (bitAnd(arg0[1], Val(2)) * Val(1006632961));
Val x20 = (bitAnd(arg0[1], Val(4)) * Val(1509949441));
Val x21 = (bitAnd(arg0[1], Val(8)) * Val(1761607681));
Val x22 = (bitAnd(arg0[1], Val(16)) * Val(1887436801));
Val x23 = (bitAnd(arg0[1], Val(32)) * Val(1950351361));
Val x24 = (bitAnd(arg0[1], Val(64)) * Val(1981808641));
Val x25 = (bitAnd(arg0[1], Val(128)) * Val(1997537281));
Val x26 = (bitAnd(arg0[1], Val(256)) * Val(2005401601));
Val x27 = (bitAnd(arg0[1], Val(512)) * Val(2009333761));
Val x28 = (bitAnd(arg0[1], Val(1024)) * Val(2011299841));
Val x29 = (bitAnd(arg0[1], Val(2048)) * Val(2012282881));
Val x30 = (bitAnd(arg0[1], Val(4096)) * Val(2012774401));
Val x31 = (bitAnd(arg0[1], Val(8192)) * Val(2013020161));
Val x32 = (bitAnd(arg0[1], Val(16384)) * Val(2013143041));
Val x33 = (bitAnd(arg0[1], Val(32768)) * Val(2013204481));
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:35)
NondetRegStruct32Array x34 = map(Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val32Array::value_type x35, BoundLayout<NondetRegLayout32LayoutArray::value_type> x36) {
NondetRegStruct x37 = exec_NondetBitReg(ctx,DivStruct32Array{x2, DivStruct{
  ._super = x3}, DivStruct{
  ._super = x4}, DivStruct{
  ._super = x5}, DivStruct{
  ._super = x6}, DivStruct{
  ._super = x7}, DivStruct{
  ._super = x8}, DivStruct{
  ._super = x9}, DivStruct{
  ._super = x10_0}, DivStruct{
  ._super = x11_0}, DivStruct{
  ._super = x12_0}, DivStruct{
  ._super = x13_0}, DivStruct{
  ._super = x14_0}, DivStruct{
  ._super = x15_0}, DivStruct{
  ._super = x16}, DivStruct{
  ._super = x17}, x18, DivStruct{
  ._super = x19}, DivStruct{
  ._super = x20}, DivStruct{
  ._super = x21}, DivStruct{
  ._super = x22}, DivStruct{
  ._super = x23}, DivStruct{
  ._super = x24}, DivStruct{
  ._super = x25}, DivStruct{
  ._super = x26}, DivStruct{
  ._super = x27}, DivStruct{
  ._super = x28}, DivStruct{
  ._super = x29}, DivStruct{
  ._super = x30}, DivStruct{
  ._super = x31}, DivStruct{
  ._super = x32}, DivStruct{
  ._super = x33}}[to_size_t(x35)]._super, x36);
return x37;

}));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// UnpackReg(zirgen/circuit/rv32im/v2/dsl/pack.zir:36)
Val x38 = (x34[1]._super * Val(2));
Val x39 = (x34[2]._super * Val(4));
Val x40 = (x34[3]._super * Val(8));
Val x41 = (x34[4]._super * Val(16));
Val x42 = (x34[5]._super * Val(32));
Val x43 = (x34[6]._super * Val(64));
Val x44 = (x34[7]._super * Val(128));
Val x45 = (x34[8]._super * Val(256));
Val x46 = (x34[9]._super * Val(512));
Val x47 = (x34[10]._super * Val(1024));
Val x48 = (x34[11]._super * Val(2048));
Val x49 = (x34[12]._super * Val(4096));
Val x50 = (x34[13]._super * Val(8192));
Val x51 = (x34[14]._super * Val(16384));
Val x52 = (x34[15]._super * Val(32768));
Val x53 = (x34[0]._super + x38);
Val x54 = (((x53 + x39) + x40) + x41);
Val x55 = (((x54 + x42) + x43) + x44);
Val x56 = (((x55 + x45) + x46) + x47);
Val x57 = (((x56 + x48) + x49) + x50);
Val x58 = (x34[17]._super * Val(2));
Val x59 = (x34[18]._super * Val(4));
Val x60 = (x34[19]._super * Val(8));
Val x61 = (x34[20]._super * Val(16));
Val x62 = (x34[21]._super * Val(32));
Val x63 = (x34[22]._super * Val(64));
Val x64 = (x34[23]._super * Val(128));
Val x65 = (x34[24]._super * Val(256));
Val x66 = (x34[25]._super * Val(512));
Val x67 = (x34[26]._super * Val(1024));
Val x68 = (x34[27]._super * Val(2048));
Val x69 = (x34[28]._super * Val(4096));
Val x70 = (x34[29]._super * Val(8192));
Val x71 = (x34[30]._super * Val(16384));
Val x72 = (x34[31]._super * Val(32768));
Val x73 = (x34[16]._super + x58);
Val x74 = (((x73 + x59) + x60) + x61);
Val x75 = (((x74 + x62) + x63) + x64);
Val x76 = (((x75 + x65) + x66) + x67);
Val x77 = (((x76 + x68) + x69) + x70);
// EqArr(zirgen/circuit/rv32im/v2/dsl/arr.zir:32)
Val x78 = (((x57 + x51) + x52) - arg0[0]);
EQZ(x78, "loc(callsite( EqArr ( zirgen/circuit/rv32im/v2/dsl/arr.zir :32:11) at  UnpackReg ( zirgen/circuit/rv32im/v2/dsl/pack.zir :36:14)))");
Val x79 = (((x77 + x71) + x72) - arg0[1]);
EQZ(x79, "loc(callsite( EqArr ( zirgen/circuit/rv32im/v2/dsl/arr.zir :32:11) at  UnpackReg ( zirgen/circuit/rv32im/v2/dsl/pack.zir :36:14)))");
return UnpackReg_32__16_Struct{
  ._super = x34};
}
UnpackReg_32__16_Struct exec_CarryAndExpand(ExecContext& ctx,Val2Array arg0, BoundLayout<CarryAndExpandLayout> layout1)   {
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:42)
CarryExtractStruct x2 = exec_CarryExtract(ctx,arg0[0], LAYOUT_LOOKUP(layout1, lowCarry));
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:43)
CarryExtractStruct x3 = exec_CarryExtract(ctx,(arg0[1] + x2.carry), LAYOUT_LOOKUP(layout1, highCarry));
// CarryAndExpand(zirgen/circuit/rv32im/v2/dsl/sha2.zir:44)
UnpackReg_32__16_Struct x4 = exec_UnpackReg_32__16_(ctx,Val2Array{x2.out, x3.out}, LAYOUT_LOOKUP(layout1, _super));
return x4;
}
ShaStateStruct back_ShaState(ExecContext& ctx,Index distance0, BoundLayout<ShaStateLayout> layout1)   {
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
NondetRegStruct x2 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateInAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x3 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, stateOutAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, dataAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, count));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x6 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, kAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x7 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, round));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x8 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
Val32Array x9 = Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)};
ShaStateAStruct32Array x10_0 = map(x9, LAYOUT_LOOKUP(layout1, a), ([&](Val32Array::value_type x11_0, BoundLayout<NondetRegLayout32LayoutArray::value_type> x12_0) {
NondetRegStruct x13_0 = back_NondetReg(ctx,distance0, x12_0);
return ShaStateAStruct{
  ._super = x13_0};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
ShaStateEStruct32Array x14_0 = map(x9, LAYOUT_LOOKUP(layout1, e), ([&](Val32Array::value_type x15_0, BoundLayout<NondetRegLayout32LayoutArray::value_type> x16) {
NondetRegStruct x17 = back_NondetReg(ctx,distance0, x16);
return ShaStateEStruct{
  ._super = x17};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
ShaStateWStruct32Array x18 = map(x9, LAYOUT_LOOKUP(layout1, w), ([&](Val32Array::value_type x19, BoundLayout<NondetRegLayout32LayoutArray::value_type> x20) {
NondetRegStruct x21 = back_NondetReg(ctx,distance0, x20);
return ShaStateWStruct{
  ._super = x21};

}));
return ShaStateStruct{
  .stateInAddr = x2,   .stateOutAddr = x3,   .dataAddr = x4,   .count = x5,   .kAddr = x6,   .round = x7,   .nextState = x8,   .a = x10_0,   .e = x14_0,   .w = x18};
}
ShaStateStruct exec_ShaState(ExecContext& ctx,Val32Array arg0, Val32Array arg1_0, Val32Array arg2_0, Val arg3, Val arg4, Val arg5, Val arg6, Val arg7, Val arg8, Val arg9, BoundLayout<ShaStateLayout> layout10)   {
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:20)
NondetRegStruct x11_0 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout10, stateInAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:21)
NondetRegStruct x12_0 = exec_Reg(ctx,arg4, LAYOUT_LOOKUP(layout10, stateOutAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:22)
NondetRegStruct x13_0 = exec_Reg(ctx,arg5, LAYOUT_LOOKUP(layout10, dataAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:23)
NondetRegStruct x14_0 = exec_Reg(ctx,arg6, LAYOUT_LOOKUP(layout10, count));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:24)
NondetRegStruct x15_0 = exec_Reg(ctx,arg7, LAYOUT_LOOKUP(layout10, kAddr));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:25)
NondetRegStruct x16 = exec_Reg(ctx,arg8, LAYOUT_LOOKUP(layout10, round));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:26)
NondetRegStruct x17 = exec_Reg(ctx,arg9, LAYOUT_LOOKUP(layout10, nextState));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:27)
ShaStateAStruct32Array x18 = map(arg0, LAYOUT_LOOKUP(layout10, a), ([&](Val32Array::value_type x19, BoundLayout<NondetRegLayout32LayoutArray::value_type> x20) {
NondetRegStruct x21 = exec_NondetReg(ctx,x19, x20);
return ShaStateAStruct{
  ._super = x21};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:28)
ShaStateEStruct32Array x22 = map(arg1_0, LAYOUT_LOOKUP(layout10, e), ([&](Val32Array::value_type x23, BoundLayout<NondetRegLayout32LayoutArray::value_type> x24) {
NondetRegStruct x25 = exec_NondetReg(ctx,x23, x24);
return ShaStateEStruct{
  ._super = x25};

}));
// ShaState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:29)
ShaStateWStruct32Array x26 = map(arg2_0, LAYOUT_LOOKUP(layout10, w), ([&](Val32Array::value_type x27, BoundLayout<NondetRegLayout32LayoutArray::value_type> x28) {
NondetRegStruct x29 = exec_NondetReg(ctx,x27, x28);
return ShaStateWStruct{
  ._super = x29};

}));
return ShaStateStruct{
  .stateInAddr = x11_0,   .stateOutAddr = x12_0,   .dataAddr = x13_0,   .count = x14_0,   .kAddr = x15_0,   .round = x16,   .nextState = x17,   .a = x18,   .e = x22,   .w = x26};
}
ShaStateStruct exec_ShaInvalid(ExecContext& ctx,BoundLayout<ShaStateLayout> layout0)   {
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:33)
EQZ(Val(2013265920), "ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:33)");
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:35)
Val32Array x1 = Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
// ShaInvalid(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:34)
ShaStateStruct x2 = exec_ShaState(ctx,x1, x1, x1, Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(48), layout0);
return x2;
}
ShaStateStruct exec_ShaEcall(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<ShaEcallLayout> layout1)   {
// Log(<preamble>:22)
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:44)
INVOKE_EXTERN(ctx,log, "SHA ECALL", std::initializer_list<Val>{});
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:46)
ReadAddrStruct x2 = exec_ReadAddr(ctx,arg0, Val(10), LAYOUT_LOOKUP(layout1, stateInAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:47)
ReadAddrStruct x3 = exec_ReadAddr(ctx,arg0, Val(11), LAYOUT_LOOKUP(layout1, stateOutAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:48)
ReadAddrStruct x4 = exec_ReadAddr(ctx,arg0, Val(12), LAYOUT_LOOKUP(layout1, dataAddr));
// Log(<preamble>:22)
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:49)
INVOKE_EXTERN(ctx,log, "Data Addr: ", std::initializer_list<Val>{x4._super});
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:50)
GetDataStruct x5 = exec_MemoryRead(ctx,arg0, Val(1073725453), LAYOUT_LOOKUP(layout1, _0));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:51)
ReadAddrStruct x6 = exec_ReadAddr(ctx,arg0, Val(14), LAYOUT_LOOKUP(layout1, kAddr));
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:53)
Val32Array x7 = Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)};
// ShaEcall(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:52)
ShaStateStruct x8 = exec_ShaState(ctx,x7, x7, x7, x2._super, x3._super, x4._super, x5._super.low, x6._super, Val(0), Val(33), LAYOUT_LOOKUP(layout1, _super));
return x8;
}
ShaStateStruct exec_ShaLoadState(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, BoundLayout<ShaLoadStateLayout> layout2)   {
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:99)
Val x3 = (Val(3) - arg1_0.round._super);
NondetRegStruct x4 = exec_IsZero(ctx,x3, LAYOUT_LOOKUP(layout2, lastRound));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:100)
NondetRegStruct x5 = exec_IsZero(ctx,arg1_0.count._super, LAYOUT_LOOKUP(layout2, countZero));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:101)
Val x6 = (Val(1) - x4._super);
Val x7;
if (to_size_t(x4._super)) {
Val x8;
if (to_size_t(x5._super)) {
x8 = Val(48);
} else if (to_size_t((Val(1) - x5._super))) {
x8 = Val(34);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x7 = x8;
} else if (to_size_t(x6)) {
x7 = Val(33);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:110)
Val x9 = (arg1_0.stateInAddr._super + Val(3));
GetDataStruct x10_0 = exec_MemoryRead(ctx,arg0, (x9 - arg1_0.round._super), LAYOUT_LOOKUP(layout2, a32));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:111)
Val x11_0 = (arg1_0.stateInAddr._super + Val(7));
GetDataStruct x12_0 = exec_MemoryRead(ctx,arg0, (x11_0 - arg1_0.round._super), LAYOUT_LOOKUP(layout2, e32));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:112)
Val x13_0 = (arg1_0.stateOutAddr._super + Val(3));
MemoryWriteStruct x14_0 = exec_MemoryWrite(ctx,arg0, (x13_0 - arg1_0.round._super), x10_0._super, LAYOUT_LOOKUP(layout2, _0));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:113)
Val x15_0 = (arg1_0.stateOutAddr._super + Val(7));
MemoryWriteStruct x16 = exec_MemoryWrite(ctx,arg0, (x15_0 - arg1_0.round._super), x12_0._super, LAYOUT_LOOKUP(layout2, _1));
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:71)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:115)
Val x17 = bitAnd(x10_0._super.low, Val(1));
Val x18 = bitAnd(x10_0._super.low, Val(2));
Val x19 = bitAnd(x10_0._super.low, Val(4));
Val x20 = bitAnd(x10_0._super.low, Val(8));
Val x21 = bitAnd(x10_0._super.low, Val(16));
Val x22 = bitAnd(x10_0._super.low, Val(32));
Val x23 = bitAnd(x10_0._super.low, Val(64));
Val x24 = bitAnd(x10_0._super.low, Val(128));
Val x25 = bitAnd(x10_0._super.low, Val(256));
Val x26 = bitAnd(x10_0._super.low, Val(512));
Val x27 = bitAnd(x10_0._super.low, Val(1024));
Val x28 = bitAnd(x10_0._super.low, Val(2048));
Val x29 = bitAnd(x10_0._super.low, Val(4096));
Val x30 = bitAnd(x10_0._super.low, Val(8192));
Val x31 = bitAnd(x10_0._super.low, Val(16384));
Val x32 = bitAnd(x10_0._super.low, Val(32768));
Val x33 = bitAnd(x10_0._super.high, Val(1));
Val x34 = bitAnd(x10_0._super.high, Val(2));
Val x35 = bitAnd(x10_0._super.high, Val(4));
Val x36 = bitAnd(x10_0._super.high, Val(8));
Val x37 = bitAnd(x10_0._super.high, Val(16));
Val x38 = bitAnd(x10_0._super.high, Val(32));
Val x39 = bitAnd(x10_0._super.high, Val(64));
Val x40 = bitAnd(x10_0._super.high, Val(128));
Val x41 = bitAnd(x10_0._super.high, Val(256));
Val x42 = bitAnd(x10_0._super.high, Val(512));
Val x43 = bitAnd(x10_0._super.high, Val(1024));
Val x44 = bitAnd(x10_0._super.high, Val(2048));
Val x45 = bitAnd(x10_0._super.high, Val(4096));
Val x46 = bitAnd(x10_0._super.high, Val(8192));
Val x47 = bitAnd(x10_0._super.high, Val(16384));
Val x48 = bitAnd(x10_0._super.high, Val(32768));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:116)
Val x49 = bitAnd(x12_0._super.low, Val(1));
Val x50 = bitAnd(x12_0._super.low, Val(2));
Val x51 = bitAnd(x12_0._super.low, Val(4));
Val x52 = bitAnd(x12_0._super.low, Val(8));
Val x53 = bitAnd(x12_0._super.low, Val(16));
Val x54 = bitAnd(x12_0._super.low, Val(32));
Val x55 = bitAnd(x12_0._super.low, Val(64));
Val x56 = bitAnd(x12_0._super.low, Val(128));
Val x57 = bitAnd(x12_0._super.low, Val(256));
Val x58 = bitAnd(x12_0._super.low, Val(512));
Val x59 = bitAnd(x12_0._super.low, Val(1024));
Val x60 = bitAnd(x12_0._super.low, Val(2048));
Val x61 = bitAnd(x12_0._super.low, Val(4096));
Val x62 = bitAnd(x12_0._super.low, Val(8192));
Val x63 = bitAnd(x12_0._super.low, Val(16384));
Val x64 = bitAnd(x12_0._super.low, Val(32768));
Val x65 = bitAnd(x12_0._super.high, Val(1));
Val x66 = bitAnd(x12_0._super.high, Val(2));
Val x67 = bitAnd(x12_0._super.high, Val(4));
Val x68 = bitAnd(x12_0._super.high, Val(8));
Val x69 = bitAnd(x12_0._super.high, Val(16));
Val x70 = bitAnd(x12_0._super.high, Val(32));
Val x71 = bitAnd(x12_0._super.high, Val(64));
Val x72 = bitAnd(x12_0._super.high, Val(128));
Val x73 = bitAnd(x12_0._super.high, Val(256));
Val x74 = bitAnd(x12_0._super.high, Val(512));
Val x75 = bitAnd(x12_0._super.high, Val(1024));
Val x76 = bitAnd(x12_0._super.high, Val(2048));
Val x77 = bitAnd(x12_0._super.high, Val(4096));
Val x78 = bitAnd(x12_0._super.high, Val(8192));
Val x79 = bitAnd(x12_0._super.high, Val(16384));
Val x80 = bitAnd(x12_0._super.high, Val(32768));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:123)
Val x81 = (arg1_0.round._super + Val(1));
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:114)
ShaStateStruct x82 = exec_ShaState(ctx,Val32Array{(x41 * Val(2005401601)), (x42 * Val(2009333761)), (x43 * Val(2011299841)), (x44 * Val(2012282881)), (x45 * Val(2012774401)), (x46 * Val(2013020161)), (x47 * Val(2013143041)), (x48 * Val(2013204481)), x33, (x34 * Val(1006632961)), (x35 * Val(1509949441)), (x36 * Val(1761607681)), (x37 * Val(1887436801)), (x38 * Val(1950351361)), (x39 * Val(1981808641)), (x40 * Val(1997537281)), (x25 * Val(2005401601)), (x26 * Val(2009333761)), (x27 * Val(2011299841)), (x28 * Val(2012282881)), (x29 * Val(2012774401)), (x30 * Val(2013020161)), (x31 * Val(2013143041)), (x32 * Val(2013204481)), x17, (x18 * Val(1006632961)), (x19 * Val(1509949441)), (x20 * Val(1761607681)), (x21 * Val(1887436801)), (x22 * Val(1950351361)), (x23 * Val(1981808641)), (x24 * Val(1997537281))}, Val32Array{(x73 * Val(2005401601)), (x74 * Val(2009333761)), (x75 * Val(2011299841)), (x76 * Val(2012282881)), (x77 * Val(2012774401)), (x78 * Val(2013020161)), (x79 * Val(2013143041)), (x80 * Val(2013204481)), x65, (x66 * Val(1006632961)), (x67 * Val(1509949441)), (x68 * Val(1761607681)), (x69 * Val(1887436801)), (x70 * Val(1950351361)), (x71 * Val(1981808641)), (x72 * Val(1997537281)), (x57 * Val(2005401601)), (x58 * Val(2009333761)), (x59 * Val(2011299841)), (x60 * Val(2012282881)), (x61 * Val(2012774401)), (x62 * Val(2013020161)), (x63 * Val(2013143041)), (x64 * Val(2013204481)), x49, (x50 * Val(1006632961)), (x51 * Val(1509949441)), (x52 * Val(1761607681)), (x53 * Val(1887436801)), (x54 * Val(1950351361)), (x55 * Val(1981808641)), (x56 * Val(1997537281))}, Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, arg1_0.count._super, arg1_0.kAddr._super, (x6 * x81), x7, LAYOUT_LOOKUP(layout2, _super));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:126)
Val x83 = (x82.a[1]._super._super * Val(2));
Val x84 = (x82.a[2]._super._super * Val(4));
Val x85 = (x82.a[3]._super._super * Val(8));
Val x86 = (x82.a[4]._super._super * Val(16));
Val x87 = (x82.a[5]._super._super * Val(32));
Val x88 = (x82.a[6]._super._super * Val(64));
Val x89 = (x82.a[7]._super._super * Val(128));
Val x90 = (x82.a[0]._super._super + x83);
Val x91 = (((x90 + x84) + x85) + x86);
Val x92 = (((x91 + x87) + x88) + x89);
Val x93 = (x82.a[9]._super._super * Val(2));
Val x94 = (x82.a[10]._super._super * Val(4));
Val x95 = (x82.a[11]._super._super * Val(8));
Val x96 = (x82.a[12]._super._super * Val(16));
Val x97 = (x82.a[13]._super._super * Val(32));
Val x98 = (x82.a[14]._super._super * Val(64));
Val x99 = (x82.a[15]._super._super * Val(128));
Val x100 = (x82.a[8]._super._super + x93);
Val x101 = (((x100 + x94) + x95) + x96);
Val x102 = (((x101 + x97) + x98) + x99);
Val x103 = (x82.a[17]._super._super * Val(2));
Val x104 = (x82.a[18]._super._super * Val(4));
Val x105 = (x82.a[19]._super._super * Val(8));
Val x106 = (x82.a[20]._super._super * Val(16));
Val x107 = (x82.a[21]._super._super * Val(32));
Val x108 = (x82.a[22]._super._super * Val(64));
Val x109 = (x82.a[23]._super._super * Val(128));
Val x110 = (x82.a[16]._super._super + x103);
Val x111 = (((x110 + x104) + x105) + x106);
Val x112 = (((x111 + x107) + x108) + x109);
Val x113 = (x82.a[25]._super._super * Val(2));
Val x114 = (x82.a[26]._super._super * Val(4));
Val x115 = (x82.a[27]._super._super * Val(8));
Val x116 = (x82.a[28]._super._super * Val(16));
Val x117 = (x82.a[29]._super._super * Val(32));
Val x118 = (x82.a[30]._super._super * Val(64));
Val x119 = (x82.a[31]._super._super * Val(128));
Val x120 = (x82.a[24]._super._super + x113);
Val x121 = (((x120 + x114) + x115) + x116);
Val x122 = (((x121 + x117) + x118) + x119);
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:6)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x123 = (Val(1) - x82.a[0]._super._super);
Val x124 = (x82.a[0]._super._super * x123);
EQZ(x124, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x125 = (Val(1) - x82.a[1]._super._super);
Val x126 = (x82.a[1]._super._super * x125);
EQZ(x126, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x127 = (Val(1) - x82.a[2]._super._super);
Val x128 = (x82.a[2]._super._super * x127);
EQZ(x128, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x129 = (Val(1) - x82.a[3]._super._super);
Val x130 = (x82.a[3]._super._super * x129);
EQZ(x130, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x131 = (Val(1) - x82.a[4]._super._super);
Val x132 = (x82.a[4]._super._super * x131);
EQZ(x132, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x133 = (Val(1) - x82.a[5]._super._super);
Val x134 = (x82.a[5]._super._super * x133);
EQZ(x134, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x135 = (Val(1) - x82.a[6]._super._super);
Val x136 = (x82.a[6]._super._super * x135);
EQZ(x136, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x137 = (Val(1) - x82.a[7]._super._super);
Val x138 = (x82.a[7]._super._super * x137);
EQZ(x138, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x139 = (Val(1) - x82.a[8]._super._super);
Val x140 = (x82.a[8]._super._super * x139);
EQZ(x140, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x141 = (Val(1) - x82.a[9]._super._super);
Val x142 = (x82.a[9]._super._super * x141);
EQZ(x142, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x143 = (Val(1) - x82.a[10]._super._super);
Val x144 = (x82.a[10]._super._super * x143);
EQZ(x144, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x145 = (Val(1) - x82.a[11]._super._super);
Val x146 = (x82.a[11]._super._super * x145);
EQZ(x146, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x147 = (Val(1) - x82.a[12]._super._super);
Val x148 = (x82.a[12]._super._super * x147);
EQZ(x148, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x149 = (Val(1) - x82.a[13]._super._super);
Val x150 = (x82.a[13]._super._super * x149);
EQZ(x150, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x151 = (Val(1) - x82.a[14]._super._super);
Val x152 = (x82.a[14]._super._super * x151);
EQZ(x152, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x153 = (Val(1) - x82.a[15]._super._super);
Val x154 = (x82.a[15]._super._super * x153);
EQZ(x154, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x155 = (Val(1) - x82.a[16]._super._super);
Val x156 = (x82.a[16]._super._super * x155);
EQZ(x156, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x157 = (Val(1) - x82.a[17]._super._super);
Val x158 = (x82.a[17]._super._super * x157);
EQZ(x158, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x159 = (Val(1) - x82.a[18]._super._super);
Val x160 = (x82.a[18]._super._super * x159);
EQZ(x160, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x161 = (Val(1) - x82.a[19]._super._super);
Val x162 = (x82.a[19]._super._super * x161);
EQZ(x162, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x163 = (Val(1) - x82.a[20]._super._super);
Val x164 = (x82.a[20]._super._super * x163);
EQZ(x164, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x165 = (Val(1) - x82.a[21]._super._super);
Val x166 = (x82.a[21]._super._super * x165);
EQZ(x166, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x167 = (Val(1) - x82.a[22]._super._super);
Val x168 = (x82.a[22]._super._super * x167);
EQZ(x168, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x169 = (Val(1) - x82.a[23]._super._super);
Val x170 = (x82.a[23]._super._super * x169);
EQZ(x170, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x171 = (Val(1) - x82.a[24]._super._super);
Val x172 = (x82.a[24]._super._super * x171);
EQZ(x172, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x173 = (Val(1) - x82.a[25]._super._super);
Val x174 = (x82.a[25]._super._super * x173);
EQZ(x174, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x175 = (Val(1) - x82.a[26]._super._super);
Val x176 = (x82.a[26]._super._super * x175);
EQZ(x176, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x177 = (Val(1) - x82.a[27]._super._super);
Val x178 = (x82.a[27]._super._super * x177);
EQZ(x178, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x179 = (Val(1) - x82.a[28]._super._super);
Val x180 = (x82.a[28]._super._super * x179);
EQZ(x180, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x181 = (Val(1) - x82.a[29]._super._super);
Val x182 = (x82.a[29]._super._super * x181);
EQZ(x182, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x183 = (Val(1) - x82.a[30]._super._super);
Val x184 = (x82.a[30]._super._super * x183);
EQZ(x184, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
Val x185 = (Val(1) - x82.a[31]._super._super);
Val x186 = (x82.a[31]._super._super * x185);
EQZ(x186, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x187 = (x10_0._super.low - ((x112 * Val(256)) + x122));
EQZ(x187, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x188 = (x10_0._super.high - ((x92 * Val(256)) + x102));
EQZ(x188, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :126:21)))");
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:127)
Val x189 = (x82.e[1]._super._super * Val(2));
Val x190 = (x82.e[2]._super._super * Val(4));
Val x191 = (x82.e[3]._super._super * Val(8));
Val x192 = (x82.e[4]._super._super * Val(16));
Val x193 = (x82.e[5]._super._super * Val(32));
Val x194 = (x82.e[6]._super._super * Val(64));
Val x195 = (x82.e[7]._super._super * Val(128));
Val x196 = (x82.e[0]._super._super + x189);
Val x197 = (((x196 + x190) + x191) + x192);
Val x198 = (((x197 + x193) + x194) + x195);
Val x199 = (x82.e[9]._super._super * Val(2));
Val x200 = (x82.e[10]._super._super * Val(4));
Val x201 = (x82.e[11]._super._super * Val(8));
Val x202 = (x82.e[12]._super._super * Val(16));
Val x203 = (x82.e[13]._super._super * Val(32));
Val x204 = (x82.e[14]._super._super * Val(64));
Val x205 = (x82.e[15]._super._super * Val(128));
Val x206 = (x82.e[8]._super._super + x199);
Val x207 = (((x206 + x200) + x201) + x202);
Val x208 = (((x207 + x203) + x204) + x205);
Val x209 = (x82.e[17]._super._super * Val(2));
Val x210 = (x82.e[18]._super._super * Val(4));
Val x211 = (x82.e[19]._super._super * Val(8));
Val x212 = (x82.e[20]._super._super * Val(16));
Val x213 = (x82.e[21]._super._super * Val(32));
Val x214 = (x82.e[22]._super._super * Val(64));
Val x215 = (x82.e[23]._super._super * Val(128));
Val x216 = (x82.e[16]._super._super + x209);
Val x217 = (((x216 + x210) + x211) + x212);
Val x218 = (((x217 + x213) + x214) + x215);
Val x219 = (x82.e[25]._super._super * Val(2));
Val x220 = (x82.e[26]._super._super * Val(4));
Val x221 = (x82.e[27]._super._super * Val(8));
Val x222 = (x82.e[28]._super._super * Val(16));
Val x223 = (x82.e[29]._super._super * Val(32));
Val x224 = (x82.e[30]._super._super * Val(64));
Val x225 = (x82.e[31]._super._super * Val(128));
Val x226 = (x82.e[24]._super._super + x219);
Val x227 = (((x226 + x220) + x221) + x222);
Val x228 = (((x227 + x223) + x224) + x225);
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:6)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x229 = (Val(1) - x82.e[0]._super._super);
Val x230 = (x82.e[0]._super._super * x229);
EQZ(x230, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x231 = (Val(1) - x82.e[1]._super._super);
Val x232 = (x82.e[1]._super._super * x231);
EQZ(x232, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x233 = (Val(1) - x82.e[2]._super._super);
Val x234 = (x82.e[2]._super._super * x233);
EQZ(x234, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x235 = (Val(1) - x82.e[3]._super._super);
Val x236 = (x82.e[3]._super._super * x235);
EQZ(x236, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x237 = (Val(1) - x82.e[4]._super._super);
Val x238 = (x82.e[4]._super._super * x237);
EQZ(x238, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x239 = (Val(1) - x82.e[5]._super._super);
Val x240 = (x82.e[5]._super._super * x239);
EQZ(x240, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x241 = (Val(1) - x82.e[6]._super._super);
Val x242 = (x82.e[6]._super._super * x241);
EQZ(x242, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x243 = (Val(1) - x82.e[7]._super._super);
Val x244 = (x82.e[7]._super._super * x243);
EQZ(x244, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x245 = (Val(1) - x82.e[8]._super._super);
Val x246 = (x82.e[8]._super._super * x245);
EQZ(x246, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x247 = (Val(1) - x82.e[9]._super._super);
Val x248 = (x82.e[9]._super._super * x247);
EQZ(x248, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x249 = (Val(1) - x82.e[10]._super._super);
Val x250 = (x82.e[10]._super._super * x249);
EQZ(x250, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x251 = (Val(1) - x82.e[11]._super._super);
Val x252 = (x82.e[11]._super._super * x251);
EQZ(x252, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x253 = (Val(1) - x82.e[12]._super._super);
Val x254 = (x82.e[12]._super._super * x253);
EQZ(x254, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x255 = (Val(1) - x82.e[13]._super._super);
Val x256 = (x82.e[13]._super._super * x255);
EQZ(x256, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x257 = (Val(1) - x82.e[14]._super._super);
Val x258 = (x82.e[14]._super._super * x257);
EQZ(x258, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x259 = (Val(1) - x82.e[15]._super._super);
Val x260 = (x82.e[15]._super._super * x259);
EQZ(x260, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x261 = (Val(1) - x82.e[16]._super._super);
Val x262 = (x82.e[16]._super._super * x261);
EQZ(x262, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x263 = (Val(1) - x82.e[17]._super._super);
Val x264 = (x82.e[17]._super._super * x263);
EQZ(x264, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x265 = (Val(1) - x82.e[18]._super._super);
Val x266 = (x82.e[18]._super._super * x265);
EQZ(x266, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x267 = (Val(1) - x82.e[19]._super._super);
Val x268 = (x82.e[19]._super._super * x267);
EQZ(x268, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x269 = (Val(1) - x82.e[20]._super._super);
Val x270 = (x82.e[20]._super._super * x269);
EQZ(x270, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x271 = (Val(1) - x82.e[21]._super._super);
Val x272 = (x82.e[21]._super._super * x271);
EQZ(x272, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x273 = (Val(1) - x82.e[22]._super._super);
Val x274 = (x82.e[22]._super._super * x273);
EQZ(x274, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x275 = (Val(1) - x82.e[23]._super._super);
Val x276 = (x82.e[23]._super._super * x275);
EQZ(x276, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x277 = (Val(1) - x82.e[24]._super._super);
Val x278 = (x82.e[24]._super._super * x277);
EQZ(x278, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x279 = (Val(1) - x82.e[25]._super._super);
Val x280 = (x82.e[25]._super._super * x279);
EQZ(x280, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x281 = (Val(1) - x82.e[26]._super._super);
Val x282 = (x82.e[26]._super._super * x281);
EQZ(x282, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x283 = (Val(1) - x82.e[27]._super._super);
Val x284 = (x82.e[27]._super._super * x283);
EQZ(x284, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x285 = (Val(1) - x82.e[28]._super._super);
Val x286 = (x82.e[28]._super._super * x285);
EQZ(x286, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x287 = (Val(1) - x82.e[29]._super._super);
Val x288 = (x82.e[29]._super._super * x287);
EQZ(x288, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x289 = (Val(1) - x82.e[30]._super._super);
Val x290 = (x82.e[30]._super._super * x289);
EQZ(x290, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
Val x291 = (Val(1) - x82.e[31]._super._super);
Val x292 = (x82.e[31]._super._super * x291);
EQZ(x292, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x293 = (x12_0._super.low - ((x218 * Val(256)) + x228));
EQZ(x293, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x294 = (x12_0._super.high - ((x198 * Val(256)) + x208));
EQZ(x294, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadState ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :127:21)))");
// ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)
EQZ(x82.w[0]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[1]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[2]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[3]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[4]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[5]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[6]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[7]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[8]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[9]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[10]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[11]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[12]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[13]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[14]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[15]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[16]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[17]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[18]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[19]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[20]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[21]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[22]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[23]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[24]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[25]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[26]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[27]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[28]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[29]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[30]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
EQZ(x82.w[31]._super._super, "ShaLoadState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:128)");
return x82;
}
ShaStateStruct exec_ShaLoadData(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, ShaStateStruct arg4, BoundLayout<ShaLoadDataLayout> layout5)   {
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:133)
Val x6 = (Val(15) - arg1_0.round._super);
NondetRegStruct x7 = exec_IsZero(ctx,x6, LAYOUT_LOOKUP(layout5, lastRound));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:134)
Val x8 = (arg1_0.kAddr._super + arg1_0.round._super);
GetDataStruct x9 = exec_MemoryRead(ctx,arg0, x8, LAYOUT_LOOKUP(layout5, k));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:135)
GetDataStruct x10_0 = exec_MemoryRead(ctx,arg0, arg1_0.dataAddr._super, LAYOUT_LOOKUP(layout5, wMem));
// UnpackNondet(zirgen/circuit/rv32im/v2/dsl/pack.zir:29)
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:71)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:136)
Val x11_0 = bitAnd(x10_0._super.low, Val(1));
Val x12_0 = bitAnd(x10_0._super.low, Val(2));
Val x13_0 = bitAnd(x10_0._super.low, Val(4));
Val x14_0 = bitAnd(x10_0._super.low, Val(8));
Val x15_0 = bitAnd(x10_0._super.low, Val(16));
Val x16 = bitAnd(x10_0._super.low, Val(32));
Val x17 = bitAnd(x10_0._super.low, Val(64));
Val x18 = bitAnd(x10_0._super.low, Val(128));
Val x19 = bitAnd(x10_0._super.low, Val(256));
Val x20 = bitAnd(x10_0._super.low, Val(512));
Val x21 = bitAnd(x10_0._super.low, Val(1024));
Val x22 = bitAnd(x10_0._super.low, Val(2048));
Val x23 = bitAnd(x10_0._super.low, Val(4096));
Val x24 = bitAnd(x10_0._super.low, Val(8192));
Val x25 = bitAnd(x10_0._super.low, Val(16384));
Val x26 = bitAnd(x10_0._super.low, Val(32768));
Val x27 = bitAnd(x10_0._super.high, Val(1));
Val x28 = bitAnd(x10_0._super.high, Val(2));
Val x29 = bitAnd(x10_0._super.high, Val(4));
Val x30 = bitAnd(x10_0._super.high, Val(8));
Val x31 = bitAnd(x10_0._super.high, Val(16));
Val x32 = bitAnd(x10_0._super.high, Val(32));
Val x33 = bitAnd(x10_0._super.high, Val(64));
Val x34 = bitAnd(x10_0._super.high, Val(128));
Val x35 = bitAnd(x10_0._super.high, Val(256));
Val x36 = bitAnd(x10_0._super.high, Val(512));
Val x37 = bitAnd(x10_0._super.high, Val(1024));
Val x38 = bitAnd(x10_0._super.high, Val(2048));
Val x39 = bitAnd(x10_0._super.high, Val(4096));
Val x40 = bitAnd(x10_0._super.high, Val(8192));
Val x41 = bitAnd(x10_0._super.high, Val(16384));
Val x42 = bitAnd(x10_0._super.high, Val(32768));
// UnpackU32NondetBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:72)
DivStruct32Array x43 = DivStruct32Array{DivStruct{
  ._super = (x35 * Val(2005401601))}, DivStruct{
  ._super = (x36 * Val(2009333761))}, DivStruct{
  ._super = (x37 * Val(2011299841))}, DivStruct{
  ._super = (x38 * Val(2012282881))}, DivStruct{
  ._super = (x39 * Val(2012774401))}, DivStruct{
  ._super = (x40 * Val(2013020161))}, DivStruct{
  ._super = (x41 * Val(2013143041))}, DivStruct{
  ._super = (x42 * Val(2013204481))}, DivStruct{
  ._super = x27}, DivStruct{
  ._super = (x28 * Val(1006632961))}, DivStruct{
  ._super = (x29 * Val(1509949441))}, DivStruct{
  ._super = (x30 * Val(1761607681))}, DivStruct{
  ._super = (x31 * Val(1887436801))}, DivStruct{
  ._super = (x32 * Val(1950351361))}, DivStruct{
  ._super = (x33 * Val(1981808641))}, DivStruct{
  ._super = (x34 * Val(1997537281))}, DivStruct{
  ._super = (x19 * Val(2005401601))}, DivStruct{
  ._super = (x20 * Val(2009333761))}, DivStruct{
  ._super = (x21 * Val(2011299841))}, DivStruct{
  ._super = (x22 * Val(2012282881))}, DivStruct{
  ._super = (x23 * Val(2012774401))}, DivStruct{
  ._super = (x24 * Val(2013020161))}, DivStruct{
  ._super = (x25 * Val(2013143041))}, DivStruct{
  ._super = (x26 * Val(2013204481))}, DivStruct{
  ._super = x11_0}, DivStruct{
  ._super = (x12_0 * Val(1006632961))}, DivStruct{
  ._super = (x13_0 * Val(1509949441))}, DivStruct{
  ._super = (x14_0 * Val(1761607681))}, DivStruct{
  ._super = (x15_0 * Val(1887436801))}, DivStruct{
  ._super = (x16 * Val(1950351361))}, DivStruct{
  ._super = (x17 * Val(1981808641))}, DivStruct{
  ._super = (x18 * Val(1997537281))}};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:137)
NondetRegStruct32Array x44 = map(Val32Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15), Val(16), Val(17), Val(18), Val(19), Val(20), Val(21), Val(22), Val(23), Val(24), Val(25), Val(26), Val(27), Val(28), Val(29), Val(30), Val(31)}, LAYOUT_LOOKUP(layout5, wBits), ([&](Val32Array::value_type x45, BoundLayout<NondetRegLayout32LayoutArray::value_type> x46) {
NondetRegStruct x47 = exec_NondetReg(ctx,x43[to_size_t(x45)]._super, x46);
return x47;

}));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:87)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:138)
Val x48 = (x44[1]._super * Val(2));
Val x49 = (x44[2]._super * Val(4));
Val x50 = (x44[3]._super * Val(8));
Val x51 = (x44[4]._super * Val(16));
Val x52 = (x44[5]._super * Val(32));
Val x53 = (x44[6]._super * Val(64));
Val x54 = (x44[7]._super * Val(128));
Val x55 = (x44[0]._super + x48);
Val x56 = (((x55 + x49) + x50) + x51);
Val x57 = (((x56 + x52) + x53) + x54);
Val x58 = (x44[9]._super * Val(2));
Val x59 = (x44[10]._super * Val(4));
Val x60 = (x44[11]._super * Val(8));
Val x61 = (x44[12]._super * Val(16));
Val x62 = (x44[13]._super * Val(32));
Val x63 = (x44[14]._super * Val(64));
Val x64 = (x44[15]._super * Val(128));
Val x65 = (x44[8]._super + x58);
Val x66 = (((x65 + x59) + x60) + x61);
Val x67 = (((x66 + x62) + x63) + x64);
Val x68 = (x44[17]._super * Val(2));
Val x69 = (x44[18]._super * Val(4));
Val x70 = (x44[19]._super * Val(8));
Val x71 = (x44[20]._super * Val(16));
Val x72 = (x44[21]._super * Val(32));
Val x73 = (x44[22]._super * Val(64));
Val x74 = (x44[23]._super * Val(128));
Val x75 = (x44[16]._super + x68);
Val x76 = (((x75 + x69) + x70) + x71);
Val x77 = (((x76 + x72) + x73) + x74);
Val x78 = (x44[25]._super * Val(2));
Val x79 = (x44[26]._super * Val(4));
Val x80 = (x44[27]._super * Val(8));
Val x81 = (x44[28]._super * Val(16));
Val x82 = (x44[29]._super * Val(32));
Val x83 = (x44[30]._super * Val(64));
Val x84 = (x44[31]._super * Val(128));
Val x85 = (x44[24]._super + x78);
Val x86 = (((x85 + x79) + x80) + x81);
Val x87 = (((x86 + x82) + x83) + x84);
// AssertBit(zirgen/circuit/rv32im/v2/dsl/bits.zir:6)
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:88)
Val x88 = (Val(1) - x44[0]._super);
Val x89 = (x44[0]._super * x88);
EQZ(x89, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x90 = (Val(1) - x44[1]._super);
Val x91 = (x44[1]._super * x90);
EQZ(x91, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x92 = (Val(1) - x44[2]._super);
Val x93 = (x44[2]._super * x92);
EQZ(x93, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x94 = (Val(1) - x44[3]._super);
Val x95 = (x44[3]._super * x94);
EQZ(x95, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x96 = (Val(1) - x44[4]._super);
Val x97 = (x44[4]._super * x96);
EQZ(x97, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x98 = (Val(1) - x44[5]._super);
Val x99 = (x44[5]._super * x98);
EQZ(x99, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x100 = (Val(1) - x44[6]._super);
Val x101 = (x44[6]._super * x100);
EQZ(x101, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x102 = (Val(1) - x44[7]._super);
Val x103 = (x44[7]._super * x102);
EQZ(x103, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x104 = (Val(1) - x44[8]._super);
Val x105 = (x44[8]._super * x104);
EQZ(x105, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x106 = (Val(1) - x44[9]._super);
Val x107 = (x44[9]._super * x106);
EQZ(x107, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x108 = (Val(1) - x44[10]._super);
Val x109 = (x44[10]._super * x108);
EQZ(x109, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x110 = (Val(1) - x44[11]._super);
Val x111 = (x44[11]._super * x110);
EQZ(x111, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x112 = (Val(1) - x44[12]._super);
Val x113 = (x44[12]._super * x112);
EQZ(x113, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x114 = (Val(1) - x44[13]._super);
Val x115 = (x44[13]._super * x114);
EQZ(x115, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x116 = (Val(1) - x44[14]._super);
Val x117 = (x44[14]._super * x116);
EQZ(x117, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x118 = (Val(1) - x44[15]._super);
Val x119 = (x44[15]._super * x118);
EQZ(x119, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x120 = (Val(1) - x44[16]._super);
Val x121 = (x44[16]._super * x120);
EQZ(x121, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x122 = (Val(1) - x44[17]._super);
Val x123 = (x44[17]._super * x122);
EQZ(x123, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x124 = (Val(1) - x44[18]._super);
Val x125 = (x44[18]._super * x124);
EQZ(x125, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x126 = (Val(1) - x44[19]._super);
Val x127 = (x44[19]._super * x126);
EQZ(x127, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x128 = (Val(1) - x44[20]._super);
Val x129 = (x44[20]._super * x128);
EQZ(x129, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x130 = (Val(1) - x44[21]._super);
Val x131 = (x44[21]._super * x130);
EQZ(x131, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x132 = (Val(1) - x44[22]._super);
Val x133 = (x44[22]._super * x132);
EQZ(x133, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x134 = (Val(1) - x44[23]._super);
Val x135 = (x44[23]._super * x134);
EQZ(x135, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x136 = (Val(1) - x44[24]._super);
Val x137 = (x44[24]._super * x136);
EQZ(x137, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x138 = (Val(1) - x44[25]._super);
Val x139 = (x44[25]._super * x138);
EQZ(x139, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x140 = (Val(1) - x44[26]._super);
Val x141 = (x44[26]._super * x140);
EQZ(x141, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x142 = (Val(1) - x44[27]._super);
Val x143 = (x44[27]._super * x142);
EQZ(x143, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x144 = (Val(1) - x44[28]._super);
Val x145 = (x44[28]._super * x144);
EQZ(x145, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x146 = (Val(1) - x44[29]._super);
Val x147 = (x44[29]._super * x146);
EQZ(x147, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x148 = (Val(1) - x44[30]._super);
Val x149 = (x44[30]._super * x148);
EQZ(x149, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
Val x150 = (Val(1) - x44[31]._super);
Val x151 = (x44[31]._super * x150);
EQZ(x151, "loc(callsite( AssertBit ( zirgen/circuit/rv32im/v2/dsl/bits.zir :6:20) at callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :88:29) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21))))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:89)
Val x152 = (x10_0._super.low - ((x77 * Val(256)) + x87));
EQZ(x152, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :89:13) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21)))");
// VerifyUnpackU32BE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:90)
Val x153 = (x10_0._super.high - ((x57 * Val(256)) + x67));
EQZ(x153, "loc(callsite( VerifyUnpackU32BE ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :90:14) at  ShaLoadData ( zirgen/circuit/rv32im/v2/dsl/inst_sha.zir :138:21)))");
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:48)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:96)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:139)
Val x154 = (arg1_0.a[13]._super._super + arg1_0.a[22]._super._super);
Val x155 = (arg1_0.a[13]._super._super * Val(2));
Val x156 = (x154 - (x155 * arg1_0.a[22]._super._super));
Val x157 = (arg1_0.a[14]._super._super + arg1_0.a[23]._super._super);
Val x158 = (arg1_0.a[14]._super._super * Val(2));
Val x159 = (x157 - (x158 * arg1_0.a[23]._super._super));
Val x160 = (arg1_0.a[15]._super._super + arg1_0.a[24]._super._super);
Val x161 = (arg1_0.a[15]._super._super * Val(2));
Val x162 = (x160 - (x161 * arg1_0.a[24]._super._super));
Val x163 = (arg1_0.a[16]._super._super + arg1_0.a[25]._super._super);
Val x164 = (arg1_0.a[16]._super._super * Val(2));
Val x165 = (x163 - (x164 * arg1_0.a[25]._super._super));
Val x166 = (arg1_0.a[17]._super._super + arg1_0.a[26]._super._super);
Val x167 = (arg1_0.a[17]._super._super * Val(2));
Val x168 = (x166 - (x167 * arg1_0.a[26]._super._super));
Val x169 = (arg1_0.a[18]._super._super + arg1_0.a[27]._super._super);
Val x170 = (arg1_0.a[18]._super._super * Val(2));
Val x171 = (x169 - (x170 * arg1_0.a[27]._super._super));
Val x172 = (arg1_0.a[19]._super._super + arg1_0.a[28]._super._super);
Val x173 = (arg1_0.a[19]._super._super * Val(2));
Val x174 = (x172 - (x173 * arg1_0.a[28]._super._super));
Val x175 = (arg1_0.a[20]._super._super + arg1_0.a[29]._super._super);
Val x176 = (arg1_0.a[20]._super._super * Val(2));
Val x177 = (x175 - (x176 * arg1_0.a[29]._super._super));
Val x178 = (arg1_0.a[21]._super._super + arg1_0.a[30]._super._super);
Val x179 = (arg1_0.a[21]._super._super * Val(2));
Val x180 = (x178 - (x179 * arg1_0.a[30]._super._super));
Val x181 = (arg1_0.a[22]._super._super + arg1_0.a[31]._super._super);
Val x182 = (arg1_0.a[22]._super._super * Val(2));
Val x183 = (x181 - (x182 * arg1_0.a[31]._super._super));
Val x184 = (arg1_0.a[23]._super._super + arg1_0.a[0]._super._super);
Val x185 = (arg1_0.a[23]._super._super * Val(2));
Val x186 = (x184 - (x185 * arg1_0.a[0]._super._super));
Val x187 = (arg1_0.a[24]._super._super + arg1_0.a[1]._super._super);
Val x188 = (arg1_0.a[24]._super._super * Val(2));
Val x189 = (x187 - (x188 * arg1_0.a[1]._super._super));
Val x190 = (arg1_0.a[25]._super._super + arg1_0.a[2]._super._super);
Val x191 = (arg1_0.a[25]._super._super * Val(2));
Val x192 = (x190 - (x191 * arg1_0.a[2]._super._super));
Val x193 = (arg1_0.a[26]._super._super + arg1_0.a[3]._super._super);
Val x194 = (arg1_0.a[26]._super._super * Val(2));
Val x195 = (x193 - (x194 * arg1_0.a[3]._super._super));
Val x196 = (arg1_0.a[27]._super._super + arg1_0.a[4]._super._super);
Val x197 = (arg1_0.a[27]._super._super * Val(2));
Val x198 = (x196 - (x197 * arg1_0.a[4]._super._super));
Val x199 = (arg1_0.a[28]._super._super + arg1_0.a[5]._super._super);
Val x200 = (arg1_0.a[28]._super._super * Val(2));
Val x201 = (x199 - (x200 * arg1_0.a[5]._super._super));
Val x202 = (arg1_0.a[29]._super._super + arg1_0.a[6]._super._super);
Val x203 = (arg1_0.a[29]._super._super * Val(2));
Val x204 = (x202 - (x203 * arg1_0.a[6]._super._super));
Val x205 = (arg1_0.a[30]._super._super + arg1_0.a[7]._super._super);
Val x206 = (arg1_0.a[30]._super._super * Val(2));
Val x207 = (x205 - (x206 * arg1_0.a[7]._super._super));
Val x208 = (arg1_0.a[31]._super._super + arg1_0.a[8]._super._super);
Val x209 = (arg1_0.a[31]._super._super * Val(2));
Val x210 = (x208 - (x209 * arg1_0.a[8]._super._super));
Val x211 = (arg1_0.a[0]._super._super + arg1_0.a[9]._super._super);
Val x212 = (arg1_0.a[0]._super._super * Val(2));
Val x213 = (x211 - (x212 * arg1_0.a[9]._super._super));
Val x214 = (arg1_0.a[1]._super._super + arg1_0.a[10]._super._super);
Val x215 = (arg1_0.a[1]._super._super * Val(2));
Val x216 = (x214 - (x215 * arg1_0.a[10]._super._super));
Val x217 = (arg1_0.a[2]._super._super + arg1_0.a[11]._super._super);
Val x218 = (arg1_0.a[2]._super._super * Val(2));
Val x219 = (x217 - (x218 * arg1_0.a[11]._super._super));
Val x220 = (arg1_0.a[3]._super._super + arg1_0.a[12]._super._super);
Val x221 = (arg1_0.a[3]._super._super * Val(2));
Val x222 = (x220 - (x221 * arg1_0.a[12]._super._super));
Val x223 = (arg1_0.a[4]._super._super + arg1_0.a[13]._super._super);
Val x224 = (arg1_0.a[4]._super._super * Val(2));
Val x225 = (x223 - (x224 * arg1_0.a[13]._super._super));
Val x226 = (arg1_0.a[5]._super._super + arg1_0.a[14]._super._super);
Val x227 = (arg1_0.a[5]._super._super * Val(2));
Val x228 = (x226 - (x227 * arg1_0.a[14]._super._super));
Val x229 = (arg1_0.a[6]._super._super + arg1_0.a[15]._super._super);
Val x230 = (arg1_0.a[6]._super._super * Val(2));
Val x231 = (x229 - (x230 * arg1_0.a[15]._super._super));
Val x232 = (arg1_0.a[7]._super._super + arg1_0.a[16]._super._super);
Val x233 = (arg1_0.a[7]._super._super * Val(2));
Val x234 = (x232 - (x233 * arg1_0.a[16]._super._super));
Val x235 = (arg1_0.a[8]._super._super + arg1_0.a[17]._super._super);
Val x236 = (arg1_0.a[8]._super._super * Val(2));
Val x237 = (x235 - (x236 * arg1_0.a[17]._super._super));
Val x238 = (arg1_0.a[9]._super._super + arg1_0.a[18]._super._super);
Val x239 = (arg1_0.a[9]._super._super * Val(2));
Val x240 = (x238 - (x239 * arg1_0.a[18]._super._super));
Val x241 = (arg1_0.a[10]._super._super + arg1_0.a[19]._super._super);
Val x242 = (arg1_0.a[10]._super._super * Val(2));
Val x243 = (x241 - (x242 * arg1_0.a[19]._super._super));
Val x244 = (arg1_0.a[11]._super._super + arg1_0.a[20]._super._super);
Val x245 = (arg1_0.a[11]._super._super * Val(2));
Val x246 = (x244 - (x245 * arg1_0.a[20]._super._super));
Val x247 = (arg1_0.a[12]._super._super + arg1_0.a[21]._super._super);
Val x248 = (arg1_0.a[12]._super._super * Val(2));
Val x249 = (x247 - (x248 * arg1_0.a[21]._super._super));
Val x250 = (arg1_0.a[2]._super._super + x156);
Val x251 = (arg1_0.a[3]._super._super + x159);
Val x252 = (arg1_0.a[4]._super._super + x162);
Val x253 = (arg1_0.a[5]._super._super + x165);
Val x254 = (arg1_0.a[6]._super._super + x168);
Val x255 = (arg1_0.a[7]._super._super + x171);
Val x256 = (arg1_0.a[8]._super._super + x174);
Val x257 = (arg1_0.a[9]._super._super + x177);
Val x258 = (arg1_0.a[10]._super._super + x180);
Val x259 = (arg1_0.a[11]._super._super + x183);
Val x260 = (arg1_0.a[12]._super._super + x186);
Val x261 = (arg1_0.a[13]._super._super + x189);
Val x262 = (arg1_0.a[14]._super._super + x192);
Val x263 = (arg1_0.a[15]._super._super + x195);
Val x264 = (arg1_0.a[16]._super._super + x198);
Val x265 = (arg1_0.a[17]._super._super + x201);
Val x266 = (arg1_0.a[18]._super._super + x204);
Val x267 = (arg1_0.a[19]._super._super + x207);
Val x268 = (arg1_0.a[20]._super._super + x210);
Val x269 = (arg1_0.a[21]._super._super + x213);
Val x270 = (arg1_0.a[22]._super._super + x216);
Val x271 = (arg1_0.a[23]._super._super + x219);
Val x272 = (arg1_0.a[24]._super._super + x222);
Val x273 = (arg1_0.a[25]._super._super + x225);
Val x274 = (arg1_0.a[26]._super._super + x228);
Val x275 = (arg1_0.a[27]._super._super + x231);
Val x276 = (arg1_0.a[28]._super._super + x234);
Val x277 = (arg1_0.a[29]._super._super + x237);
Val x278 = (arg1_0.a[30]._super._super + x240);
Val x279 = (arg1_0.a[31]._super._super + x243);
Val x280 = (arg1_0.a[0]._super._super + x246);
Val x281 = (arg1_0.a[1]._super._super + x249);
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:97)
Val x282 = (arg1_0.e[11]._super._super + arg1_0.e[25]._super._super);
Val x283 = (arg1_0.e[11]._super._super * Val(2));
Val x284 = (x282 - (x283 * arg1_0.e[25]._super._super));
Val x285 = (arg1_0.e[12]._super._super + arg1_0.e[26]._super._super);
Val x286 = (arg1_0.e[12]._super._super * Val(2));
Val x287 = (x285 - (x286 * arg1_0.e[26]._super._super));
Val x288 = (arg1_0.e[13]._super._super + arg1_0.e[27]._super._super);
Val x289 = (arg1_0.e[13]._super._super * Val(2));
Val x290 = (x288 - (x289 * arg1_0.e[27]._super._super));
Val x291 = (arg1_0.e[14]._super._super + arg1_0.e[28]._super._super);
Val x292 = (arg1_0.e[14]._super._super * Val(2));
Val x293 = (x291 - (x292 * arg1_0.e[28]._super._super));
Val x294 = (arg1_0.e[15]._super._super + arg1_0.e[29]._super._super);
Val x295 = (arg1_0.e[15]._super._super * Val(2));
Val x296 = (x294 - (x295 * arg1_0.e[29]._super._super));
Val x297 = (arg1_0.e[16]._super._super + arg1_0.e[30]._super._super);
Val x298 = (arg1_0.e[16]._super._super * Val(2));
Val x299 = (x297 - (x298 * arg1_0.e[30]._super._super));
Val x300 = (arg1_0.e[17]._super._super + arg1_0.e[31]._super._super);
Val x301 = (arg1_0.e[17]._super._super * Val(2));
Val x302 = (x300 - (x301 * arg1_0.e[31]._super._super));
Val x303 = (arg1_0.e[18]._super._super + arg1_0.e[0]._super._super);
Val x304 = (arg1_0.e[18]._super._super * Val(2));
Val x305 = (x303 - (x304 * arg1_0.e[0]._super._super));
Val x306 = (arg1_0.e[19]._super._super + arg1_0.e[1]._super._super);
Val x307 = (arg1_0.e[19]._super._super * Val(2));
Val x308 = (x306 - (x307 * arg1_0.e[1]._super._super));
Val x309 = (arg1_0.e[20]._super._super + arg1_0.e[2]._super._super);
Val x310 = (arg1_0.e[20]._super._super * Val(2));
Val x311 = (x309 - (x310 * arg1_0.e[2]._super._super));
Val x312 = (arg1_0.e[21]._super._super + arg1_0.e[3]._super._super);
Val x313 = (arg1_0.e[21]._super._super * Val(2));
Val x314 = (x312 - (x313 * arg1_0.e[3]._super._super));
Val x315 = (arg1_0.e[22]._super._super + arg1_0.e[4]._super._super);
Val x316 = (arg1_0.e[22]._super._super * Val(2));
Val x317 = (x315 - (x316 * arg1_0.e[4]._super._super));
Val x318 = (arg1_0.e[23]._super._super + arg1_0.e[5]._super._super);
Val x319 = (arg1_0.e[23]._super._super * Val(2));
Val x320 = (x318 - (x319 * arg1_0.e[5]._super._super));
Val x321 = (arg1_0.e[24]._super._super + arg1_0.e[6]._super._super);
Val x322 = (arg1_0.e[24]._super._super * Val(2));
Val x323 = (x321 - (x322 * arg1_0.e[6]._super._super));
Val x324 = (arg1_0.e[25]._super._super + arg1_0.e[7]._super._super);
Val x325 = (arg1_0.e[25]._super._super * Val(2));
Val x326 = (x324 - (x325 * arg1_0.e[7]._super._super));
Val x327 = (arg1_0.e[26]._super._super + arg1_0.e[8]._super._super);
Val x328 = (arg1_0.e[26]._super._super * Val(2));
Val x329 = (x327 - (x328 * arg1_0.e[8]._super._super));
Val x330 = (arg1_0.e[27]._super._super + arg1_0.e[9]._super._super);
Val x331 = (arg1_0.e[27]._super._super * Val(2));
Val x332 = (x330 - (x331 * arg1_0.e[9]._super._super));
Val x333 = (arg1_0.e[28]._super._super + arg1_0.e[10]._super._super);
Val x334 = (arg1_0.e[28]._super._super * Val(2));
Val x335 = (x333 - (x334 * arg1_0.e[10]._super._super));
Val x336 = (arg1_0.e[29]._super._super + arg1_0.e[11]._super._super);
Val x337 = (arg1_0.e[29]._super._super * Val(2));
Val x338 = (x336 - (x337 * arg1_0.e[11]._super._super));
Val x339 = (arg1_0.e[30]._super._super + arg1_0.e[12]._super._super);
Val x340 = (arg1_0.e[30]._super._super * Val(2));
Val x341 = (x339 - (x340 * arg1_0.e[12]._super._super));
Val x342 = (arg1_0.e[31]._super._super + arg1_0.e[13]._super._super);
Val x343 = (arg1_0.e[31]._super._super * Val(2));
Val x344 = (x342 - (x343 * arg1_0.e[13]._super._super));
Val x345 = (arg1_0.e[0]._super._super + arg1_0.e[14]._super._super);
Val x346 = (arg1_0.e[0]._super._super * Val(2));
Val x347 = (x345 - (x346 * arg1_0.e[14]._super._super));
Val x348 = (arg1_0.e[1]._super._super + arg1_0.e[15]._super._super);
Val x349 = (arg1_0.e[1]._super._super * Val(2));
Val x350 = (x348 - (x349 * arg1_0.e[15]._super._super));
Val x351 = (arg1_0.e[2]._super._super + arg1_0.e[16]._super._super);
Val x352 = (arg1_0.e[2]._super._super * Val(2));
Val x353 = (x351 - (x352 * arg1_0.e[16]._super._super));
Val x354 = (arg1_0.e[3]._super._super + arg1_0.e[17]._super._super);
Val x355 = (arg1_0.e[3]._super._super * Val(2));
Val x356 = (x354 - (x355 * arg1_0.e[17]._super._super));
Val x357 = (arg1_0.e[4]._super._super + arg1_0.e[18]._super._super);
Val x358 = (arg1_0.e[4]._super._super * Val(2));
Val x359 = (x357 - (x358 * arg1_0.e[18]._super._super));
Val x360 = (arg1_0.e[5]._super._super + arg1_0.e[19]._super._super);
Val x361 = (arg1_0.e[5]._super._super * Val(2));
Val x362 = (x360 - (x361 * arg1_0.e[19]._super._super));
Val x363 = (arg1_0.e[6]._super._super + arg1_0.e[20]._super._super);
Val x364 = (arg1_0.e[6]._super._super * Val(2));
Val x365 = (x363 - (x364 * arg1_0.e[20]._super._super));
Val x366 = (arg1_0.e[7]._super._super + arg1_0.e[21]._super._super);
Val x367 = (arg1_0.e[7]._super._super * Val(2));
Val x368 = (x366 - (x367 * arg1_0.e[21]._super._super));
Val x369 = (arg1_0.e[8]._super._super + arg1_0.e[22]._super._super);
Val x370 = (arg1_0.e[8]._super._super * Val(2));
Val x371 = (x369 - (x370 * arg1_0.e[22]._super._super));
Val x372 = (arg1_0.e[9]._super._super + arg1_0.e[23]._super._super);
Val x373 = (arg1_0.e[9]._super._super * Val(2));
Val x374 = (x372 - (x373 * arg1_0.e[23]._super._super));
Val x375 = (arg1_0.e[10]._super._super + arg1_0.e[24]._super._super);
Val x376 = (arg1_0.e[10]._super._super * Val(2));
Val x377 = (x375 - (x376 * arg1_0.e[24]._super._super));
Val x378 = (arg1_0.e[6]._super._super + x284);
Val x379 = (arg1_0.e[7]._super._super + x287);
Val x380 = (arg1_0.e[8]._super._super + x290);
Val x381 = (arg1_0.e[9]._super._super + x293);
Val x382 = (arg1_0.e[10]._super._super + x296);
Val x383 = (arg1_0.e[11]._super._super + x299);
Val x384 = (arg1_0.e[12]._super._super + x302);
Val x385 = (arg1_0.e[13]._super._super + x305);
Val x386 = (arg1_0.e[14]._super._super + x308);
Val x387 = (arg1_0.e[15]._super._super + x311);
Val x388 = (arg1_0.e[16]._super._super + x314);
Val x389 = (arg1_0.e[17]._super._super + x317);
Val x390 = (arg1_0.e[18]._super._super + x320);
Val x391 = (arg1_0.e[19]._super._super + x323);
Val x392 = (arg1_0.e[20]._super._super + x326);
Val x393 = (arg1_0.e[21]._super._super + x329);
Val x394 = (arg1_0.e[22]._super._super + x332);
Val x395 = (arg1_0.e[23]._super._super + x335);
Val x396 = (arg1_0.e[24]._super._super + x338);
Val x397 = (arg1_0.e[25]._super._super + x341);
Val x398 = (arg1_0.e[26]._super._super + x344);
Val x399 = (arg1_0.e[27]._super._super + x347);
Val x400 = (arg1_0.e[28]._super._super + x350);
Val x401 = (arg1_0.e[29]._super._super + x353);
Val x402 = (arg1_0.e[30]._super._super + x356);
Val x403 = (arg1_0.e[31]._super._super + x359);
Val x404 = (arg1_0.e[0]._super._super + x362);
Val x405 = (arg1_0.e[1]._super._super + x365);
Val x406 = (arg1_0.e[2]._super._super + x368);
Val x407 = (arg1_0.e[3]._super._super + x371);
Val x408 = (arg1_0.e[4]._super._super + x374);
Val x409 = (arg1_0.e[5]._super._super + x377);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:98)
Val x410 = (x44[8]._super * Val(256));
Val x411 = (x44[9]._super * Val(512));
Val x412 = (x44[10]._super * Val(1024));
Val x413 = (x44[11]._super * Val(2048));
Val x414 = (x44[12]._super * Val(4096));
Val x415 = (x44[13]._super * Val(8192));
Val x416 = (x44[14]._super * Val(16384));
Val x417 = (x44[15]._super * Val(32768));
Val x418 = (((x57 + x410) + x411) + x412);
Val x419 = (((x418 + x413) + x414) + x415);
Val x420 = (x44[24]._super * Val(256));
Val x421 = (x44[25]._super * Val(512));
Val x422 = (x44[26]._super * Val(1024));
Val x423 = (x44[27]._super * Val(2048));
Val x424 = (x44[28]._super * Val(4096));
Val x425 = (x44[29]._super * Val(8192));
Val x426 = (x44[30]._super * Val(16384));
Val x427 = (x44[31]._super * Val(32768));
Val x428 = (((x77 + x420) + x421) + x422);
Val x429 = (((x428 + x423) + x424) + x425);
Val x430 = (arg4.e[1]._super._super * Val(2));
Val x431 = (arg4.e[2]._super._super * Val(4));
Val x432 = (arg4.e[3]._super._super * Val(8));
Val x433 = (arg4.e[4]._super._super * Val(16));
Val x434 = (arg4.e[5]._super._super * Val(32));
Val x435 = (arg4.e[6]._super._super * Val(64));
Val x436 = (arg4.e[7]._super._super * Val(128));
Val x437 = (arg4.e[8]._super._super * Val(256));
Val x438 = (arg4.e[9]._super._super * Val(512));
Val x439 = (arg4.e[10]._super._super * Val(1024));
Val x440 = (arg4.e[11]._super._super * Val(2048));
Val x441 = (arg4.e[12]._super._super * Val(4096));
Val x442 = (arg4.e[13]._super._super * Val(8192));
Val x443 = (arg4.e[14]._super._super * Val(16384));
Val x444 = (arg4.e[15]._super._super * Val(32768));
Val x445 = (arg4.e[0]._super._super + x430);
Val x446 = (((x445 + x431) + x432) + x433);
Val x447 = (((x446 + x434) + x435) + x436);
Val x448 = (((x447 + x437) + x438) + x439);
Val x449 = (((x448 + x440) + x441) + x442);
Val x450 = (arg4.e[17]._super._super * Val(2));
Val x451 = (arg4.e[18]._super._super * Val(4));
Val x452 = (arg4.e[19]._super._super * Val(8));
Val x453 = (arg4.e[20]._super._super * Val(16));
Val x454 = (arg4.e[21]._super._super * Val(32));
Val x455 = (arg4.e[22]._super._super * Val(64));
Val x456 = (arg4.e[23]._super._super * Val(128));
Val x457 = (arg4.e[24]._super._super * Val(256));
Val x458 = (arg4.e[25]._super._super * Val(512));
Val x459 = (arg4.e[26]._super._super * Val(1024));
Val x460 = (arg4.e[27]._super._super * Val(2048));
Val x461 = (arg4.e[28]._super._super * Val(4096));
Val x462 = (arg4.e[29]._super._super * Val(8192));
Val x463 = (arg4.e[30]._super._super * Val(16384));
Val x464 = (arg4.e[31]._super._super * Val(32768));
Val x465 = (arg4.e[16]._super._super + x450);
Val x466 = (((x465 + x451) + x452) + x453);
Val x467 = (((x466 + x454) + x455) + x456);
Val x468 = (((x467 + x457) + x458) + x459);
Val x469 = (((x468 + x460) + x461) + x462);
// ChU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:25)
Val x470 = (arg1_0.e[0]._super._super * arg2_0.e[0]._super._super);
Val x471 = (Val(1) - arg1_0.e[0]._super._super);
Val x472 = (arg1_0.e[1]._super._super * arg2_0.e[1]._super._super);
Val x473 = (Val(1) - arg1_0.e[1]._super._super);
Val x474 = (arg1_0.e[2]._super._super * arg2_0.e[2]._super._super);
Val x475 = (Val(1) - arg1_0.e[2]._super._super);
Val x476 = (arg1_0.e[3]._super._super * arg2_0.e[3]._super._super);
Val x477 = (Val(1) - arg1_0.e[3]._super._super);
Val x478 = (arg1_0.e[4]._super._super * arg2_0.e[4]._super._super);
Val x479 = (Val(1) - arg1_0.e[4]._super._super);
Val x480 = (arg1_0.e[5]._super._super * arg2_0.e[5]._super._super);
Val x481 = (Val(1) - arg1_0.e[5]._super._super);
Val x482 = (arg1_0.e[6]._super._super * arg2_0.e[6]._super._super);
Val x483 = (Val(1) - arg1_0.e[6]._super._super);
Val x484 = (arg1_0.e[7]._super._super * arg2_0.e[7]._super._super);
Val x485 = (Val(1) - arg1_0.e[7]._super._super);
Val x486 = (arg1_0.e[8]._super._super * arg2_0.e[8]._super._super);
Val x487 = (Val(1) - arg1_0.e[8]._super._super);
Val x488 = (arg1_0.e[9]._super._super * arg2_0.e[9]._super._super);
Val x489 = (Val(1) - arg1_0.e[9]._super._super);
Val x490 = (arg1_0.e[10]._super._super * arg2_0.e[10]._super._super);
Val x491 = (Val(1) - arg1_0.e[10]._super._super);
Val x492 = (arg1_0.e[11]._super._super * arg2_0.e[11]._super._super);
Val x493 = (Val(1) - arg1_0.e[11]._super._super);
Val x494 = (arg1_0.e[12]._super._super * arg2_0.e[12]._super._super);
Val x495 = (Val(1) - arg1_0.e[12]._super._super);
Val x496 = (arg1_0.e[13]._super._super * arg2_0.e[13]._super._super);
Val x497 = (Val(1) - arg1_0.e[13]._super._super);
Val x498 = (arg1_0.e[14]._super._super * arg2_0.e[14]._super._super);
Val x499 = (Val(1) - arg1_0.e[14]._super._super);
Val x500 = (arg1_0.e[15]._super._super * arg2_0.e[15]._super._super);
Val x501 = (Val(1) - arg1_0.e[15]._super._super);
Val x502 = (arg1_0.e[16]._super._super * arg2_0.e[16]._super._super);
Val x503 = (Val(1) - arg1_0.e[16]._super._super);
Val x504 = (arg1_0.e[17]._super._super * arg2_0.e[17]._super._super);
Val x505 = (Val(1) - arg1_0.e[17]._super._super);
Val x506 = (arg1_0.e[18]._super._super * arg2_0.e[18]._super._super);
Val x507 = (Val(1) - arg1_0.e[18]._super._super);
Val x508 = (arg1_0.e[19]._super._super * arg2_0.e[19]._super._super);
Val x509 = (Val(1) - arg1_0.e[19]._super._super);
Val x510 = (arg1_0.e[20]._super._super * arg2_0.e[20]._super._super);
Val x511 = (Val(1) - arg1_0.e[20]._super._super);
Val x512 = (arg1_0.e[21]._super._super * arg2_0.e[21]._super._super);
Val x513 = (Val(1) - arg1_0.e[21]._super._super);
Val x514 = (arg1_0.e[22]._super._super * arg2_0.e[22]._super._super);
Val x515 = (Val(1) - arg1_0.e[22]._super._super);
Val x516 = (arg1_0.e[23]._super._super * arg2_0.e[23]._super._super);
Val x517 = (Val(1) - arg1_0.e[23]._super._super);
Val x518 = (arg1_0.e[24]._super._super * arg2_0.e[24]._super._super);
Val x519 = (Val(1) - arg1_0.e[24]._super._super);
Val x520 = (arg1_0.e[25]._super._super * arg2_0.e[25]._super._super);
Val x521 = (Val(1) - arg1_0.e[25]._super._super);
Val x522 = (arg1_0.e[26]._super._super * arg2_0.e[26]._super._super);
Val x523 = (Val(1) - arg1_0.e[26]._super._super);
Val x524 = (arg1_0.e[27]._super._super * arg2_0.e[27]._super._super);
Val x525 = (Val(1) - arg1_0.e[27]._super._super);
Val x526 = (arg1_0.e[28]._super._super * arg2_0.e[28]._super._super);
Val x527 = (Val(1) - arg1_0.e[28]._super._super);
Val x528 = (arg1_0.e[29]._super._super * arg2_0.e[29]._super._super);
Val x529 = (Val(1) - arg1_0.e[29]._super._super);
Val x530 = (arg1_0.e[30]._super._super * arg2_0.e[30]._super._super);
Val x531 = (Val(1) - arg1_0.e[30]._super._super);
Val x532 = (arg1_0.e[31]._super._super * arg2_0.e[31]._super._super);
Val x533 = (Val(1) - arg1_0.e[31]._super._super);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x534 = ((x470 + (x471 * arg3.e[0]._super._super)) + ((x472 + (x473 * arg3.e[1]._super._super)) * Val(2)));
Val x535 = ((x534 + ((x474 + (x475 * arg3.e[2]._super._super)) * Val(4))) + ((x476 + (x477 * arg3.e[3]._super._super)) * Val(8)));
Val x536 = ((x535 + ((x478 + (x479 * arg3.e[4]._super._super)) * Val(16))) + ((x480 + (x481 * arg3.e[5]._super._super)) * Val(32)));
Val x537 = ((x536 + ((x482 + (x483 * arg3.e[6]._super._super)) * Val(64))) + ((x484 + (x485 * arg3.e[7]._super._super)) * Val(128)));
Val x538 = ((x537 + ((x486 + (x487 * arg3.e[8]._super._super)) * Val(256))) + ((x488 + (x489 * arg3.e[9]._super._super)) * Val(512)));
Val x539 = ((x538 + ((x490 + (x491 * arg3.e[10]._super._super)) * Val(1024))) + ((x492 + (x493 * arg3.e[11]._super._super)) * Val(2048)));
Val x540 = ((x539 + ((x494 + (x495 * arg3.e[12]._super._super)) * Val(4096))) + ((x496 + (x497 * arg3.e[13]._super._super)) * Val(8192)));
Val x541 = ((x540 + ((x498 + (x499 * arg3.e[14]._super._super)) * Val(16384))) + ((x500 + (x501 * arg3.e[15]._super._super)) * Val(32768)));
Val x542 = ((x502 + (x503 * arg3.e[16]._super._super)) + ((x504 + (x505 * arg3.e[17]._super._super)) * Val(2)));
Val x543 = ((x542 + ((x506 + (x507 * arg3.e[18]._super._super)) * Val(4))) + ((x508 + (x509 * arg3.e[19]._super._super)) * Val(8)));
Val x544 = ((x543 + ((x510 + (x511 * arg3.e[20]._super._super)) * Val(16))) + ((x512 + (x513 * arg3.e[21]._super._super)) * Val(32)));
Val x545 = ((x544 + ((x514 + (x515 * arg3.e[22]._super._super)) * Val(64))) + ((x516 + (x517 * arg3.e[23]._super._super)) * Val(128)));
Val x546 = ((x545 + ((x518 + (x519 * arg3.e[24]._super._super)) * Val(256))) + ((x520 + (x521 * arg3.e[25]._super._super)) * Val(512)));
Val x547 = ((x546 + ((x522 + (x523 * arg3.e[26]._super._super)) * Val(1024))) + ((x524 + (x525 * arg3.e[27]._super._super)) * Val(2048)));
Val x548 = ((x547 + ((x526 + (x527 * arg3.e[28]._super._super)) * Val(4096))) + ((x528 + (x529 * arg3.e[29]._super._super)) * Val(8192)));
Val x549 = ((x548 + ((x530 + (x531 * arg3.e[30]._super._super)) * Val(16384))) + ((x532 + (x533 * arg3.e[31]._super._super)) * Val(32768)));
Val x550 = ((x378 - (x364 * x284)) + ((x379 - (x367 * x287)) * Val(2)));
Val x551 = ((x550 + ((x380 - (x370 * x290)) * Val(4))) + ((x381 - (x373 * x293)) * Val(8)));
Val x552 = ((x551 + ((x382 - (x376 * x296)) * Val(16))) + ((x383 - (x283 * x299)) * Val(32)));
Val x553 = ((x552 + ((x384 - (x286 * x302)) * Val(64))) + ((x385 - (x289 * x305)) * Val(128)));
Val x554 = ((x553 + ((x386 - (x292 * x308)) * Val(256))) + ((x387 - (x295 * x311)) * Val(512)));
Val x555 = ((x554 + ((x388 - (x298 * x314)) * Val(1024))) + ((x389 - (x301 * x317)) * Val(2048)));
Val x556 = ((x555 + ((x390 - (x304 * x320)) * Val(4096))) + ((x391 - (x307 * x323)) * Val(8192)));
Val x557 = ((x556 + ((x392 - (x310 * x326)) * Val(16384))) + ((x393 - (x313 * x329)) * Val(32768)));
Val x558 = ((x394 - (x316 * x332)) + ((x395 - (x319 * x335)) * Val(2)));
Val x559 = ((x558 + ((x396 - (x322 * x338)) * Val(4))) + ((x397 - (x325 * x341)) * Val(8)));
Val x560 = ((x559 + ((x398 - (x328 * x344)) * Val(16))) + ((x399 - (x331 * x347)) * Val(32)));
Val x561 = ((x560 + ((x400 - (x334 * x350)) * Val(64))) + ((x401 - (x337 * x353)) * Val(128)));
Val x562 = ((x561 + ((x402 - (x340 * x356)) * Val(256))) + ((x403 - (x343 * x359)) * Val(512)));
Val x563 = ((x562 + ((x404 - (x346 * x362)) * Val(1024))) + ((x405 - (x349 * x365)) * Val(2048)));
Val x564 = ((x563 + ((x406 - (x352 * x368)) * Val(4096))) + ((x407 - (x355 * x371)) * Val(8192)));
Val x565 = ((x564 + ((x408 - (x358 * x374)) * Val(16384))) + ((x409 - (x361 * x377)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x566 = (((x449 + x443) + x444) + (x541 + x557));
Val x567 = (((x469 + x463) + x464) + (x549 + x565));
Val x568 = (x9._super.low + x566);
Val x569 = (x9._super.high + x567);
Val x570 = (((x419 + x416) + x417) + x568);
Val x571 = (((x429 + x426) + x427) + x569);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:99)
Val x572 = (arg1_0.a[0]._super._super * arg2_0.a[0]._super._super);
Val x573 = (Val(1) - arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x574 = (Val(1) - arg2_0.a[0]._super._super);
Val x575 = (arg1_0.a[0]._super._super * x574);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x576 = (Val(1) - arg1_0.a[0]._super._super);
Val x577 = ((x576 * arg2_0.a[0]._super._super) * arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x578 = (((x572 * x573) + (x575 * arg3.a[0]._super._super)) + x577);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x579 = (arg1_0.a[1]._super._super * arg2_0.a[1]._super._super);
Val x580 = (Val(1) - arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x581 = (Val(1) - arg2_0.a[1]._super._super);
Val x582 = (arg1_0.a[1]._super._super * x581);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x583 = (Val(1) - arg1_0.a[1]._super._super);
Val x584 = ((x583 * arg2_0.a[1]._super._super) * arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x585 = (((x579 * x580) + (x582 * arg3.a[1]._super._super)) + x584);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x586 = (arg1_0.a[2]._super._super * arg2_0.a[2]._super._super);
Val x587 = (Val(1) - arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x588 = (Val(1) - arg2_0.a[2]._super._super);
Val x589 = (arg1_0.a[2]._super._super * x588);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x590 = (Val(1) - arg1_0.a[2]._super._super);
Val x591 = ((x590 * arg2_0.a[2]._super._super) * arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x592 = (((x586 * x587) + (x589 * arg3.a[2]._super._super)) + x591);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x593 = (arg1_0.a[3]._super._super * arg2_0.a[3]._super._super);
Val x594 = (Val(1) - arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x595 = (Val(1) - arg2_0.a[3]._super._super);
Val x596 = (arg1_0.a[3]._super._super * x595);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x597 = (Val(1) - arg1_0.a[3]._super._super);
Val x598 = ((x597 * arg2_0.a[3]._super._super) * arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x599 = (((x593 * x594) + (x596 * arg3.a[3]._super._super)) + x598);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x600 = (arg1_0.a[4]._super._super * arg2_0.a[4]._super._super);
Val x601 = (Val(1) - arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x602 = (Val(1) - arg2_0.a[4]._super._super);
Val x603 = (arg1_0.a[4]._super._super * x602);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x604 = (Val(1) - arg1_0.a[4]._super._super);
Val x605 = ((x604 * arg2_0.a[4]._super._super) * arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x606 = (((x600 * x601) + (x603 * arg3.a[4]._super._super)) + x605);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x607 = (arg1_0.a[5]._super._super * arg2_0.a[5]._super._super);
Val x608 = (Val(1) - arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x609 = (Val(1) - arg2_0.a[5]._super._super);
Val x610 = (arg1_0.a[5]._super._super * x609);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x611 = (Val(1) - arg1_0.a[5]._super._super);
Val x612 = ((x611 * arg2_0.a[5]._super._super) * arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x613 = (((x607 * x608) + (x610 * arg3.a[5]._super._super)) + x612);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x614 = (arg1_0.a[6]._super._super * arg2_0.a[6]._super._super);
Val x615 = (Val(1) - arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x616 = (Val(1) - arg2_0.a[6]._super._super);
Val x617 = (arg1_0.a[6]._super._super * x616);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x618 = (Val(1) - arg1_0.a[6]._super._super);
Val x619 = ((x618 * arg2_0.a[6]._super._super) * arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x620 = (((x614 * x615) + (x617 * arg3.a[6]._super._super)) + x619);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x621 = (arg1_0.a[7]._super._super * arg2_0.a[7]._super._super);
Val x622 = (Val(1) - arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x623 = (Val(1) - arg2_0.a[7]._super._super);
Val x624 = (arg1_0.a[7]._super._super * x623);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x625 = (Val(1) - arg1_0.a[7]._super._super);
Val x626 = ((x625 * arg2_0.a[7]._super._super) * arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x627 = (((x621 * x622) + (x624 * arg3.a[7]._super._super)) + x626);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x628 = (arg1_0.a[8]._super._super * arg2_0.a[8]._super._super);
Val x629 = (Val(1) - arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x630 = (Val(1) - arg2_0.a[8]._super._super);
Val x631 = (arg1_0.a[8]._super._super * x630);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x632 = (Val(1) - arg1_0.a[8]._super._super);
Val x633 = ((x632 * arg2_0.a[8]._super._super) * arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x634 = (((x628 * x629) + (x631 * arg3.a[8]._super._super)) + x633);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x635 = (arg1_0.a[9]._super._super * arg2_0.a[9]._super._super);
Val x636 = (Val(1) - arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x637 = (Val(1) - arg2_0.a[9]._super._super);
Val x638 = (arg1_0.a[9]._super._super * x637);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x639 = (Val(1) - arg1_0.a[9]._super._super);
Val x640 = ((x639 * arg2_0.a[9]._super._super) * arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x641 = (((x635 * x636) + (x638 * arg3.a[9]._super._super)) + x640);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x642 = (arg1_0.a[10]._super._super * arg2_0.a[10]._super._super);
Val x643 = (Val(1) - arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x644 = (Val(1) - arg2_0.a[10]._super._super);
Val x645 = (arg1_0.a[10]._super._super * x644);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x646 = (Val(1) - arg1_0.a[10]._super._super);
Val x647 = ((x646 * arg2_0.a[10]._super._super) * arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x648 = (((x642 * x643) + (x645 * arg3.a[10]._super._super)) + x647);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x649 = (arg1_0.a[11]._super._super * arg2_0.a[11]._super._super);
Val x650 = (Val(1) - arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x651 = (Val(1) - arg2_0.a[11]._super._super);
Val x652 = (arg1_0.a[11]._super._super * x651);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x653 = (Val(1) - arg1_0.a[11]._super._super);
Val x654 = ((x653 * arg2_0.a[11]._super._super) * arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x655 = (((x649 * x650) + (x652 * arg3.a[11]._super._super)) + x654);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x656 = (arg1_0.a[12]._super._super * arg2_0.a[12]._super._super);
Val x657 = (Val(1) - arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x658 = (Val(1) - arg2_0.a[12]._super._super);
Val x659 = (arg1_0.a[12]._super._super * x658);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x660 = (Val(1) - arg1_0.a[12]._super._super);
Val x661 = ((x660 * arg2_0.a[12]._super._super) * arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x662 = (((x656 * x657) + (x659 * arg3.a[12]._super._super)) + x661);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x663 = (arg1_0.a[13]._super._super * arg2_0.a[13]._super._super);
Val x664 = (Val(1) - arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x665 = (Val(1) - arg2_0.a[13]._super._super);
Val x666 = (arg1_0.a[13]._super._super * x665);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x667 = (Val(1) - arg1_0.a[13]._super._super);
Val x668 = ((x667 * arg2_0.a[13]._super._super) * arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x669 = (((x663 * x664) + (x666 * arg3.a[13]._super._super)) + x668);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x670 = (arg1_0.a[14]._super._super * arg2_0.a[14]._super._super);
Val x671 = (Val(1) - arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x672 = (Val(1) - arg2_0.a[14]._super._super);
Val x673 = (arg1_0.a[14]._super._super * x672);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x674 = (Val(1) - arg1_0.a[14]._super._super);
Val x675 = ((x674 * arg2_0.a[14]._super._super) * arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x676 = (((x670 * x671) + (x673 * arg3.a[14]._super._super)) + x675);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x677 = (arg1_0.a[15]._super._super * arg2_0.a[15]._super._super);
Val x678 = (Val(1) - arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x679 = (Val(1) - arg2_0.a[15]._super._super);
Val x680 = (arg1_0.a[15]._super._super * x679);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x681 = (Val(1) - arg1_0.a[15]._super._super);
Val x682 = ((x681 * arg2_0.a[15]._super._super) * arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x683 = (((x677 * x678) + (x680 * arg3.a[15]._super._super)) + x682);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x684 = (arg1_0.a[16]._super._super * arg2_0.a[16]._super._super);
Val x685 = (Val(1) - arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x686 = (Val(1) - arg2_0.a[16]._super._super);
Val x687 = (arg1_0.a[16]._super._super * x686);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x688 = (Val(1) - arg1_0.a[16]._super._super);
Val x689 = ((x688 * arg2_0.a[16]._super._super) * arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x690 = (((x684 * x685) + (x687 * arg3.a[16]._super._super)) + x689);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x691 = (arg1_0.a[17]._super._super * arg2_0.a[17]._super._super);
Val x692 = (Val(1) - arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x693 = (Val(1) - arg2_0.a[17]._super._super);
Val x694 = (arg1_0.a[17]._super._super * x693);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x695 = (Val(1) - arg1_0.a[17]._super._super);
Val x696 = ((x695 * arg2_0.a[17]._super._super) * arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x697 = (((x691 * x692) + (x694 * arg3.a[17]._super._super)) + x696);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x698 = (arg1_0.a[18]._super._super * arg2_0.a[18]._super._super);
Val x699 = (Val(1) - arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x700 = (Val(1) - arg2_0.a[18]._super._super);
Val x701 = (arg1_0.a[18]._super._super * x700);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x702 = (Val(1) - arg1_0.a[18]._super._super);
Val x703 = ((x702 * arg2_0.a[18]._super._super) * arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x704 = (((x698 * x699) + (x701 * arg3.a[18]._super._super)) + x703);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x705 = (arg1_0.a[19]._super._super * arg2_0.a[19]._super._super);
Val x706 = (Val(1) - arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x707 = (Val(1) - arg2_0.a[19]._super._super);
Val x708 = (arg1_0.a[19]._super._super * x707);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x709 = (Val(1) - arg1_0.a[19]._super._super);
Val x710 = ((x709 * arg2_0.a[19]._super._super) * arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x711 = (((x705 * x706) + (x708 * arg3.a[19]._super._super)) + x710);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x712 = (arg1_0.a[20]._super._super * arg2_0.a[20]._super._super);
Val x713 = (Val(1) - arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x714 = (Val(1) - arg2_0.a[20]._super._super);
Val x715 = (arg1_0.a[20]._super._super * x714);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x716 = (Val(1) - arg1_0.a[20]._super._super);
Val x717 = ((x716 * arg2_0.a[20]._super._super) * arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x718 = (((x712 * x713) + (x715 * arg3.a[20]._super._super)) + x717);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x719 = (arg1_0.a[21]._super._super * arg2_0.a[21]._super._super);
Val x720 = (Val(1) - arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x721 = (Val(1) - arg2_0.a[21]._super._super);
Val x722 = (arg1_0.a[21]._super._super * x721);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x723 = (Val(1) - arg1_0.a[21]._super._super);
Val x724 = ((x723 * arg2_0.a[21]._super._super) * arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x725 = (((x719 * x720) + (x722 * arg3.a[21]._super._super)) + x724);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x726 = (arg1_0.a[22]._super._super * arg2_0.a[22]._super._super);
Val x727 = (Val(1) - arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x728 = (Val(1) - arg2_0.a[22]._super._super);
Val x729 = (arg1_0.a[22]._super._super * x728);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x730 = (Val(1) - arg1_0.a[22]._super._super);
Val x731 = ((x730 * arg2_0.a[22]._super._super) * arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x732 = (((x726 * x727) + (x729 * arg3.a[22]._super._super)) + x731);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x733 = (arg1_0.a[23]._super._super * arg2_0.a[23]._super._super);
Val x734 = (Val(1) - arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x735 = (Val(1) - arg2_0.a[23]._super._super);
Val x736 = (arg1_0.a[23]._super._super * x735);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x737 = (Val(1) - arg1_0.a[23]._super._super);
Val x738 = ((x737 * arg2_0.a[23]._super._super) * arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x739 = (((x733 * x734) + (x736 * arg3.a[23]._super._super)) + x738);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x740 = (arg1_0.a[24]._super._super * arg2_0.a[24]._super._super);
Val x741 = (Val(1) - arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x742 = (Val(1) - arg2_0.a[24]._super._super);
Val x743 = (arg1_0.a[24]._super._super * x742);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x744 = (Val(1) - arg1_0.a[24]._super._super);
Val x745 = ((x744 * arg2_0.a[24]._super._super) * arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x746 = (((x740 * x741) + (x743 * arg3.a[24]._super._super)) + x745);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x747 = (arg1_0.a[25]._super._super * arg2_0.a[25]._super._super);
Val x748 = (Val(1) - arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x749 = (Val(1) - arg2_0.a[25]._super._super);
Val x750 = (arg1_0.a[25]._super._super * x749);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x751 = (Val(1) - arg1_0.a[25]._super._super);
Val x752 = ((x751 * arg2_0.a[25]._super._super) * arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x753 = (((x747 * x748) + (x750 * arg3.a[25]._super._super)) + x752);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x754 = (arg1_0.a[26]._super._super * arg2_0.a[26]._super._super);
Val x755 = (Val(1) - arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x756 = (Val(1) - arg2_0.a[26]._super._super);
Val x757 = (arg1_0.a[26]._super._super * x756);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x758 = (Val(1) - arg1_0.a[26]._super._super);
Val x759 = ((x758 * arg2_0.a[26]._super._super) * arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x760 = (((x754 * x755) + (x757 * arg3.a[26]._super._super)) + x759);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x761 = (arg1_0.a[27]._super._super * arg2_0.a[27]._super._super);
Val x762 = (Val(1) - arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x763 = (Val(1) - arg2_0.a[27]._super._super);
Val x764 = (arg1_0.a[27]._super._super * x763);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x765 = (Val(1) - arg1_0.a[27]._super._super);
Val x766 = ((x765 * arg2_0.a[27]._super._super) * arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x767 = (((x761 * x762) + (x764 * arg3.a[27]._super._super)) + x766);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x768 = (arg1_0.a[28]._super._super * arg2_0.a[28]._super._super);
Val x769 = (Val(1) - arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x770 = (Val(1) - arg2_0.a[28]._super._super);
Val x771 = (arg1_0.a[28]._super._super * x770);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x772 = (Val(1) - arg1_0.a[28]._super._super);
Val x773 = ((x772 * arg2_0.a[28]._super._super) * arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x774 = (((x768 * x769) + (x771 * arg3.a[28]._super._super)) + x773);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x775 = (arg1_0.a[29]._super._super * arg2_0.a[29]._super._super);
Val x776 = (Val(1) - arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x777 = (Val(1) - arg2_0.a[29]._super._super);
Val x778 = (arg1_0.a[29]._super._super * x777);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x779 = (Val(1) - arg1_0.a[29]._super._super);
Val x780 = ((x779 * arg2_0.a[29]._super._super) * arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x781 = (((x775 * x776) + (x778 * arg3.a[29]._super._super)) + x780);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x782 = (arg1_0.a[30]._super._super * arg2_0.a[30]._super._super);
Val x783 = (Val(1) - arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x784 = (Val(1) - arg2_0.a[30]._super._super);
Val x785 = (arg1_0.a[30]._super._super * x784);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x786 = (Val(1) - arg1_0.a[30]._super._super);
Val x787 = ((x786 * arg2_0.a[30]._super._super) * arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x788 = (((x782 * x783) + (x785 * arg3.a[30]._super._super)) + x787);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x789 = (arg1_0.a[31]._super._super * arg2_0.a[31]._super._super);
Val x790 = (Val(1) - arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x791 = (Val(1) - arg2_0.a[31]._super._super);
Val x792 = (arg1_0.a[31]._super._super * x791);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x793 = (Val(1) - arg1_0.a[31]._super._super);
Val x794 = ((x793 * arg2_0.a[31]._super._super) * arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x795 = (((x789 * x790) + (x792 * arg3.a[31]._super._super)) + x794);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x796 = ((x578 + (x572 * arg3.a[0]._super._super)) + ((x585 + (x579 * arg3.a[1]._super._super)) * Val(2)));
Val x797 = ((x796 + ((x592 + (x586 * arg3.a[2]._super._super)) * Val(4))) + ((x599 + (x593 * arg3.a[3]._super._super)) * Val(8)));
Val x798 = ((x797 + ((x606 + (x600 * arg3.a[4]._super._super)) * Val(16))) + ((x613 + (x607 * arg3.a[5]._super._super)) * Val(32)));
Val x799 = ((x798 + ((x620 + (x614 * arg3.a[6]._super._super)) * Val(64))) + ((x627 + (x621 * arg3.a[7]._super._super)) * Val(128)));
Val x800 = ((x799 + ((x634 + (x628 * arg3.a[8]._super._super)) * Val(256))) + ((x641 + (x635 * arg3.a[9]._super._super)) * Val(512)));
Val x801 = ((x800 + ((x648 + (x642 * arg3.a[10]._super._super)) * Val(1024))) + ((x655 + (x649 * arg3.a[11]._super._super)) * Val(2048)));
Val x802 = ((x801 + ((x662 + (x656 * arg3.a[12]._super._super)) * Val(4096))) + ((x669 + (x663 * arg3.a[13]._super._super)) * Val(8192)));
Val x803 = ((x802 + ((x676 + (x670 * arg3.a[14]._super._super)) * Val(16384))) + ((x683 + (x677 * arg3.a[15]._super._super)) * Val(32768)));
Val x804 = ((x690 + (x684 * arg3.a[16]._super._super)) + ((x697 + (x691 * arg3.a[17]._super._super)) * Val(2)));
Val x805 = ((x804 + ((x704 + (x698 * arg3.a[18]._super._super)) * Val(4))) + ((x711 + (x705 * arg3.a[19]._super._super)) * Val(8)));
Val x806 = ((x805 + ((x718 + (x712 * arg3.a[20]._super._super)) * Val(16))) + ((x725 + (x719 * arg3.a[21]._super._super)) * Val(32)));
Val x807 = ((x806 + ((x732 + (x726 * arg3.a[22]._super._super)) * Val(64))) + ((x739 + (x733 * arg3.a[23]._super._super)) * Val(128)));
Val x808 = ((x807 + ((x746 + (x740 * arg3.a[24]._super._super)) * Val(256))) + ((x753 + (x747 * arg3.a[25]._super._super)) * Val(512)));
Val x809 = ((x808 + ((x760 + (x754 * arg3.a[26]._super._super)) * Val(1024))) + ((x767 + (x761 * arg3.a[27]._super._super)) * Val(2048)));
Val x810 = ((x809 + ((x774 + (x768 * arg3.a[28]._super._super)) * Val(4096))) + ((x781 + (x775 * arg3.a[29]._super._super)) * Val(8192)));
Val x811 = ((x810 + ((x788 + (x782 * arg3.a[30]._super._super)) * Val(16384))) + ((x795 + (x789 * arg3.a[31]._super._super)) * Val(32768)));
Val x812 = ((x250 - (x218 * x156)) + ((x251 - (x221 * x159)) * Val(2)));
Val x813 = ((x812 + ((x252 - (x224 * x162)) * Val(4))) + ((x253 - (x227 * x165)) * Val(8)));
Val x814 = ((x813 + ((x254 - (x230 * x168)) * Val(16))) + ((x255 - (x233 * x171)) * Val(32)));
Val x815 = ((x814 + ((x256 - (x236 * x174)) * Val(64))) + ((x257 - (x239 * x177)) * Val(128)));
Val x816 = ((x815 + ((x258 - (x242 * x180)) * Val(256))) + ((x259 - (x245 * x183)) * Val(512)));
Val x817 = ((x816 + ((x260 - (x248 * x186)) * Val(1024))) + ((x261 - (x155 * x189)) * Val(2048)));
Val x818 = ((x817 + ((x262 - (x158 * x192)) * Val(4096))) + ((x263 - (x161 * x195)) * Val(8192)));
Val x819 = ((x818 + ((x264 - (x164 * x198)) * Val(16384))) + ((x265 - (x167 * x201)) * Val(32768)));
Val x820 = ((x266 - (x170 * x204)) + ((x267 - (x173 * x207)) * Val(2)));
Val x821 = ((x820 + ((x268 - (x176 * x210)) * Val(4))) + ((x269 - (x179 * x213)) * Val(8)));
Val x822 = ((x821 + ((x270 - (x182 * x216)) * Val(16))) + ((x271 - (x185 * x219)) * Val(32)));
Val x823 = ((x822 + ((x272 - (x188 * x222)) * Val(64))) + ((x273 - (x191 * x225)) * Val(128)));
Val x824 = ((x823 + ((x274 - (x194 * x228)) * Val(256))) + ((x275 - (x197 * x231)) * Val(512)));
Val x825 = ((x824 + ((x276 - (x200 * x234)) * Val(1024))) + ((x277 - (x203 * x237)) * Val(2048)));
Val x826 = ((x825 + ((x278 - (x206 * x240)) * Val(4096))) + ((x279 - (x209 * x243)) * Val(8192)));
Val x827 = ((x826 + ((x280 - (x212 * x246)) * Val(16384))) + ((x281 - (x215 * x249)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x828 = (x570 + (x803 + x819));
Val x829 = (x571 + (x811 + x827));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:100)
Val x830 = (arg4.a[1]._super._super * Val(2));
Val x831 = (arg4.a[2]._super._super * Val(4));
Val x832 = (arg4.a[3]._super._super * Val(8));
Val x833 = (arg4.a[4]._super._super * Val(16));
Val x834 = (arg4.a[5]._super._super * Val(32));
Val x835 = (arg4.a[6]._super._super * Val(64));
Val x836 = (arg4.a[7]._super._super * Val(128));
Val x837 = (arg4.a[8]._super._super * Val(256));
Val x838 = (arg4.a[9]._super._super * Val(512));
Val x839 = (arg4.a[10]._super._super * Val(1024));
Val x840 = (arg4.a[11]._super._super * Val(2048));
Val x841 = (arg4.a[12]._super._super * Val(4096));
Val x842 = (arg4.a[13]._super._super * Val(8192));
Val x843 = (arg4.a[14]._super._super * Val(16384));
Val x844 = (arg4.a[15]._super._super * Val(32768));
Val x845 = (arg4.a[0]._super._super + x830);
Val x846 = (((x845 + x831) + x832) + x833);
Val x847 = (((x846 + x834) + x835) + x836);
Val x848 = (((x847 + x837) + x838) + x839);
Val x849 = (((x848 + x840) + x841) + x842);
Val x850 = (arg4.a[17]._super._super * Val(2));
Val x851 = (arg4.a[18]._super._super * Val(4));
Val x852 = (arg4.a[19]._super._super * Val(8));
Val x853 = (arg4.a[20]._super._super * Val(16));
Val x854 = (arg4.a[21]._super._super * Val(32));
Val x855 = (arg4.a[22]._super._super * Val(64));
Val x856 = (arg4.a[23]._super._super * Val(128));
Val x857 = (arg4.a[24]._super._super * Val(256));
Val x858 = (arg4.a[25]._super._super * Val(512));
Val x859 = (arg4.a[26]._super._super * Val(1024));
Val x860 = (arg4.a[27]._super._super * Val(2048));
Val x861 = (arg4.a[28]._super._super * Val(4096));
Val x862 = (arg4.a[29]._super._super * Val(8192));
Val x863 = (arg4.a[30]._super._super * Val(16384));
Val x864 = (arg4.a[31]._super._super * Val(32768));
Val x865 = (arg4.a[16]._super._super + x850);
Val x866 = (((x865 + x851) + x852) + x853);
Val x867 = (((x866 + x854) + x855) + x856);
Val x868 = (((x867 + x857) + x858) + x859);
Val x869 = (((x868 + x860) + x861) + x862);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x870 = (x570 + ((x849 + x843) + x844));
Val x871 = (x571 + ((x869 + x863) + x864));
// Log(<preamble>:22)
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:140)
INVOKE_EXTERN(ctx,log, "a = ", std::initializer_list<Val>{x828, x829});
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:141)
INVOKE_EXTERN(ctx,log, "e = ", std::initializer_list<Val>{x870, x871});
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:142)
UnpackReg_32__16_Struct x872 = exec_CarryAndExpand(ctx,Val2Array{x828, x829}, LAYOUT_LOOKUP(layout5, a));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:143)
UnpackReg_32__16_Struct x873 = exec_CarryAndExpand(ctx,Val2Array{x870, x871}, LAYOUT_LOOKUP(layout5, e));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:150)
Val x874 = (arg1_0.dataAddr._super + Val(1));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:153)
Val x875 = (Val(1) - x7._super);
Val x876 = (arg1_0.round._super + Val(1));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:154)
Val x877 = ((x7._super * Val(35)) + (x875 * Val(34)));
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:142)
Val32Array x878 = Val32Array{x872._super[0]._super, x872._super[1]._super, x872._super[2]._super, x872._super[3]._super, x872._super[4]._super, x872._super[5]._super, x872._super[6]._super, x872._super[7]._super, x872._super[8]._super, x872._super[9]._super, x872._super[10]._super, x872._super[11]._super, x872._super[12]._super, x872._super[13]._super, x872._super[14]._super, x872._super[15]._super, x872._super[16]._super, x872._super[17]._super, x872._super[18]._super, x872._super[19]._super, x872._super[20]._super, x872._super[21]._super, x872._super[22]._super, x872._super[23]._super, x872._super[24]._super, x872._super[25]._super, x872._super[26]._super, x872._super[27]._super, x872._super[28]._super, x872._super[29]._super, x872._super[30]._super, x872._super[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:143)
Val32Array x879 = Val32Array{x873._super[0]._super, x873._super[1]._super, x873._super[2]._super, x873._super[3]._super, x873._super[4]._super, x873._super[5]._super, x873._super[6]._super, x873._super[7]._super, x873._super[8]._super, x873._super[9]._super, x873._super[10]._super, x873._super[11]._super, x873._super[12]._super, x873._super[13]._super, x873._super[14]._super, x873._super[15]._super, x873._super[16]._super, x873._super[17]._super, x873._super[18]._super, x873._super[19]._super, x873._super[20]._super, x873._super[21]._super, x873._super[22]._super, x873._super[23]._super, x873._super[24]._super, x873._super[25]._super, x873._super[26]._super, x873._super[27]._super, x873._super[28]._super, x873._super[29]._super, x873._super[30]._super, x873._super[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:137)
Val32Array x880 = Val32Array{x44[0]._super, x44[1]._super, x44[2]._super, x44[3]._super, x44[4]._super, x44[5]._super, x44[6]._super, x44[7]._super, x44[8]._super, x44[9]._super, x44[10]._super, x44[11]._super, x44[12]._super, x44[13]._super, x44[14]._super, x44[15]._super, x44[16]._super, x44[17]._super, x44[18]._super, x44[19]._super, x44[20]._super, x44[21]._super, x44[22]._super, x44[23]._super, x44[24]._super, x44[25]._super, x44[26]._super, x44[27]._super, x44[28]._super, x44[29]._super, x44[30]._super, x44[31]._super};
// ShaLoadData(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:144)
ShaStateStruct x881 = exec_ShaState(ctx,x878, x879, x880, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, x874, arg1_0.count._super, arg1_0.kAddr._super, (x875 * x876), x877, LAYOUT_LOOKUP(layout5, _super));
return x881;
}
ShaStateStruct exec_ShaMix(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, ShaStateStruct arg4, ShaStateStruct arg5, ShaStateStruct arg6, ShaStateStruct arg7, BoundLayout<ShaMixLayout> layout8)   {
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:163)
Val x9 = (Val(47) - arg1_0.round._super);
NondetRegStruct x10_0 = exec_IsZero(ctx,x9, LAYOUT_LOOKUP(layout8, lastRound));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:164)
Val x11_0 = (arg1_0.kAddr._super + Val(16));
GetDataStruct x12_0 = exec_MemoryRead(ctx,arg0, (x11_0 + arg1_0.round._super), LAYOUT_LOOKUP(layout8, k));
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:48)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:84)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:165)
Val x13_0 = (arg6.w[18]._super._super + arg6.w[3]._super._super);
Val x14_0 = (arg6.w[18]._super._super * Val(2));
Val x15_0 = (x13_0 - (x14_0 * arg6.w[3]._super._super));
Val x16 = (arg6.w[19]._super._super + arg6.w[4]._super._super);
Val x17 = (arg6.w[19]._super._super * Val(2));
Val x18 = (x16 - (x17 * arg6.w[4]._super._super));
Val x19 = (arg6.w[20]._super._super + arg6.w[5]._super._super);
Val x20 = (arg6.w[20]._super._super * Val(2));
Val x21 = (x19 - (x20 * arg6.w[5]._super._super));
Val x22 = (arg6.w[21]._super._super + arg6.w[6]._super._super);
Val x23 = (arg6.w[21]._super._super * Val(2));
Val x24 = (x22 - (x23 * arg6.w[6]._super._super));
Val x25 = (arg6.w[22]._super._super + arg6.w[7]._super._super);
Val x26 = (arg6.w[22]._super._super * Val(2));
Val x27 = (x25 - (x26 * arg6.w[7]._super._super));
Val x28 = (arg6.w[23]._super._super + arg6.w[8]._super._super);
Val x29 = (arg6.w[23]._super._super * Val(2));
Val x30 = (x28 - (x29 * arg6.w[8]._super._super));
Val x31 = (arg6.w[24]._super._super + arg6.w[9]._super._super);
Val x32 = (arg6.w[24]._super._super * Val(2));
Val x33 = (x31 - (x32 * arg6.w[9]._super._super));
Val x34 = (arg6.w[25]._super._super + arg6.w[10]._super._super);
Val x35 = (arg6.w[25]._super._super * Val(2));
Val x36 = (x34 - (x35 * arg6.w[10]._super._super));
Val x37 = (arg6.w[26]._super._super + arg6.w[11]._super._super);
Val x38 = (arg6.w[26]._super._super * Val(2));
Val x39 = (x37 - (x38 * arg6.w[11]._super._super));
Val x40 = (arg6.w[27]._super._super + arg6.w[12]._super._super);
Val x41 = (arg6.w[27]._super._super * Val(2));
Val x42 = (x40 - (x41 * arg6.w[12]._super._super));
Val x43 = (arg6.w[28]._super._super + arg6.w[13]._super._super);
Val x44 = (arg6.w[28]._super._super * Val(2));
Val x45 = (x43 - (x44 * arg6.w[13]._super._super));
Val x46 = (arg6.w[29]._super._super + arg6.w[14]._super._super);
Val x47 = (arg6.w[29]._super._super * Val(2));
Val x48 = (x46 - (x47 * arg6.w[14]._super._super));
Val x49 = (arg6.w[30]._super._super + arg6.w[15]._super._super);
Val x50 = (arg6.w[30]._super._super * Val(2));
Val x51 = (x49 - (x50 * arg6.w[15]._super._super));
Val x52 = (arg6.w[31]._super._super + arg6.w[16]._super._super);
Val x53 = (arg6.w[31]._super._super * Val(2));
Val x54 = (x52 - (x53 * arg6.w[16]._super._super));
Val x55 = (arg6.w[0]._super._super + arg6.w[17]._super._super);
Val x56 = (arg6.w[0]._super._super * Val(2));
Val x57 = (x55 - (x56 * arg6.w[17]._super._super));
Val x58 = (arg6.w[1]._super._super + arg6.w[18]._super._super);
Val x59 = (arg6.w[1]._super._super * Val(2));
Val x60 = (x58 - (x59 * arg6.w[18]._super._super));
Val x61 = (arg6.w[2]._super._super + arg6.w[19]._super._super);
Val x62 = (arg6.w[2]._super._super * Val(2));
Val x63 = (x61 - (x62 * arg6.w[19]._super._super));
Val x64 = (arg6.w[3]._super._super + arg6.w[20]._super._super);
Val x65 = (arg6.w[3]._super._super * Val(2));
Val x66 = (x64 - (x65 * arg6.w[20]._super._super));
Val x67 = (arg6.w[4]._super._super + arg6.w[21]._super._super);
Val x68 = (arg6.w[4]._super._super * Val(2));
Val x69 = (x67 - (x68 * arg6.w[21]._super._super));
Val x70 = (arg6.w[5]._super._super + arg6.w[22]._super._super);
Val x71 = (arg6.w[5]._super._super * Val(2));
Val x72 = (x70 - (x71 * arg6.w[22]._super._super));
Val x73 = (arg6.w[6]._super._super + arg6.w[23]._super._super);
Val x74 = (arg6.w[6]._super._super * Val(2));
Val x75 = (x73 - (x74 * arg6.w[23]._super._super));
Val x76 = (arg6.w[7]._super._super + arg6.w[24]._super._super);
Val x77 = (arg6.w[7]._super._super * Val(2));
Val x78 = (x76 - (x77 * arg6.w[24]._super._super));
Val x79 = (arg6.w[8]._super._super + arg6.w[25]._super._super);
Val x80 = (arg6.w[8]._super._super * Val(2));
Val x81 = (x79 - (x80 * arg6.w[25]._super._super));
Val x82 = (arg6.w[9]._super._super + arg6.w[26]._super._super);
Val x83 = (arg6.w[9]._super._super * Val(2));
Val x84 = (x82 - (x83 * arg6.w[26]._super._super));
Val x85 = (arg6.w[10]._super._super + arg6.w[27]._super._super);
Val x86 = (arg6.w[10]._super._super * Val(2));
Val x87 = (x85 - (x86 * arg6.w[27]._super._super));
Val x88 = (arg6.w[11]._super._super + arg6.w[28]._super._super);
Val x89 = (arg6.w[11]._super._super * Val(2));
Val x90 = (x88 - (x89 * arg6.w[28]._super._super));
Val x91 = (arg6.w[12]._super._super + arg6.w[29]._super._super);
Val x92 = (arg6.w[12]._super._super * Val(2));
Val x93 = (x91 - (x92 * arg6.w[29]._super._super));
Val x94 = (arg6.w[13]._super._super + arg6.w[30]._super._super);
Val x95 = (arg6.w[13]._super._super * Val(2));
Val x96 = (x94 - (x95 * arg6.w[30]._super._super));
Val x97 = (arg6.w[14]._super._super + arg6.w[31]._super._super);
Val x98 = (arg6.w[14]._super._super * Val(2));
Val x99 = (x97 - (x98 * arg6.w[31]._super._super));
Val x100 = (arg6.w[7]._super._super + x15_0);
Val x101 = (arg6.w[8]._super._super + x18);
Val x102 = (arg6.w[9]._super._super + x21);
Val x103 = (arg6.w[10]._super._super + x24);
Val x104 = (arg6.w[11]._super._super + x27);
Val x105 = (arg6.w[12]._super._super + x30);
Val x106 = (arg6.w[13]._super._super + x33);
Val x107 = (arg6.w[14]._super._super + x36);
Val x108 = (arg6.w[15]._super._super + x39);
Val x109 = (arg6.w[15]._super._super * Val(2));
Val x110 = (arg6.w[16]._super._super + x42);
Val x111 = (arg6.w[16]._super._super * Val(2));
Val x112 = (arg6.w[17]._super._super + x45);
Val x113 = (arg6.w[17]._super._super * Val(2));
Val x114 = (arg6.w[18]._super._super + x48);
Val x115 = (arg6.w[19]._super._super + x51);
Val x116 = (arg6.w[20]._super._super + x54);
Val x117 = (arg6.w[21]._super._super + x57);
Val x118 = (arg6.w[22]._super._super + x60);
Val x119 = (arg6.w[23]._super._super + x63);
Val x120 = (arg6.w[24]._super._super + x66);
Val x121 = (arg6.w[25]._super._super + x69);
Val x122 = (arg6.w[26]._super._super + x72);
Val x123 = (arg6.w[27]._super._super + x75);
Val x124 = (arg6.w[28]._super._super + x78);
Val x125 = (arg6.w[29]._super._super + x81);
Val x126 = (arg6.w[30]._super._super + x84);
Val x127 = (arg6.w[31]._super._super + x87);
Val x128 = (arg6.w[0]._super._super + x90);
Val x129 = (arg6.w[1]._super._super + x93);
Val x130 = (arg6.w[2]._super._super + x96);
Val x131 = (arg6.w[3]._super._super + x99);
Val x132 = (arg6.w[4]._super._super + arg6.w[15]._super._super);
Val x133 = (arg6.w[5]._super._super + arg6.w[16]._super._super);
Val x134 = (arg6.w[6]._super._super + arg6.w[17]._super._super);
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:85)
Val x135 = (arg2_0.w[19]._super._super + arg2_0.w[10]._super._super);
Val x136 = (arg2_0.w[19]._super._super * Val(2));
Val x137 = (x135 - (x136 * arg2_0.w[10]._super._super));
Val x138 = (arg2_0.w[20]._super._super + arg2_0.w[11]._super._super);
Val x139 = (arg2_0.w[20]._super._super * Val(2));
Val x140 = (x138 - (x139 * arg2_0.w[11]._super._super));
Val x141 = (arg2_0.w[21]._super._super + arg2_0.w[12]._super._super);
Val x142 = (arg2_0.w[21]._super._super * Val(2));
Val x143 = (x141 - (x142 * arg2_0.w[12]._super._super));
Val x144 = (arg2_0.w[22]._super._super + arg2_0.w[13]._super._super);
Val x145 = (arg2_0.w[22]._super._super * Val(2));
Val x146 = (x144 - (x145 * arg2_0.w[13]._super._super));
Val x147 = (arg2_0.w[23]._super._super + arg2_0.w[14]._super._super);
Val x148 = (arg2_0.w[23]._super._super * Val(2));
Val x149 = (x147 - (x148 * arg2_0.w[14]._super._super));
Val x150 = (arg2_0.w[24]._super._super + arg2_0.w[15]._super._super);
Val x151 = (arg2_0.w[24]._super._super * Val(2));
Val x152 = (x150 - (x151 * arg2_0.w[15]._super._super));
Val x153 = (arg2_0.w[25]._super._super + arg2_0.w[16]._super._super);
Val x154 = (arg2_0.w[25]._super._super * Val(2));
Val x155 = (x153 - (x154 * arg2_0.w[16]._super._super));
Val x156 = (arg2_0.w[26]._super._super + arg2_0.w[17]._super._super);
Val x157 = (arg2_0.w[26]._super._super * Val(2));
Val x158 = (x156 - (x157 * arg2_0.w[17]._super._super));
Val x159 = (arg2_0.w[27]._super._super + arg2_0.w[18]._super._super);
Val x160 = (arg2_0.w[27]._super._super * Val(2));
Val x161 = (x159 - (x160 * arg2_0.w[18]._super._super));
Val x162 = (arg2_0.w[28]._super._super + arg2_0.w[19]._super._super);
Val x163 = (arg2_0.w[28]._super._super * Val(2));
Val x164 = (x162 - (x163 * arg2_0.w[19]._super._super));
Val x165 = (arg2_0.w[29]._super._super + arg2_0.w[20]._super._super);
Val x166 = (arg2_0.w[29]._super._super * Val(2));
Val x167 = (x165 - (x166 * arg2_0.w[20]._super._super));
Val x168 = (arg2_0.w[30]._super._super + arg2_0.w[21]._super._super);
Val x169 = (arg2_0.w[30]._super._super * Val(2));
Val x170 = (x168 - (x169 * arg2_0.w[21]._super._super));
Val x171 = (arg2_0.w[31]._super._super + arg2_0.w[22]._super._super);
Val x172 = (arg2_0.w[31]._super._super * Val(2));
Val x173 = (x171 - (x172 * arg2_0.w[22]._super._super));
Val x174 = (arg2_0.w[0]._super._super + arg2_0.w[23]._super._super);
Val x175 = (arg2_0.w[0]._super._super * Val(2));
Val x176 = (x174 - (x175 * arg2_0.w[23]._super._super));
Val x177 = (arg2_0.w[1]._super._super + arg2_0.w[24]._super._super);
Val x178 = (arg2_0.w[1]._super._super * Val(2));
Val x179 = (x177 - (x178 * arg2_0.w[24]._super._super));
Val x180 = (arg2_0.w[2]._super._super + arg2_0.w[25]._super._super);
Val x181 = (arg2_0.w[2]._super._super * Val(2));
Val x182 = (x180 - (x181 * arg2_0.w[25]._super._super));
Val x183 = (arg2_0.w[3]._super._super + arg2_0.w[26]._super._super);
Val x184 = (arg2_0.w[3]._super._super * Val(2));
Val x185 = (x183 - (x184 * arg2_0.w[26]._super._super));
Val x186 = (arg2_0.w[4]._super._super + arg2_0.w[27]._super._super);
Val x187 = (arg2_0.w[4]._super._super * Val(2));
Val x188 = (x186 - (x187 * arg2_0.w[27]._super._super));
Val x189 = (arg2_0.w[5]._super._super + arg2_0.w[28]._super._super);
Val x190 = (arg2_0.w[5]._super._super * Val(2));
Val x191 = (x189 - (x190 * arg2_0.w[28]._super._super));
Val x192 = (arg2_0.w[6]._super._super + arg2_0.w[29]._super._super);
Val x193 = (arg2_0.w[6]._super._super * Val(2));
Val x194 = (x192 - (x193 * arg2_0.w[29]._super._super));
Val x195 = (arg2_0.w[7]._super._super + arg2_0.w[30]._super._super);
Val x196 = (arg2_0.w[7]._super._super * Val(2));
Val x197 = (x195 - (x196 * arg2_0.w[30]._super._super));
Val x198 = (arg2_0.w[8]._super._super + arg2_0.w[31]._super._super);
Val x199 = (arg2_0.w[8]._super._super * Val(2));
Val x200 = (x198 - (x199 * arg2_0.w[31]._super._super));
Val x201 = (arg2_0.w[17]._super._super + x137);
Val x202 = (arg2_0.w[17]._super._super * Val(2));
Val x203 = (arg2_0.w[18]._super._super + x140);
Val x204 = (arg2_0.w[18]._super._super * Val(2));
Val x205 = (arg2_0.w[19]._super._super + x143);
Val x206 = (arg2_0.w[20]._super._super + x146);
Val x207 = (arg2_0.w[21]._super._super + x149);
Val x208 = (arg2_0.w[22]._super._super + x152);
Val x209 = (arg2_0.w[23]._super._super + x155);
Val x210 = (arg2_0.w[24]._super._super + x158);
Val x211 = (arg2_0.w[25]._super._super + x161);
Val x212 = (arg2_0.w[26]._super._super + x164);
Val x213 = (arg2_0.w[27]._super._super + x167);
Val x214 = (arg2_0.w[28]._super._super + x170);
Val x215 = (arg2_0.w[29]._super._super + x173);
Val x216 = (arg2_0.w[30]._super._super + x176);
Val x217 = (arg2_0.w[31]._super._super + x179);
Val x218 = (arg2_0.w[0]._super._super + x182);
Val x219 = (arg2_0.w[1]._super._super + x185);
Val x220 = (arg2_0.w[2]._super._super + x188);
Val x221 = (arg2_0.w[3]._super._super + x191);
Val x222 = (arg2_0.w[4]._super._super + x194);
Val x223 = (arg2_0.w[5]._super._super + x197);
Val x224 = (arg2_0.w[6]._super._super + x200);
Val x225 = (arg2_0.w[7]._super._super + arg2_0.w[9]._super._super);
Val x226 = (arg2_0.w[8]._super._super + arg2_0.w[10]._super._super);
Val x227 = (arg2_0.w[9]._super._super + arg2_0.w[11]._super._super);
Val x228 = (arg2_0.w[9]._super._super * Val(2));
Val x229 = (arg2_0.w[10]._super._super + arg2_0.w[12]._super._super);
Val x230 = (arg2_0.w[10]._super._super * Val(2));
Val x231 = (arg2_0.w[11]._super._super + arg2_0.w[13]._super._super);
Val x232 = (arg2_0.w[11]._super._super * Val(2));
Val x233 = (arg2_0.w[12]._super._super + arg2_0.w[14]._super._super);
Val x234 = (arg2_0.w[12]._super._super * Val(2));
Val x235 = (arg2_0.w[13]._super._super + arg2_0.w[15]._super._super);
Val x236 = (arg2_0.w[13]._super._super * Val(2));
Val x237 = (arg2_0.w[14]._super._super + arg2_0.w[16]._super._super);
Val x238 = (arg2_0.w[14]._super._super * Val(2));
Val x239 = (arg2_0.w[15]._super._super + arg2_0.w[17]._super._super);
Val x240 = (arg2_0.w[15]._super._super * Val(2));
Val x241 = (arg2_0.w[16]._super._super + arg2_0.w[18]._super._super);
Val x242 = (arg2_0.w[16]._super._super * Val(2));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeWBack(zirgen/circuit/rv32im/v2/dsl/sha2.zir:86)
Val x243 = ((x100 - (x77 * x15_0)) + ((x101 - (x80 * x18)) * Val(2)));
Val x244 = ((x243 + ((x102 - (x83 * x21)) * Val(4))) + ((x103 - (x86 * x24)) * Val(8)));
Val x245 = ((x244 + ((x104 - (x89 * x27)) * Val(16))) + ((x105 - (x92 * x30)) * Val(32)));
Val x246 = ((x245 + ((x106 - (x95 * x33)) * Val(64))) + ((x107 - (x98 * x36)) * Val(128)));
Val x247 = ((x246 + ((x108 - (x109 * x39)) * Val(256))) + ((x110 - (x111 * x42)) * Val(512)));
Val x248 = ((x247 + ((x112 - (x113 * x45)) * Val(1024))) + ((x114 - (x14_0 * x48)) * Val(2048)));
Val x249 = ((x248 + ((x115 - (x17 * x51)) * Val(4096))) + ((x116 - (x20 * x54)) * Val(8192)));
Val x250 = ((x249 + ((x117 - (x23 * x57)) * Val(16384))) + ((x118 - (x26 * x60)) * Val(32768)));
Val x251 = ((x119 - (x29 * x63)) + ((x120 - (x32 * x66)) * Val(2)));
Val x252 = ((x251 + ((x121 - (x35 * x69)) * Val(4))) + ((x122 - (x38 * x72)) * Val(8)));
Val x253 = ((x252 + ((x123 - (x41 * x75)) * Val(16))) + ((x124 - (x44 * x78)) * Val(32)));
Val x254 = ((x253 + ((x125 - (x47 * x81)) * Val(64))) + ((x126 - (x50 * x84)) * Val(128)));
Val x255 = ((x254 + ((x127 - (x53 * x87)) * Val(256))) + ((x128 - (x56 * x90)) * Val(512)));
Val x256 = ((x255 + ((x129 - (x59 * x93)) * Val(1024))) + ((x130 - (x62 * x96)) * Val(2048)));
Val x257 = ((x256 + ((x131 - (x65 * x99)) * Val(4096))) + ((x132 - (x68 * arg6.w[15]._super._super)) * Val(8192)));
Val x258 = ((x257 + ((x133 - (x71 * arg6.w[16]._super._super)) * Val(16384))) + ((x134 - (x74 * arg6.w[17]._super._super)) * Val(32768)));
Val x259 = ((x201 - (x202 * x137)) + ((x203 - (x204 * x140)) * Val(2)));
Val x260 = ((x259 + ((x205 - (x136 * x143)) * Val(4))) + ((x206 - (x139 * x146)) * Val(8)));
Val x261 = ((x260 + ((x207 - (x142 * x149)) * Val(16))) + ((x208 - (x145 * x152)) * Val(32)));
Val x262 = ((x261 + ((x209 - (x148 * x155)) * Val(64))) + ((x210 - (x151 * x158)) * Val(128)));
Val x263 = ((x262 + ((x211 - (x154 * x161)) * Val(256))) + ((x212 - (x157 * x164)) * Val(512)));
Val x264 = ((x263 + ((x213 - (x160 * x167)) * Val(1024))) + ((x214 - (x163 * x170)) * Val(2048)));
Val x265 = ((x264 + ((x215 - (x166 * x173)) * Val(4096))) + ((x216 - (x169 * x176)) * Val(8192)));
Val x266 = ((x265 + ((x217 - (x172 * x179)) * Val(16384))) + ((x218 - (x175 * x182)) * Val(32768)));
Val x267 = ((x219 - (x178 * x185)) + ((x220 - (x181 * x188)) * Val(2)));
Val x268 = ((x267 + ((x221 - (x184 * x191)) * Val(4))) + ((x222 - (x187 * x194)) * Val(8)));
Val x269 = ((x268 + ((x223 - (x190 * x197)) * Val(16))) + ((x224 - (x193 * x200)) * Val(32)));
Val x270 = ((x269 + ((x225 - (x196 * arg2_0.w[9]._super._super)) * Val(64))) + ((x226 - (x199 * arg2_0.w[10]._super._super)) * Val(128)));
Val x271 = ((x270 + ((x227 - (x228 * arg2_0.w[11]._super._super)) * Val(256))) + ((x229 - (x230 * arg2_0.w[12]._super._super)) * Val(512)));
Val x272 = ((x271 + ((x231 - (x232 * arg2_0.w[13]._super._super)) * Val(1024))) + ((x233 - (x234 * arg2_0.w[14]._super._super)) * Val(2048)));
Val x273 = ((x272 + ((x235 - (x236 * arg2_0.w[15]._super._super)) * Val(4096))) + ((x237 - (x238 * arg2_0.w[16]._super._super)) * Val(8192)));
Val x274 = ((x273 + ((x239 - (x240 * arg2_0.w[17]._super._super)) * Val(16384))) + ((x241 - (x242 * arg2_0.w[18]._super._super)) * Val(32768)));
Val x275 = (arg7.w[1]._super._super * Val(2));
Val x276 = (arg7.w[2]._super._super * Val(4));
Val x277 = (arg7.w[3]._super._super * Val(8));
Val x278 = (arg7.w[4]._super._super * Val(16));
Val x279 = (arg7.w[5]._super._super * Val(32));
Val x280 = (arg7.w[6]._super._super * Val(64));
Val x281 = (arg7.w[7]._super._super * Val(128));
Val x282 = (arg7.w[8]._super._super * Val(256));
Val x283 = (arg7.w[9]._super._super * Val(512));
Val x284 = (arg7.w[10]._super._super * Val(1024));
Val x285 = (arg7.w[11]._super._super * Val(2048));
Val x286 = (arg7.w[12]._super._super * Val(4096));
Val x287 = (arg7.w[13]._super._super * Val(8192));
Val x288 = (arg7.w[14]._super._super * Val(16384));
Val x289 = (arg7.w[15]._super._super * Val(32768));
Val x290 = (arg7.w[0]._super._super + x275);
Val x291 = (((x290 + x276) + x277) + x278);
Val x292 = (((x291 + x279) + x280) + x281);
Val x293 = (((x292 + x282) + x283) + x284);
Val x294 = (((x293 + x285) + x286) + x287);
Val x295 = (arg7.w[17]._super._super * Val(2));
Val x296 = (arg7.w[18]._super._super * Val(4));
Val x297 = (arg7.w[19]._super._super * Val(8));
Val x298 = (arg7.w[20]._super._super * Val(16));
Val x299 = (arg7.w[21]._super._super * Val(32));
Val x300 = (arg7.w[22]._super._super * Val(64));
Val x301 = (arg7.w[23]._super._super * Val(128));
Val x302 = (arg7.w[24]._super._super * Val(256));
Val x303 = (arg7.w[25]._super._super * Val(512));
Val x304 = (arg7.w[26]._super._super * Val(1024));
Val x305 = (arg7.w[27]._super._super * Val(2048));
Val x306 = (arg7.w[28]._super._super * Val(4096));
Val x307 = (arg7.w[29]._super._super * Val(8192));
Val x308 = (arg7.w[30]._super._super * Val(16384));
Val x309 = (arg7.w[31]._super._super * Val(32768));
Val x310 = (arg7.w[16]._super._super + x295);
Val x311 = (((x310 + x296) + x297) + x298);
Val x312 = (((x311 + x299) + x300) + x301);
Val x313 = (((x312 + x302) + x303) + x304);
Val x314 = (((x313 + x305) + x306) + x307);
Val x315 = (arg5.w[1]._super._super * Val(2));
Val x316 = (arg5.w[2]._super._super * Val(4));
Val x317 = (arg5.w[3]._super._super * Val(8));
Val x318 = (arg5.w[4]._super._super * Val(16));
Val x319 = (arg5.w[5]._super._super * Val(32));
Val x320 = (arg5.w[6]._super._super * Val(64));
Val x321 = (arg5.w[7]._super._super * Val(128));
Val x322 = (arg5.w[8]._super._super * Val(256));
Val x323 = (arg5.w[9]._super._super * Val(512));
Val x324 = (arg5.w[10]._super._super * Val(1024));
Val x325 = (arg5.w[11]._super._super * Val(2048));
Val x326 = (arg5.w[12]._super._super * Val(4096));
Val x327 = (arg5.w[13]._super._super * Val(8192));
Val x328 = (arg5.w[14]._super._super * Val(16384));
Val x329 = (arg5.w[15]._super._super * Val(32768));
Val x330 = (arg5.w[0]._super._super + x315);
Val x331 = (((x330 + x316) + x317) + x318);
Val x332 = (((x331 + x319) + x320) + x321);
Val x333 = (((x332 + x322) + x323) + x324);
Val x334 = (((x333 + x325) + x326) + x327);
Val x335 = (arg5.w[17]._super._super * Val(2));
Val x336 = (arg5.w[18]._super._super * Val(4));
Val x337 = (arg5.w[19]._super._super * Val(8));
Val x338 = (arg5.w[20]._super._super * Val(16));
Val x339 = (arg5.w[21]._super._super * Val(32));
Val x340 = (arg5.w[22]._super._super * Val(64));
Val x341 = (arg5.w[23]._super._super * Val(128));
Val x342 = (arg5.w[24]._super._super * Val(256));
Val x343 = (arg5.w[25]._super._super * Val(512));
Val x344 = (arg5.w[26]._super._super * Val(1024));
Val x345 = (arg5.w[27]._super._super * Val(2048));
Val x346 = (arg5.w[28]._super._super * Val(4096));
Val x347 = (arg5.w[29]._super._super * Val(8192));
Val x348 = (arg5.w[30]._super._super * Val(16384));
Val x349 = (arg5.w[31]._super._super * Val(32768));
Val x350 = (arg5.w[16]._super._super + x335);
Val x351 = (((x350 + x336) + x337) + x338);
Val x352 = (((x351 + x339) + x340) + x341);
Val x353 = (((x352 + x342) + x343) + x344);
Val x354 = (((x353 + x345) + x346) + x347);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x355 = (((x294 + x288) + x289) + ((x334 + x328) + x329));
Val x356 = (((x314 + x308) + x309) + ((x354 + x348) + x349));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:166)
UnpackReg_32__16_Struct x357 = exec_CarryAndExpand(ctx,Val2Array{(x250 + (x266 + x355)), (x258 + (x274 + x356))}, LAYOUT_LOOKUP(layout8, wBits));
// BitXor(zirgen/circuit/rv32im/v2/dsl/bits.zir:48)
// XorU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:10)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:96)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:167)
Val x358 = (arg1_0.a[13]._super._super + arg1_0.a[22]._super._super);
Val x359 = (arg1_0.a[13]._super._super * Val(2));
Val x360 = (x358 - (x359 * arg1_0.a[22]._super._super));
Val x361 = (arg1_0.a[14]._super._super + arg1_0.a[23]._super._super);
Val x362 = (arg1_0.a[14]._super._super * Val(2));
Val x363 = (x361 - (x362 * arg1_0.a[23]._super._super));
Val x364 = (arg1_0.a[15]._super._super + arg1_0.a[24]._super._super);
Val x365 = (arg1_0.a[15]._super._super * Val(2));
Val x366 = (x364 - (x365 * arg1_0.a[24]._super._super));
Val x367 = (arg1_0.a[16]._super._super + arg1_0.a[25]._super._super);
Val x368 = (arg1_0.a[16]._super._super * Val(2));
Val x369 = (x367 - (x368 * arg1_0.a[25]._super._super));
Val x370 = (arg1_0.a[17]._super._super + arg1_0.a[26]._super._super);
Val x371 = (arg1_0.a[17]._super._super * Val(2));
Val x372 = (x370 - (x371 * arg1_0.a[26]._super._super));
Val x373 = (arg1_0.a[18]._super._super + arg1_0.a[27]._super._super);
Val x374 = (arg1_0.a[18]._super._super * Val(2));
Val x375 = (x373 - (x374 * arg1_0.a[27]._super._super));
Val x376 = (arg1_0.a[19]._super._super + arg1_0.a[28]._super._super);
Val x377 = (arg1_0.a[19]._super._super * Val(2));
Val x378 = (x376 - (x377 * arg1_0.a[28]._super._super));
Val x379 = (arg1_0.a[20]._super._super + arg1_0.a[29]._super._super);
Val x380 = (arg1_0.a[20]._super._super * Val(2));
Val x381 = (x379 - (x380 * arg1_0.a[29]._super._super));
Val x382 = (arg1_0.a[21]._super._super + arg1_0.a[30]._super._super);
Val x383 = (arg1_0.a[21]._super._super * Val(2));
Val x384 = (x382 - (x383 * arg1_0.a[30]._super._super));
Val x385 = (arg1_0.a[22]._super._super + arg1_0.a[31]._super._super);
Val x386 = (arg1_0.a[22]._super._super * Val(2));
Val x387 = (x385 - (x386 * arg1_0.a[31]._super._super));
Val x388 = (arg1_0.a[23]._super._super + arg1_0.a[0]._super._super);
Val x389 = (arg1_0.a[23]._super._super * Val(2));
Val x390 = (x388 - (x389 * arg1_0.a[0]._super._super));
Val x391 = (arg1_0.a[24]._super._super + arg1_0.a[1]._super._super);
Val x392 = (arg1_0.a[24]._super._super * Val(2));
Val x393 = (x391 - (x392 * arg1_0.a[1]._super._super));
Val x394 = (arg1_0.a[25]._super._super + arg1_0.a[2]._super._super);
Val x395 = (arg1_0.a[25]._super._super * Val(2));
Val x396 = (x394 - (x395 * arg1_0.a[2]._super._super));
Val x397 = (arg1_0.a[26]._super._super + arg1_0.a[3]._super._super);
Val x398 = (arg1_0.a[26]._super._super * Val(2));
Val x399 = (x397 - (x398 * arg1_0.a[3]._super._super));
Val x400 = (arg1_0.a[27]._super._super + arg1_0.a[4]._super._super);
Val x401 = (arg1_0.a[27]._super._super * Val(2));
Val x402 = (x400 - (x401 * arg1_0.a[4]._super._super));
Val x403 = (arg1_0.a[28]._super._super + arg1_0.a[5]._super._super);
Val x404 = (arg1_0.a[28]._super._super * Val(2));
Val x405 = (x403 - (x404 * arg1_0.a[5]._super._super));
Val x406 = (arg1_0.a[29]._super._super + arg1_0.a[6]._super._super);
Val x407 = (arg1_0.a[29]._super._super * Val(2));
Val x408 = (x406 - (x407 * arg1_0.a[6]._super._super));
Val x409 = (arg1_0.a[30]._super._super + arg1_0.a[7]._super._super);
Val x410 = (arg1_0.a[30]._super._super * Val(2));
Val x411 = (x409 - (x410 * arg1_0.a[7]._super._super));
Val x412 = (arg1_0.a[31]._super._super + arg1_0.a[8]._super._super);
Val x413 = (arg1_0.a[31]._super._super * Val(2));
Val x414 = (x412 - (x413 * arg1_0.a[8]._super._super));
Val x415 = (arg1_0.a[0]._super._super + arg1_0.a[9]._super._super);
Val x416 = (arg1_0.a[0]._super._super * Val(2));
Val x417 = (x415 - (x416 * arg1_0.a[9]._super._super));
Val x418 = (arg1_0.a[1]._super._super + arg1_0.a[10]._super._super);
Val x419 = (arg1_0.a[1]._super._super * Val(2));
Val x420 = (x418 - (x419 * arg1_0.a[10]._super._super));
Val x421 = (arg1_0.a[2]._super._super + arg1_0.a[11]._super._super);
Val x422 = (arg1_0.a[2]._super._super * Val(2));
Val x423 = (x421 - (x422 * arg1_0.a[11]._super._super));
Val x424 = (arg1_0.a[3]._super._super + arg1_0.a[12]._super._super);
Val x425 = (arg1_0.a[3]._super._super * Val(2));
Val x426 = (x424 - (x425 * arg1_0.a[12]._super._super));
Val x427 = (arg1_0.a[4]._super._super + arg1_0.a[13]._super._super);
Val x428 = (arg1_0.a[4]._super._super * Val(2));
Val x429 = (x427 - (x428 * arg1_0.a[13]._super._super));
Val x430 = (arg1_0.a[5]._super._super + arg1_0.a[14]._super._super);
Val x431 = (arg1_0.a[5]._super._super * Val(2));
Val x432 = (x430 - (x431 * arg1_0.a[14]._super._super));
Val x433 = (arg1_0.a[6]._super._super + arg1_0.a[15]._super._super);
Val x434 = (arg1_0.a[6]._super._super * Val(2));
Val x435 = (x433 - (x434 * arg1_0.a[15]._super._super));
Val x436 = (arg1_0.a[7]._super._super + arg1_0.a[16]._super._super);
Val x437 = (arg1_0.a[7]._super._super * Val(2));
Val x438 = (x436 - (x437 * arg1_0.a[16]._super._super));
Val x439 = (arg1_0.a[8]._super._super + arg1_0.a[17]._super._super);
Val x440 = (arg1_0.a[8]._super._super * Val(2));
Val x441 = (x439 - (x440 * arg1_0.a[17]._super._super));
Val x442 = (arg1_0.a[9]._super._super + arg1_0.a[18]._super._super);
Val x443 = (arg1_0.a[9]._super._super * Val(2));
Val x444 = (x442 - (x443 * arg1_0.a[18]._super._super));
Val x445 = (arg1_0.a[10]._super._super + arg1_0.a[19]._super._super);
Val x446 = (arg1_0.a[10]._super._super * Val(2));
Val x447 = (x445 - (x446 * arg1_0.a[19]._super._super));
Val x448 = (arg1_0.a[11]._super._super + arg1_0.a[20]._super._super);
Val x449 = (arg1_0.a[11]._super._super * Val(2));
Val x450 = (x448 - (x449 * arg1_0.a[20]._super._super));
Val x451 = (arg1_0.a[12]._super._super + arg1_0.a[21]._super._super);
Val x452 = (arg1_0.a[12]._super._super * Val(2));
Val x453 = (x451 - (x452 * arg1_0.a[21]._super._super));
Val x454 = (arg1_0.a[2]._super._super + x360);
Val x455 = (arg1_0.a[3]._super._super + x363);
Val x456 = (arg1_0.a[4]._super._super + x366);
Val x457 = (arg1_0.a[5]._super._super + x369);
Val x458 = (arg1_0.a[6]._super._super + x372);
Val x459 = (arg1_0.a[7]._super._super + x375);
Val x460 = (arg1_0.a[8]._super._super + x378);
Val x461 = (arg1_0.a[9]._super._super + x381);
Val x462 = (arg1_0.a[10]._super._super + x384);
Val x463 = (arg1_0.a[11]._super._super + x387);
Val x464 = (arg1_0.a[12]._super._super + x390);
Val x465 = (arg1_0.a[13]._super._super + x393);
Val x466 = (arg1_0.a[14]._super._super + x396);
Val x467 = (arg1_0.a[15]._super._super + x399);
Val x468 = (arg1_0.a[16]._super._super + x402);
Val x469 = (arg1_0.a[17]._super._super + x405);
Val x470 = (arg1_0.a[18]._super._super + x408);
Val x471 = (arg1_0.a[19]._super._super + x411);
Val x472 = (arg1_0.a[20]._super._super + x414);
Val x473 = (arg1_0.a[21]._super._super + x417);
Val x474 = (arg1_0.a[22]._super._super + x420);
Val x475 = (arg1_0.a[23]._super._super + x423);
Val x476 = (arg1_0.a[24]._super._super + x426);
Val x477 = (arg1_0.a[25]._super._super + x429);
Val x478 = (arg1_0.a[26]._super._super + x432);
Val x479 = (arg1_0.a[27]._super._super + x435);
Val x480 = (arg1_0.a[28]._super._super + x438);
Val x481 = (arg1_0.a[29]._super._super + x441);
Val x482 = (arg1_0.a[30]._super._super + x444);
Val x483 = (arg1_0.a[31]._super._super + x447);
Val x484 = (arg1_0.a[0]._super._super + x450);
Val x485 = (arg1_0.a[1]._super._super + x453);
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:97)
Val x486 = (arg1_0.e[11]._super._super + arg1_0.e[25]._super._super);
Val x487 = (arg1_0.e[11]._super._super * Val(2));
Val x488 = (x486 - (x487 * arg1_0.e[25]._super._super));
Val x489 = (arg1_0.e[12]._super._super + arg1_0.e[26]._super._super);
Val x490 = (arg1_0.e[12]._super._super * Val(2));
Val x491 = (x489 - (x490 * arg1_0.e[26]._super._super));
Val x492 = (arg1_0.e[13]._super._super + arg1_0.e[27]._super._super);
Val x493 = (arg1_0.e[13]._super._super * Val(2));
Val x494 = (x492 - (x493 * arg1_0.e[27]._super._super));
Val x495 = (arg1_0.e[14]._super._super + arg1_0.e[28]._super._super);
Val x496 = (arg1_0.e[14]._super._super * Val(2));
Val x497 = (x495 - (x496 * arg1_0.e[28]._super._super));
Val x498 = (arg1_0.e[15]._super._super + arg1_0.e[29]._super._super);
Val x499 = (arg1_0.e[15]._super._super * Val(2));
Val x500 = (x498 - (x499 * arg1_0.e[29]._super._super));
Val x501 = (arg1_0.e[16]._super._super + arg1_0.e[30]._super._super);
Val x502 = (arg1_0.e[16]._super._super * Val(2));
Val x503 = (x501 - (x502 * arg1_0.e[30]._super._super));
Val x504 = (arg1_0.e[17]._super._super + arg1_0.e[31]._super._super);
Val x505 = (arg1_0.e[17]._super._super * Val(2));
Val x506 = (x504 - (x505 * arg1_0.e[31]._super._super));
Val x507 = (arg1_0.e[18]._super._super + arg1_0.e[0]._super._super);
Val x508 = (arg1_0.e[18]._super._super * Val(2));
Val x509 = (x507 - (x508 * arg1_0.e[0]._super._super));
Val x510 = (arg1_0.e[19]._super._super + arg1_0.e[1]._super._super);
Val x511 = (arg1_0.e[19]._super._super * Val(2));
Val x512 = (x510 - (x511 * arg1_0.e[1]._super._super));
Val x513 = (arg1_0.e[20]._super._super + arg1_0.e[2]._super._super);
Val x514 = (arg1_0.e[20]._super._super * Val(2));
Val x515 = (x513 - (x514 * arg1_0.e[2]._super._super));
Val x516 = (arg1_0.e[21]._super._super + arg1_0.e[3]._super._super);
Val x517 = (arg1_0.e[21]._super._super * Val(2));
Val x518 = (x516 - (x517 * arg1_0.e[3]._super._super));
Val x519 = (arg1_0.e[22]._super._super + arg1_0.e[4]._super._super);
Val x520 = (arg1_0.e[22]._super._super * Val(2));
Val x521 = (x519 - (x520 * arg1_0.e[4]._super._super));
Val x522 = (arg1_0.e[23]._super._super + arg1_0.e[5]._super._super);
Val x523 = (arg1_0.e[23]._super._super * Val(2));
Val x524 = (x522 - (x523 * arg1_0.e[5]._super._super));
Val x525 = (arg1_0.e[24]._super._super + arg1_0.e[6]._super._super);
Val x526 = (arg1_0.e[24]._super._super * Val(2));
Val x527 = (x525 - (x526 * arg1_0.e[6]._super._super));
Val x528 = (arg1_0.e[25]._super._super + arg1_0.e[7]._super._super);
Val x529 = (arg1_0.e[25]._super._super * Val(2));
Val x530 = (x528 - (x529 * arg1_0.e[7]._super._super));
Val x531 = (arg1_0.e[26]._super._super + arg1_0.e[8]._super._super);
Val x532 = (arg1_0.e[26]._super._super * Val(2));
Val x533 = (x531 - (x532 * arg1_0.e[8]._super._super));
Val x534 = (arg1_0.e[27]._super._super + arg1_0.e[9]._super._super);
Val x535 = (arg1_0.e[27]._super._super * Val(2));
Val x536 = (x534 - (x535 * arg1_0.e[9]._super._super));
Val x537 = (arg1_0.e[28]._super._super + arg1_0.e[10]._super._super);
Val x538 = (arg1_0.e[28]._super._super * Val(2));
Val x539 = (x537 - (x538 * arg1_0.e[10]._super._super));
Val x540 = (arg1_0.e[29]._super._super + arg1_0.e[11]._super._super);
Val x541 = (arg1_0.e[29]._super._super * Val(2));
Val x542 = (x540 - (x541 * arg1_0.e[11]._super._super));
Val x543 = (arg1_0.e[30]._super._super + arg1_0.e[12]._super._super);
Val x544 = (arg1_0.e[30]._super._super * Val(2));
Val x545 = (x543 - (x544 * arg1_0.e[12]._super._super));
Val x546 = (arg1_0.e[31]._super._super + arg1_0.e[13]._super._super);
Val x547 = (arg1_0.e[31]._super._super * Val(2));
Val x548 = (x546 - (x547 * arg1_0.e[13]._super._super));
Val x549 = (arg1_0.e[0]._super._super + arg1_0.e[14]._super._super);
Val x550 = (arg1_0.e[0]._super._super * Val(2));
Val x551 = (x549 - (x550 * arg1_0.e[14]._super._super));
Val x552 = (arg1_0.e[1]._super._super + arg1_0.e[15]._super._super);
Val x553 = (arg1_0.e[1]._super._super * Val(2));
Val x554 = (x552 - (x553 * arg1_0.e[15]._super._super));
Val x555 = (arg1_0.e[2]._super._super + arg1_0.e[16]._super._super);
Val x556 = (arg1_0.e[2]._super._super * Val(2));
Val x557 = (x555 - (x556 * arg1_0.e[16]._super._super));
Val x558 = (arg1_0.e[3]._super._super + arg1_0.e[17]._super._super);
Val x559 = (arg1_0.e[3]._super._super * Val(2));
Val x560 = (x558 - (x559 * arg1_0.e[17]._super._super));
Val x561 = (arg1_0.e[4]._super._super + arg1_0.e[18]._super._super);
Val x562 = (arg1_0.e[4]._super._super * Val(2));
Val x563 = (x561 - (x562 * arg1_0.e[18]._super._super));
Val x564 = (arg1_0.e[5]._super._super + arg1_0.e[19]._super._super);
Val x565 = (arg1_0.e[5]._super._super * Val(2));
Val x566 = (x564 - (x565 * arg1_0.e[19]._super._super));
Val x567 = (arg1_0.e[6]._super._super + arg1_0.e[20]._super._super);
Val x568 = (arg1_0.e[6]._super._super * Val(2));
Val x569 = (x567 - (x568 * arg1_0.e[20]._super._super));
Val x570 = (arg1_0.e[7]._super._super + arg1_0.e[21]._super._super);
Val x571 = (arg1_0.e[7]._super._super * Val(2));
Val x572 = (x570 - (x571 * arg1_0.e[21]._super._super));
Val x573 = (arg1_0.e[8]._super._super + arg1_0.e[22]._super._super);
Val x574 = (arg1_0.e[8]._super._super * Val(2));
Val x575 = (x573 - (x574 * arg1_0.e[22]._super._super));
Val x576 = (arg1_0.e[9]._super._super + arg1_0.e[23]._super._super);
Val x577 = (arg1_0.e[9]._super._super * Val(2));
Val x578 = (x576 - (x577 * arg1_0.e[23]._super._super));
Val x579 = (arg1_0.e[10]._super._super + arg1_0.e[24]._super._super);
Val x580 = (arg1_0.e[10]._super._super * Val(2));
Val x581 = (x579 - (x580 * arg1_0.e[24]._super._super));
Val x582 = (arg1_0.e[6]._super._super + x488);
Val x583 = (arg1_0.e[7]._super._super + x491);
Val x584 = (arg1_0.e[8]._super._super + x494);
Val x585 = (arg1_0.e[9]._super._super + x497);
Val x586 = (arg1_0.e[10]._super._super + x500);
Val x587 = (arg1_0.e[11]._super._super + x503);
Val x588 = (arg1_0.e[12]._super._super + x506);
Val x589 = (arg1_0.e[13]._super._super + x509);
Val x590 = (arg1_0.e[14]._super._super + x512);
Val x591 = (arg1_0.e[15]._super._super + x515);
Val x592 = (arg1_0.e[16]._super._super + x518);
Val x593 = (arg1_0.e[17]._super._super + x521);
Val x594 = (arg1_0.e[18]._super._super + x524);
Val x595 = (arg1_0.e[19]._super._super + x527);
Val x596 = (arg1_0.e[20]._super._super + x530);
Val x597 = (arg1_0.e[21]._super._super + x533);
Val x598 = (arg1_0.e[22]._super._super + x536);
Val x599 = (arg1_0.e[23]._super._super + x539);
Val x600 = (arg1_0.e[24]._super._super + x542);
Val x601 = (arg1_0.e[25]._super._super + x545);
Val x602 = (arg1_0.e[26]._super._super + x548);
Val x603 = (arg1_0.e[27]._super._super + x551);
Val x604 = (arg1_0.e[28]._super._super + x554);
Val x605 = (arg1_0.e[29]._super._super + x557);
Val x606 = (arg1_0.e[30]._super._super + x560);
Val x607 = (arg1_0.e[31]._super._super + x563);
Val x608 = (arg1_0.e[0]._super._super + x566);
Val x609 = (arg1_0.e[1]._super._super + x569);
Val x610 = (arg1_0.e[2]._super._super + x572);
Val x611 = (arg1_0.e[3]._super._super + x575);
Val x612 = (arg1_0.e[4]._super._super + x578);
Val x613 = (arg1_0.e[5]._super._super + x581);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:98)
Val x614 = (x357._super[1]._super * Val(2));
Val x615 = (x357._super[2]._super * Val(4));
Val x616 = (x357._super[3]._super * Val(8));
Val x617 = (x357._super[4]._super * Val(16));
Val x618 = (x357._super[5]._super * Val(32));
Val x619 = (x357._super[6]._super * Val(64));
Val x620 = (x357._super[7]._super * Val(128));
Val x621 = (x357._super[8]._super * Val(256));
Val x622 = (x357._super[9]._super * Val(512));
Val x623 = (x357._super[10]._super * Val(1024));
Val x624 = (x357._super[11]._super * Val(2048));
Val x625 = (x357._super[12]._super * Val(4096));
Val x626 = (x357._super[13]._super * Val(8192));
Val x627 = (x357._super[14]._super * Val(16384));
Val x628 = (x357._super[15]._super * Val(32768));
Val x629 = (x357._super[0]._super + x614);
Val x630 = (((x629 + x615) + x616) + x617);
Val x631 = (((x630 + x618) + x619) + x620);
Val x632 = (((x631 + x621) + x622) + x623);
Val x633 = (((x632 + x624) + x625) + x626);
Val x634 = (x357._super[17]._super * Val(2));
Val x635 = (x357._super[18]._super * Val(4));
Val x636 = (x357._super[19]._super * Val(8));
Val x637 = (x357._super[20]._super * Val(16));
Val x638 = (x357._super[21]._super * Val(32));
Val x639 = (x357._super[22]._super * Val(64));
Val x640 = (x357._super[23]._super * Val(128));
Val x641 = (x357._super[24]._super * Val(256));
Val x642 = (x357._super[25]._super * Val(512));
Val x643 = (x357._super[26]._super * Val(1024));
Val x644 = (x357._super[27]._super * Val(2048));
Val x645 = (x357._super[28]._super * Val(4096));
Val x646 = (x357._super[29]._super * Val(8192));
Val x647 = (x357._super[30]._super * Val(16384));
Val x648 = (x357._super[31]._super * Val(32768));
Val x649 = (x357._super[16]._super + x634);
Val x650 = (((x649 + x635) + x636) + x637);
Val x651 = (((x650 + x638) + x639) + x640);
Val x652 = (((x651 + x641) + x642) + x643);
Val x653 = (((x652 + x644) + x645) + x646);
Val x654 = (arg4.e[1]._super._super * Val(2));
Val x655 = (arg4.e[2]._super._super * Val(4));
Val x656 = (arg4.e[3]._super._super * Val(8));
Val x657 = (arg4.e[4]._super._super * Val(16));
Val x658 = (arg4.e[5]._super._super * Val(32));
Val x659 = (arg4.e[6]._super._super * Val(64));
Val x660 = (arg4.e[7]._super._super * Val(128));
Val x661 = (arg4.e[8]._super._super * Val(256));
Val x662 = (arg4.e[9]._super._super * Val(512));
Val x663 = (arg4.e[10]._super._super * Val(1024));
Val x664 = (arg4.e[11]._super._super * Val(2048));
Val x665 = (arg4.e[12]._super._super * Val(4096));
Val x666 = (arg4.e[13]._super._super * Val(8192));
Val x667 = (arg4.e[14]._super._super * Val(16384));
Val x668 = (arg4.e[15]._super._super * Val(32768));
Val x669 = (arg4.e[0]._super._super + x654);
Val x670 = (((x669 + x655) + x656) + x657);
Val x671 = (((x670 + x658) + x659) + x660);
Val x672 = (((x671 + x661) + x662) + x663);
Val x673 = (((x672 + x664) + x665) + x666);
Val x674 = (arg4.e[17]._super._super * Val(2));
Val x675 = (arg4.e[18]._super._super * Val(4));
Val x676 = (arg4.e[19]._super._super * Val(8));
Val x677 = (arg4.e[20]._super._super * Val(16));
Val x678 = (arg4.e[21]._super._super * Val(32));
Val x679 = (arg4.e[22]._super._super * Val(64));
Val x680 = (arg4.e[23]._super._super * Val(128));
Val x681 = (arg4.e[24]._super._super * Val(256));
Val x682 = (arg4.e[25]._super._super * Val(512));
Val x683 = (arg4.e[26]._super._super * Val(1024));
Val x684 = (arg4.e[27]._super._super * Val(2048));
Val x685 = (arg4.e[28]._super._super * Val(4096));
Val x686 = (arg4.e[29]._super._super * Val(8192));
Val x687 = (arg4.e[30]._super._super * Val(16384));
Val x688 = (arg4.e[31]._super._super * Val(32768));
Val x689 = (arg4.e[16]._super._super + x674);
Val x690 = (((x689 + x675) + x676) + x677);
Val x691 = (((x690 + x678) + x679) + x680);
Val x692 = (((x691 + x681) + x682) + x683);
Val x693 = (((x692 + x684) + x685) + x686);
// ChU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:25)
Val x694 = (arg1_0.e[0]._super._super * arg2_0.e[0]._super._super);
Val x695 = (Val(1) - arg1_0.e[0]._super._super);
Val x696 = (arg1_0.e[1]._super._super * arg2_0.e[1]._super._super);
Val x697 = (Val(1) - arg1_0.e[1]._super._super);
Val x698 = (arg1_0.e[2]._super._super * arg2_0.e[2]._super._super);
Val x699 = (Val(1) - arg1_0.e[2]._super._super);
Val x700 = (arg1_0.e[3]._super._super * arg2_0.e[3]._super._super);
Val x701 = (Val(1) - arg1_0.e[3]._super._super);
Val x702 = (arg1_0.e[4]._super._super * arg2_0.e[4]._super._super);
Val x703 = (Val(1) - arg1_0.e[4]._super._super);
Val x704 = (arg1_0.e[5]._super._super * arg2_0.e[5]._super._super);
Val x705 = (Val(1) - arg1_0.e[5]._super._super);
Val x706 = (arg1_0.e[6]._super._super * arg2_0.e[6]._super._super);
Val x707 = (Val(1) - arg1_0.e[6]._super._super);
Val x708 = (arg1_0.e[7]._super._super * arg2_0.e[7]._super._super);
Val x709 = (Val(1) - arg1_0.e[7]._super._super);
Val x710 = (arg1_0.e[8]._super._super * arg2_0.e[8]._super._super);
Val x711 = (Val(1) - arg1_0.e[8]._super._super);
Val x712 = (arg1_0.e[9]._super._super * arg2_0.e[9]._super._super);
Val x713 = (Val(1) - arg1_0.e[9]._super._super);
Val x714 = (arg1_0.e[10]._super._super * arg2_0.e[10]._super._super);
Val x715 = (Val(1) - arg1_0.e[10]._super._super);
Val x716 = (arg1_0.e[11]._super._super * arg2_0.e[11]._super._super);
Val x717 = (Val(1) - arg1_0.e[11]._super._super);
Val x718 = (arg1_0.e[12]._super._super * arg2_0.e[12]._super._super);
Val x719 = (Val(1) - arg1_0.e[12]._super._super);
Val x720 = (arg1_0.e[13]._super._super * arg2_0.e[13]._super._super);
Val x721 = (Val(1) - arg1_0.e[13]._super._super);
Val x722 = (arg1_0.e[14]._super._super * arg2_0.e[14]._super._super);
Val x723 = (Val(1) - arg1_0.e[14]._super._super);
Val x724 = (arg1_0.e[15]._super._super * arg2_0.e[15]._super._super);
Val x725 = (Val(1) - arg1_0.e[15]._super._super);
Val x726 = (arg1_0.e[16]._super._super * arg2_0.e[16]._super._super);
Val x727 = (Val(1) - arg1_0.e[16]._super._super);
Val x728 = (arg1_0.e[17]._super._super * arg2_0.e[17]._super._super);
Val x729 = (Val(1) - arg1_0.e[17]._super._super);
Val x730 = (arg1_0.e[18]._super._super * arg2_0.e[18]._super._super);
Val x731 = (Val(1) - arg1_0.e[18]._super._super);
Val x732 = (arg1_0.e[19]._super._super * arg2_0.e[19]._super._super);
Val x733 = (Val(1) - arg1_0.e[19]._super._super);
Val x734 = (arg1_0.e[20]._super._super * arg2_0.e[20]._super._super);
Val x735 = (Val(1) - arg1_0.e[20]._super._super);
Val x736 = (arg1_0.e[21]._super._super * arg2_0.e[21]._super._super);
Val x737 = (Val(1) - arg1_0.e[21]._super._super);
Val x738 = (arg1_0.e[22]._super._super * arg2_0.e[22]._super._super);
Val x739 = (Val(1) - arg1_0.e[22]._super._super);
Val x740 = (arg1_0.e[23]._super._super * arg2_0.e[23]._super._super);
Val x741 = (Val(1) - arg1_0.e[23]._super._super);
Val x742 = (arg1_0.e[24]._super._super * arg2_0.e[24]._super._super);
Val x743 = (Val(1) - arg1_0.e[24]._super._super);
Val x744 = (arg1_0.e[25]._super._super * arg2_0.e[25]._super._super);
Val x745 = (Val(1) - arg1_0.e[25]._super._super);
Val x746 = (arg1_0.e[26]._super._super * arg2_0.e[26]._super._super);
Val x747 = (Val(1) - arg1_0.e[26]._super._super);
Val x748 = (arg1_0.e[27]._super._super * arg2_0.e[27]._super._super);
Val x749 = (Val(1) - arg1_0.e[27]._super._super);
Val x750 = (arg1_0.e[28]._super._super * arg2_0.e[28]._super._super);
Val x751 = (Val(1) - arg1_0.e[28]._super._super);
Val x752 = (arg1_0.e[29]._super._super * arg2_0.e[29]._super._super);
Val x753 = (Val(1) - arg1_0.e[29]._super._super);
Val x754 = (arg1_0.e[30]._super._super * arg2_0.e[30]._super._super);
Val x755 = (Val(1) - arg1_0.e[30]._super._super);
Val x756 = (arg1_0.e[31]._super._super * arg2_0.e[31]._super._super);
Val x757 = (Val(1) - arg1_0.e[31]._super._super);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x758 = ((x694 + (x695 * arg3.e[0]._super._super)) + ((x696 + (x697 * arg3.e[1]._super._super)) * Val(2)));
Val x759 = ((x758 + ((x698 + (x699 * arg3.e[2]._super._super)) * Val(4))) + ((x700 + (x701 * arg3.e[3]._super._super)) * Val(8)));
Val x760 = ((x759 + ((x702 + (x703 * arg3.e[4]._super._super)) * Val(16))) + ((x704 + (x705 * arg3.e[5]._super._super)) * Val(32)));
Val x761 = ((x760 + ((x706 + (x707 * arg3.e[6]._super._super)) * Val(64))) + ((x708 + (x709 * arg3.e[7]._super._super)) * Val(128)));
Val x762 = ((x761 + ((x710 + (x711 * arg3.e[8]._super._super)) * Val(256))) + ((x712 + (x713 * arg3.e[9]._super._super)) * Val(512)));
Val x763 = ((x762 + ((x714 + (x715 * arg3.e[10]._super._super)) * Val(1024))) + ((x716 + (x717 * arg3.e[11]._super._super)) * Val(2048)));
Val x764 = ((x763 + ((x718 + (x719 * arg3.e[12]._super._super)) * Val(4096))) + ((x720 + (x721 * arg3.e[13]._super._super)) * Val(8192)));
Val x765 = ((x764 + ((x722 + (x723 * arg3.e[14]._super._super)) * Val(16384))) + ((x724 + (x725 * arg3.e[15]._super._super)) * Val(32768)));
Val x766 = ((x726 + (x727 * arg3.e[16]._super._super)) + ((x728 + (x729 * arg3.e[17]._super._super)) * Val(2)));
Val x767 = ((x766 + ((x730 + (x731 * arg3.e[18]._super._super)) * Val(4))) + ((x732 + (x733 * arg3.e[19]._super._super)) * Val(8)));
Val x768 = ((x767 + ((x734 + (x735 * arg3.e[20]._super._super)) * Val(16))) + ((x736 + (x737 * arg3.e[21]._super._super)) * Val(32)));
Val x769 = ((x768 + ((x738 + (x739 * arg3.e[22]._super._super)) * Val(64))) + ((x740 + (x741 * arg3.e[23]._super._super)) * Val(128)));
Val x770 = ((x769 + ((x742 + (x743 * arg3.e[24]._super._super)) * Val(256))) + ((x744 + (x745 * arg3.e[25]._super._super)) * Val(512)));
Val x771 = ((x770 + ((x746 + (x747 * arg3.e[26]._super._super)) * Val(1024))) + ((x748 + (x749 * arg3.e[27]._super._super)) * Val(2048)));
Val x772 = ((x771 + ((x750 + (x751 * arg3.e[28]._super._super)) * Val(4096))) + ((x752 + (x753 * arg3.e[29]._super._super)) * Val(8192)));
Val x773 = ((x772 + ((x754 + (x755 * arg3.e[30]._super._super)) * Val(16384))) + ((x756 + (x757 * arg3.e[31]._super._super)) * Val(32768)));
Val x774 = ((x582 - (x568 * x488)) + ((x583 - (x571 * x491)) * Val(2)));
Val x775 = ((x774 + ((x584 - (x574 * x494)) * Val(4))) + ((x585 - (x577 * x497)) * Val(8)));
Val x776 = ((x775 + ((x586 - (x580 * x500)) * Val(16))) + ((x587 - (x487 * x503)) * Val(32)));
Val x777 = ((x776 + ((x588 - (x490 * x506)) * Val(64))) + ((x589 - (x493 * x509)) * Val(128)));
Val x778 = ((x777 + ((x590 - (x496 * x512)) * Val(256))) + ((x591 - (x499 * x515)) * Val(512)));
Val x779 = ((x778 + ((x592 - (x502 * x518)) * Val(1024))) + ((x593 - (x505 * x521)) * Val(2048)));
Val x780 = ((x779 + ((x594 - (x508 * x524)) * Val(4096))) + ((x595 - (x511 * x527)) * Val(8192)));
Val x781 = ((x780 + ((x596 - (x514 * x530)) * Val(16384))) + ((x597 - (x517 * x533)) * Val(32768)));
Val x782 = ((x598 - (x520 * x536)) + ((x599 - (x523 * x539)) * Val(2)));
Val x783 = ((x782 + ((x600 - (x526 * x542)) * Val(4))) + ((x601 - (x529 * x545)) * Val(8)));
Val x784 = ((x783 + ((x602 - (x532 * x548)) * Val(16))) + ((x603 - (x535 * x551)) * Val(32)));
Val x785 = ((x784 + ((x604 - (x538 * x554)) * Val(64))) + ((x605 - (x541 * x557)) * Val(128)));
Val x786 = ((x785 + ((x606 - (x544 * x560)) * Val(256))) + ((x607 - (x547 * x563)) * Val(512)));
Val x787 = ((x786 + ((x608 - (x550 * x566)) * Val(1024))) + ((x609 - (x553 * x569)) * Val(2048)));
Val x788 = ((x787 + ((x610 - (x556 * x572)) * Val(4096))) + ((x611 - (x559 * x575)) * Val(8192)));
Val x789 = ((x788 + ((x612 - (x562 * x578)) * Val(16384))) + ((x613 - (x565 * x581)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x790 = (((x673 + x667) + x668) + (x765 + x781));
Val x791 = (((x693 + x687) + x688) + (x773 + x789));
Val x792 = (x12_0._super.low + x790);
Val x793 = (x12_0._super.high + x791);
Val x794 = (((x633 + x627) + x628) + x792);
Val x795 = (((x653 + x647) + x648) + x793);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:99)
Val x796 = (arg1_0.a[0]._super._super * arg2_0.a[0]._super._super);
Val x797 = (Val(1) - arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x798 = (Val(1) - arg2_0.a[0]._super._super);
Val x799 = (arg1_0.a[0]._super._super * x798);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x800 = (Val(1) - arg1_0.a[0]._super._super);
Val x801 = ((x800 * arg2_0.a[0]._super._super) * arg3.a[0]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x802 = (((x796 * x797) + (x799 * arg3.a[0]._super._super)) + x801);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x803 = (arg1_0.a[1]._super._super * arg2_0.a[1]._super._super);
Val x804 = (Val(1) - arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x805 = (Val(1) - arg2_0.a[1]._super._super);
Val x806 = (arg1_0.a[1]._super._super * x805);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x807 = (Val(1) - arg1_0.a[1]._super._super);
Val x808 = ((x807 * arg2_0.a[1]._super._super) * arg3.a[1]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x809 = (((x803 * x804) + (x806 * arg3.a[1]._super._super)) + x808);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x810 = (arg1_0.a[2]._super._super * arg2_0.a[2]._super._super);
Val x811 = (Val(1) - arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x812 = (Val(1) - arg2_0.a[2]._super._super);
Val x813 = (arg1_0.a[2]._super._super * x812);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x814 = (Val(1) - arg1_0.a[2]._super._super);
Val x815 = ((x814 * arg2_0.a[2]._super._super) * arg3.a[2]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x816 = (((x810 * x811) + (x813 * arg3.a[2]._super._super)) + x815);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x817 = (arg1_0.a[3]._super._super * arg2_0.a[3]._super._super);
Val x818 = (Val(1) - arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x819 = (Val(1) - arg2_0.a[3]._super._super);
Val x820 = (arg1_0.a[3]._super._super * x819);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x821 = (Val(1) - arg1_0.a[3]._super._super);
Val x822 = ((x821 * arg2_0.a[3]._super._super) * arg3.a[3]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x823 = (((x817 * x818) + (x820 * arg3.a[3]._super._super)) + x822);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x824 = (arg1_0.a[4]._super._super * arg2_0.a[4]._super._super);
Val x825 = (Val(1) - arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x826 = (Val(1) - arg2_0.a[4]._super._super);
Val x827 = (arg1_0.a[4]._super._super * x826);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x828 = (Val(1) - arg1_0.a[4]._super._super);
Val x829 = ((x828 * arg2_0.a[4]._super._super) * arg3.a[4]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x830 = (((x824 * x825) + (x827 * arg3.a[4]._super._super)) + x829);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x831 = (arg1_0.a[5]._super._super * arg2_0.a[5]._super._super);
Val x832 = (Val(1) - arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x833 = (Val(1) - arg2_0.a[5]._super._super);
Val x834 = (arg1_0.a[5]._super._super * x833);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x835 = (Val(1) - arg1_0.a[5]._super._super);
Val x836 = ((x835 * arg2_0.a[5]._super._super) * arg3.a[5]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x837 = (((x831 * x832) + (x834 * arg3.a[5]._super._super)) + x836);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x838 = (arg1_0.a[6]._super._super * arg2_0.a[6]._super._super);
Val x839 = (Val(1) - arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x840 = (Val(1) - arg2_0.a[6]._super._super);
Val x841 = (arg1_0.a[6]._super._super * x840);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x842 = (Val(1) - arg1_0.a[6]._super._super);
Val x843 = ((x842 * arg2_0.a[6]._super._super) * arg3.a[6]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x844 = (((x838 * x839) + (x841 * arg3.a[6]._super._super)) + x843);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x845 = (arg1_0.a[7]._super._super * arg2_0.a[7]._super._super);
Val x846 = (Val(1) - arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x847 = (Val(1) - arg2_0.a[7]._super._super);
Val x848 = (arg1_0.a[7]._super._super * x847);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x849 = (Val(1) - arg1_0.a[7]._super._super);
Val x850 = ((x849 * arg2_0.a[7]._super._super) * arg3.a[7]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x851 = (((x845 * x846) + (x848 * arg3.a[7]._super._super)) + x850);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x852 = (arg1_0.a[8]._super._super * arg2_0.a[8]._super._super);
Val x853 = (Val(1) - arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x854 = (Val(1) - arg2_0.a[8]._super._super);
Val x855 = (arg1_0.a[8]._super._super * x854);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x856 = (Val(1) - arg1_0.a[8]._super._super);
Val x857 = ((x856 * arg2_0.a[8]._super._super) * arg3.a[8]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x858 = (((x852 * x853) + (x855 * arg3.a[8]._super._super)) + x857);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x859 = (arg1_0.a[9]._super._super * arg2_0.a[9]._super._super);
Val x860 = (Val(1) - arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x861 = (Val(1) - arg2_0.a[9]._super._super);
Val x862 = (arg1_0.a[9]._super._super * x861);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x863 = (Val(1) - arg1_0.a[9]._super._super);
Val x864 = ((x863 * arg2_0.a[9]._super._super) * arg3.a[9]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x865 = (((x859 * x860) + (x862 * arg3.a[9]._super._super)) + x864);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x866 = (arg1_0.a[10]._super._super * arg2_0.a[10]._super._super);
Val x867 = (Val(1) - arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x868 = (Val(1) - arg2_0.a[10]._super._super);
Val x869 = (arg1_0.a[10]._super._super * x868);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x870 = (Val(1) - arg1_0.a[10]._super._super);
Val x871 = ((x870 * arg2_0.a[10]._super._super) * arg3.a[10]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x872 = (((x866 * x867) + (x869 * arg3.a[10]._super._super)) + x871);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x873 = (arg1_0.a[11]._super._super * arg2_0.a[11]._super._super);
Val x874 = (Val(1) - arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x875 = (Val(1) - arg2_0.a[11]._super._super);
Val x876 = (arg1_0.a[11]._super._super * x875);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x877 = (Val(1) - arg1_0.a[11]._super._super);
Val x878 = ((x877 * arg2_0.a[11]._super._super) * arg3.a[11]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x879 = (((x873 * x874) + (x876 * arg3.a[11]._super._super)) + x878);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x880 = (arg1_0.a[12]._super._super * arg2_0.a[12]._super._super);
Val x881 = (Val(1) - arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x882 = (Val(1) - arg2_0.a[12]._super._super);
Val x883 = (arg1_0.a[12]._super._super * x882);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x884 = (Val(1) - arg1_0.a[12]._super._super);
Val x885 = ((x884 * arg2_0.a[12]._super._super) * arg3.a[12]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x886 = (((x880 * x881) + (x883 * arg3.a[12]._super._super)) + x885);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x887 = (arg1_0.a[13]._super._super * arg2_0.a[13]._super._super);
Val x888 = (Val(1) - arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x889 = (Val(1) - arg2_0.a[13]._super._super);
Val x890 = (arg1_0.a[13]._super._super * x889);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x891 = (Val(1) - arg1_0.a[13]._super._super);
Val x892 = ((x891 * arg2_0.a[13]._super._super) * arg3.a[13]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x893 = (((x887 * x888) + (x890 * arg3.a[13]._super._super)) + x892);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x894 = (arg1_0.a[14]._super._super * arg2_0.a[14]._super._super);
Val x895 = (Val(1) - arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x896 = (Val(1) - arg2_0.a[14]._super._super);
Val x897 = (arg1_0.a[14]._super._super * x896);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x898 = (Val(1) - arg1_0.a[14]._super._super);
Val x899 = ((x898 * arg2_0.a[14]._super._super) * arg3.a[14]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x900 = (((x894 * x895) + (x897 * arg3.a[14]._super._super)) + x899);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x901 = (arg1_0.a[15]._super._super * arg2_0.a[15]._super._super);
Val x902 = (Val(1) - arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x903 = (Val(1) - arg2_0.a[15]._super._super);
Val x904 = (arg1_0.a[15]._super._super * x903);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x905 = (Val(1) - arg1_0.a[15]._super._super);
Val x906 = ((x905 * arg2_0.a[15]._super._super) * arg3.a[15]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x907 = (((x901 * x902) + (x904 * arg3.a[15]._super._super)) + x906);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x908 = (arg1_0.a[16]._super._super * arg2_0.a[16]._super._super);
Val x909 = (Val(1) - arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x910 = (Val(1) - arg2_0.a[16]._super._super);
Val x911 = (arg1_0.a[16]._super._super * x910);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x912 = (Val(1) - arg1_0.a[16]._super._super);
Val x913 = ((x912 * arg2_0.a[16]._super._super) * arg3.a[16]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x914 = (((x908 * x909) + (x911 * arg3.a[16]._super._super)) + x913);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x915 = (arg1_0.a[17]._super._super * arg2_0.a[17]._super._super);
Val x916 = (Val(1) - arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x917 = (Val(1) - arg2_0.a[17]._super._super);
Val x918 = (arg1_0.a[17]._super._super * x917);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x919 = (Val(1) - arg1_0.a[17]._super._super);
Val x920 = ((x919 * arg2_0.a[17]._super._super) * arg3.a[17]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x921 = (((x915 * x916) + (x918 * arg3.a[17]._super._super)) + x920);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x922 = (arg1_0.a[18]._super._super * arg2_0.a[18]._super._super);
Val x923 = (Val(1) - arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x924 = (Val(1) - arg2_0.a[18]._super._super);
Val x925 = (arg1_0.a[18]._super._super * x924);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x926 = (Val(1) - arg1_0.a[18]._super._super);
Val x927 = ((x926 * arg2_0.a[18]._super._super) * arg3.a[18]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x928 = (((x922 * x923) + (x925 * arg3.a[18]._super._super)) + x927);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x929 = (arg1_0.a[19]._super._super * arg2_0.a[19]._super._super);
Val x930 = (Val(1) - arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x931 = (Val(1) - arg2_0.a[19]._super._super);
Val x932 = (arg1_0.a[19]._super._super * x931);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x933 = (Val(1) - arg1_0.a[19]._super._super);
Val x934 = ((x933 * arg2_0.a[19]._super._super) * arg3.a[19]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x935 = (((x929 * x930) + (x932 * arg3.a[19]._super._super)) + x934);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x936 = (arg1_0.a[20]._super._super * arg2_0.a[20]._super._super);
Val x937 = (Val(1) - arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x938 = (Val(1) - arg2_0.a[20]._super._super);
Val x939 = (arg1_0.a[20]._super._super * x938);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x940 = (Val(1) - arg1_0.a[20]._super._super);
Val x941 = ((x940 * arg2_0.a[20]._super._super) * arg3.a[20]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x942 = (((x936 * x937) + (x939 * arg3.a[20]._super._super)) + x941);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x943 = (arg1_0.a[21]._super._super * arg2_0.a[21]._super._super);
Val x944 = (Val(1) - arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x945 = (Val(1) - arg2_0.a[21]._super._super);
Val x946 = (arg1_0.a[21]._super._super * x945);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x947 = (Val(1) - arg1_0.a[21]._super._super);
Val x948 = ((x947 * arg2_0.a[21]._super._super) * arg3.a[21]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x949 = (((x943 * x944) + (x946 * arg3.a[21]._super._super)) + x948);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x950 = (arg1_0.a[22]._super._super * arg2_0.a[22]._super._super);
Val x951 = (Val(1) - arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x952 = (Val(1) - arg2_0.a[22]._super._super);
Val x953 = (arg1_0.a[22]._super._super * x952);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x954 = (Val(1) - arg1_0.a[22]._super._super);
Val x955 = ((x954 * arg2_0.a[22]._super._super) * arg3.a[22]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x956 = (((x950 * x951) + (x953 * arg3.a[22]._super._super)) + x955);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x957 = (arg1_0.a[23]._super._super * arg2_0.a[23]._super._super);
Val x958 = (Val(1) - arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x959 = (Val(1) - arg2_0.a[23]._super._super);
Val x960 = (arg1_0.a[23]._super._super * x959);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x961 = (Val(1) - arg1_0.a[23]._super._super);
Val x962 = ((x961 * arg2_0.a[23]._super._super) * arg3.a[23]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x963 = (((x957 * x958) + (x960 * arg3.a[23]._super._super)) + x962);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x964 = (arg1_0.a[24]._super._super * arg2_0.a[24]._super._super);
Val x965 = (Val(1) - arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x966 = (Val(1) - arg2_0.a[24]._super._super);
Val x967 = (arg1_0.a[24]._super._super * x966);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x968 = (Val(1) - arg1_0.a[24]._super._super);
Val x969 = ((x968 * arg2_0.a[24]._super._super) * arg3.a[24]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x970 = (((x964 * x965) + (x967 * arg3.a[24]._super._super)) + x969);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x971 = (arg1_0.a[25]._super._super * arg2_0.a[25]._super._super);
Val x972 = (Val(1) - arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x973 = (Val(1) - arg2_0.a[25]._super._super);
Val x974 = (arg1_0.a[25]._super._super * x973);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x975 = (Val(1) - arg1_0.a[25]._super._super);
Val x976 = ((x975 * arg2_0.a[25]._super._super) * arg3.a[25]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x977 = (((x971 * x972) + (x974 * arg3.a[25]._super._super)) + x976);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x978 = (arg1_0.a[26]._super._super * arg2_0.a[26]._super._super);
Val x979 = (Val(1) - arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x980 = (Val(1) - arg2_0.a[26]._super._super);
Val x981 = (arg1_0.a[26]._super._super * x980);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x982 = (Val(1) - arg1_0.a[26]._super._super);
Val x983 = ((x982 * arg2_0.a[26]._super._super) * arg3.a[26]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x984 = (((x978 * x979) + (x981 * arg3.a[26]._super._super)) + x983);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x985 = (arg1_0.a[27]._super._super * arg2_0.a[27]._super._super);
Val x986 = (Val(1) - arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x987 = (Val(1) - arg2_0.a[27]._super._super);
Val x988 = (arg1_0.a[27]._super._super * x987);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x989 = (Val(1) - arg1_0.a[27]._super._super);
Val x990 = ((x989 * arg2_0.a[27]._super._super) * arg3.a[27]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x991 = (((x985 * x986) + (x988 * arg3.a[27]._super._super)) + x990);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x992 = (arg1_0.a[28]._super._super * arg2_0.a[28]._super._super);
Val x993 = (Val(1) - arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x994 = (Val(1) - arg2_0.a[28]._super._super);
Val x995 = (arg1_0.a[28]._super._super * x994);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x996 = (Val(1) - arg1_0.a[28]._super._super);
Val x997 = ((x996 * arg2_0.a[28]._super._super) * arg3.a[28]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x998 = (((x992 * x993) + (x995 * arg3.a[28]._super._super)) + x997);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x999 = (arg1_0.a[29]._super._super * arg2_0.a[29]._super._super);
Val x1000 = (Val(1) - arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1001 = (Val(1) - arg2_0.a[29]._super._super);
Val x1002 = (arg1_0.a[29]._super._super * x1001);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1003 = (Val(1) - arg1_0.a[29]._super._super);
Val x1004 = ((x1003 * arg2_0.a[29]._super._super) * arg3.a[29]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1005 = (((x999 * x1000) + (x1002 * arg3.a[29]._super._super)) + x1004);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x1006 = (arg1_0.a[30]._super._super * arg2_0.a[30]._super._super);
Val x1007 = (Val(1) - arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1008 = (Val(1) - arg2_0.a[30]._super._super);
Val x1009 = (arg1_0.a[30]._super._super * x1008);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1010 = (Val(1) - arg1_0.a[30]._super._super);
Val x1011 = ((x1010 * arg2_0.a[30]._super._super) * arg3.a[30]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1012 = (((x1006 * x1007) + (x1009 * arg3.a[30]._super._super)) + x1011);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:16)
Val x1013 = (arg1_0.a[31]._super._super * arg2_0.a[31]._super._super);
Val x1014 = (Val(1) - arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1015 = (Val(1) - arg2_0.a[31]._super._super);
Val x1016 = (arg1_0.a[31]._super._super * x1015);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:18)
Val x1017 = (Val(1) - arg1_0.a[31]._super._super);
Val x1018 = ((x1017 * arg2_0.a[31]._super._super) * arg3.a[31]._super._super);
// MajU32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:17)
Val x1019 = (((x1013 * x1014) + (x1016 * arg3.a[31]._super._super)) + x1018);
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
Val x1020 = ((x802 + (x796 * arg3.a[0]._super._super)) + ((x809 + (x803 * arg3.a[1]._super._super)) * Val(2)));
Val x1021 = ((x1020 + ((x816 + (x810 * arg3.a[2]._super._super)) * Val(4))) + ((x823 + (x817 * arg3.a[3]._super._super)) * Val(8)));
Val x1022 = ((x1021 + ((x830 + (x824 * arg3.a[4]._super._super)) * Val(16))) + ((x837 + (x831 * arg3.a[5]._super._super)) * Val(32)));
Val x1023 = ((x1022 + ((x844 + (x838 * arg3.a[6]._super._super)) * Val(64))) + ((x851 + (x845 * arg3.a[7]._super._super)) * Val(128)));
Val x1024 = ((x1023 + ((x858 + (x852 * arg3.a[8]._super._super)) * Val(256))) + ((x865 + (x859 * arg3.a[9]._super._super)) * Val(512)));
Val x1025 = ((x1024 + ((x872 + (x866 * arg3.a[10]._super._super)) * Val(1024))) + ((x879 + (x873 * arg3.a[11]._super._super)) * Val(2048)));
Val x1026 = ((x1025 + ((x886 + (x880 * arg3.a[12]._super._super)) * Val(4096))) + ((x893 + (x887 * arg3.a[13]._super._super)) * Val(8192)));
Val x1027 = ((x1026 + ((x900 + (x894 * arg3.a[14]._super._super)) * Val(16384))) + ((x907 + (x901 * arg3.a[15]._super._super)) * Val(32768)));
Val x1028 = ((x914 + (x908 * arg3.a[16]._super._super)) + ((x921 + (x915 * arg3.a[17]._super._super)) * Val(2)));
Val x1029 = ((x1028 + ((x928 + (x922 * arg3.a[18]._super._super)) * Val(4))) + ((x935 + (x929 * arg3.a[19]._super._super)) * Val(8)));
Val x1030 = ((x1029 + ((x942 + (x936 * arg3.a[20]._super._super)) * Val(16))) + ((x949 + (x943 * arg3.a[21]._super._super)) * Val(32)));
Val x1031 = ((x1030 + ((x956 + (x950 * arg3.a[22]._super._super)) * Val(64))) + ((x963 + (x957 * arg3.a[23]._super._super)) * Val(128)));
Val x1032 = ((x1031 + ((x970 + (x964 * arg3.a[24]._super._super)) * Val(256))) + ((x977 + (x971 * arg3.a[25]._super._super)) * Val(512)));
Val x1033 = ((x1032 + ((x984 + (x978 * arg3.a[26]._super._super)) * Val(1024))) + ((x991 + (x985 * arg3.a[27]._super._super)) * Val(2048)));
Val x1034 = ((x1033 + ((x998 + (x992 * arg3.a[28]._super._super)) * Val(4096))) + ((x1005 + (x999 * arg3.a[29]._super._super)) * Val(8192)));
Val x1035 = ((x1034 + ((x1012 + (x1006 * arg3.a[30]._super._super)) * Val(16384))) + ((x1019 + (x1013 * arg3.a[31]._super._super)) * Val(32768)));
Val x1036 = ((x454 - (x422 * x360)) + ((x455 - (x425 * x363)) * Val(2)));
Val x1037 = ((x1036 + ((x456 - (x428 * x366)) * Val(4))) + ((x457 - (x431 * x369)) * Val(8)));
Val x1038 = ((x1037 + ((x458 - (x434 * x372)) * Val(16))) + ((x459 - (x437 * x375)) * Val(32)));
Val x1039 = ((x1038 + ((x460 - (x440 * x378)) * Val(64))) + ((x461 - (x443 * x381)) * Val(128)));
Val x1040 = ((x1039 + ((x462 - (x446 * x384)) * Val(256))) + ((x463 - (x449 * x387)) * Val(512)));
Val x1041 = ((x1040 + ((x464 - (x452 * x390)) * Val(1024))) + ((x465 - (x359 * x393)) * Val(2048)));
Val x1042 = ((x1041 + ((x466 - (x362 * x396)) * Val(4096))) + ((x467 - (x365 * x399)) * Val(8192)));
Val x1043 = ((x1042 + ((x468 - (x368 * x402)) * Val(16384))) + ((x469 - (x371 * x405)) * Val(32768)));
Val x1044 = ((x470 - (x374 * x408)) + ((x471 - (x377 * x411)) * Val(2)));
Val x1045 = ((x1044 + ((x472 - (x380 * x414)) * Val(4))) + ((x473 - (x383 * x417)) * Val(8)));
Val x1046 = ((x1045 + ((x474 - (x386 * x420)) * Val(16))) + ((x475 - (x389 * x423)) * Val(32)));
Val x1047 = ((x1046 + ((x476 - (x392 * x426)) * Val(64))) + ((x477 - (x395 * x429)) * Val(128)));
Val x1048 = ((x1047 + ((x478 - (x398 * x432)) * Val(256))) + ((x479 - (x401 * x435)) * Val(512)));
Val x1049 = ((x1048 + ((x480 - (x404 * x438)) * Val(1024))) + ((x481 - (x407 * x441)) * Val(2048)));
Val x1050 = ((x1049 + ((x482 - (x410 * x444)) * Val(4096))) + ((x483 - (x413 * x447)) * Val(8192)));
Val x1051 = ((x1050 + ((x484 - (x416 * x450)) * Val(16384))) + ((x485 - (x419 * x453)) * Val(32768)));
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x1052 = (x794 + (x1027 + x1043));
Val x1053 = (x795 + (x1035 + x1051));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ComputeAE(zirgen/circuit/rv32im/v2/dsl/sha2.zir:100)
Val x1054 = (arg4.a[1]._super._super * Val(2));
Val x1055 = (arg4.a[2]._super._super * Val(4));
Val x1056 = (arg4.a[3]._super._super * Val(8));
Val x1057 = (arg4.a[4]._super._super * Val(16));
Val x1058 = (arg4.a[5]._super._super * Val(32));
Val x1059 = (arg4.a[6]._super._super * Val(64));
Val x1060 = (arg4.a[7]._super._super * Val(128));
Val x1061 = (arg4.a[8]._super._super * Val(256));
Val x1062 = (arg4.a[9]._super._super * Val(512));
Val x1063 = (arg4.a[10]._super._super * Val(1024));
Val x1064 = (arg4.a[11]._super._super * Val(2048));
Val x1065 = (arg4.a[12]._super._super * Val(4096));
Val x1066 = (arg4.a[13]._super._super * Val(8192));
Val x1067 = (arg4.a[14]._super._super * Val(16384));
Val x1068 = (arg4.a[15]._super._super * Val(32768));
Val x1069 = (arg4.a[0]._super._super + x1054);
Val x1070 = (((x1069 + x1055) + x1056) + x1057);
Val x1071 = (((x1070 + x1058) + x1059) + x1060);
Val x1072 = (((x1071 + x1061) + x1062) + x1063);
Val x1073 = (((x1072 + x1064) + x1065) + x1066);
Val x1074 = (arg4.a[17]._super._super * Val(2));
Val x1075 = (arg4.a[18]._super._super * Val(4));
Val x1076 = (arg4.a[19]._super._super * Val(8));
Val x1077 = (arg4.a[20]._super._super * Val(16));
Val x1078 = (arg4.a[21]._super._super * Val(32));
Val x1079 = (arg4.a[22]._super._super * Val(64));
Val x1080 = (arg4.a[23]._super._super * Val(128));
Val x1081 = (arg4.a[24]._super._super * Val(256));
Val x1082 = (arg4.a[25]._super._super * Val(512));
Val x1083 = (arg4.a[26]._super._super * Val(1024));
Val x1084 = (arg4.a[27]._super._super * Val(2048));
Val x1085 = (arg4.a[28]._super._super * Val(4096));
Val x1086 = (arg4.a[29]._super._super * Val(8192));
Val x1087 = (arg4.a[30]._super._super * Val(16384));
Val x1088 = (arg4.a[31]._super._super * Val(32768));
Val x1089 = (arg4.a[16]._super._super + x1074);
Val x1090 = (((x1089 + x1075) + x1076) + x1077);
Val x1091 = (((x1090 + x1078) + x1079) + x1080);
Val x1092 = (((x1091 + x1081) + x1082) + x1083);
Val x1093 = (((x1092 + x1084) + x1085) + x1086);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x1094 = (x794 + ((x1073 + x1067) + x1068));
Val x1095 = (x795 + ((x1093 + x1087) + x1088));
// Log(<preamble>:22)
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:168)
INVOKE_EXTERN(ctx,log, "a = ", std::initializer_list<Val>{x1052, x1053});
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:169)
INVOKE_EXTERN(ctx,log, "e = ", std::initializer_list<Val>{x1094, x1095});
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:170)
UnpackReg_32__16_Struct x1096 = exec_CarryAndExpand(ctx,Val2Array{x1052, x1053}, LAYOUT_LOOKUP(layout8, a));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:171)
UnpackReg_32__16_Struct x1097 = exec_CarryAndExpand(ctx,Val2Array{x1094, x1095}, LAYOUT_LOOKUP(layout8, e));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:181)
Val x1098 = (Val(1) - x10_0._super);
Val x1099 = (arg1_0.round._super + Val(1));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:182)
Val x1100 = ((x10_0._super * Val(36)) + (x1098 * Val(35)));
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:170)
Val32Array x1101 = Val32Array{x1096._super[0]._super, x1096._super[1]._super, x1096._super[2]._super, x1096._super[3]._super, x1096._super[4]._super, x1096._super[5]._super, x1096._super[6]._super, x1096._super[7]._super, x1096._super[8]._super, x1096._super[9]._super, x1096._super[10]._super, x1096._super[11]._super, x1096._super[12]._super, x1096._super[13]._super, x1096._super[14]._super, x1096._super[15]._super, x1096._super[16]._super, x1096._super[17]._super, x1096._super[18]._super, x1096._super[19]._super, x1096._super[20]._super, x1096._super[21]._super, x1096._super[22]._super, x1096._super[23]._super, x1096._super[24]._super, x1096._super[25]._super, x1096._super[26]._super, x1096._super[27]._super, x1096._super[28]._super, x1096._super[29]._super, x1096._super[30]._super, x1096._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:171)
Val32Array x1102 = Val32Array{x1097._super[0]._super, x1097._super[1]._super, x1097._super[2]._super, x1097._super[3]._super, x1097._super[4]._super, x1097._super[5]._super, x1097._super[6]._super, x1097._super[7]._super, x1097._super[8]._super, x1097._super[9]._super, x1097._super[10]._super, x1097._super[11]._super, x1097._super[12]._super, x1097._super[13]._super, x1097._super[14]._super, x1097._super[15]._super, x1097._super[16]._super, x1097._super[17]._super, x1097._super[18]._super, x1097._super[19]._super, x1097._super[20]._super, x1097._super[21]._super, x1097._super[22]._super, x1097._super[23]._super, x1097._super[24]._super, x1097._super[25]._super, x1097._super[26]._super, x1097._super[27]._super, x1097._super[28]._super, x1097._super[29]._super, x1097._super[30]._super, x1097._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:166)
Val32Array x1103 = Val32Array{x357._super[0]._super, x357._super[1]._super, x357._super[2]._super, x357._super[3]._super, x357._super[4]._super, x357._super[5]._super, x357._super[6]._super, x357._super[7]._super, x357._super[8]._super, x357._super[9]._super, x357._super[10]._super, x357._super[11]._super, x357._super[12]._super, x357._super[13]._super, x357._super[14]._super, x357._super[15]._super, x357._super[16]._super, x357._super[17]._super, x357._super[18]._super, x357._super[19]._super, x357._super[20]._super, x357._super[21]._super, x357._super[22]._super, x357._super[23]._super, x357._super[24]._super, x357._super[25]._super, x357._super[26]._super, x357._super[27]._super, x357._super[28]._super, x357._super[29]._super, x357._super[30]._super, x357._super[31]._super};
// ShaMix(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:172)
ShaStateStruct x1104 = exec_ShaState(ctx,x1101, x1102, x1103, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, arg1_0.count._super, arg1_0.kAddr._super, (x1098 * x1099), x1100, LAYOUT_LOOKUP(layout8, _super));
return x1104;
}
ShaStateStruct exec_ShaStoreState(ExecContext& ctx,NondetRegStruct arg0, ShaStateStruct arg1_0, ShaStateStruct arg2_0, ShaStateStruct arg3, BoundLayout<ShaStoreStateLayout> layout4)   {
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:191)
Val x5 = (Val(3) - arg1_0.round._super);
NondetRegStruct x6 = exec_IsZero(ctx,x5, LAYOUT_LOOKUP(layout4, lastRound));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:192)
Val x7 = (arg1_0.count._super - x6._super);
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:193)
NondetRegStruct x8 = exec_IsZero(ctx,x7, LAYOUT_LOOKUP(layout4, countZero));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:197)
Val x9 = (Val(1) - x6._super);
Val x10_0;
if (to_size_t(x8._super)) {
x10_0 = Val(48);
} else if (to_size_t((Val(1) - x8._super))) {
Val x11_0;
if (to_size_t(x6._super)) {
x11_0 = Val(34);
} else if (to_size_t(x9)) {
x11_0 = Val(36);
} else {
   assert(0 && "Reached unreachable mux arm");
}
x10_0 = x11_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:203)
Val x12_0 = (arg2_0.a[1]._super._super * Val(2));
Val x13_0 = (arg2_0.a[2]._super._super * Val(4));
Val x14_0 = (arg2_0.a[3]._super._super * Val(8));
Val x15_0 = (arg2_0.a[4]._super._super * Val(16));
Val x16 = (arg2_0.a[5]._super._super * Val(32));
Val x17 = (arg2_0.a[6]._super._super * Val(64));
Val x18 = (arg2_0.a[7]._super._super * Val(128));
Val x19 = (arg2_0.a[8]._super._super * Val(256));
Val x20 = (arg2_0.a[9]._super._super * Val(512));
Val x21 = (arg2_0.a[10]._super._super * Val(1024));
Val x22 = (arg2_0.a[11]._super._super * Val(2048));
Val x23 = (arg2_0.a[12]._super._super * Val(4096));
Val x24 = (arg2_0.a[13]._super._super * Val(8192));
Val x25 = (arg2_0.a[14]._super._super * Val(16384));
Val x26 = (arg2_0.a[15]._super._super * Val(32768));
Val x27 = (arg2_0.a[0]._super._super + x12_0);
Val x28 = (((x27 + x13_0) + x14_0) + x15_0);
Val x29 = (((x28 + x16) + x17) + x18);
Val x30 = (((x29 + x19) + x20) + x21);
Val x31 = (((x30 + x22) + x23) + x24);
Val x32 = (arg2_0.a[17]._super._super * Val(2));
Val x33 = (arg2_0.a[18]._super._super * Val(4));
Val x34 = (arg2_0.a[19]._super._super * Val(8));
Val x35 = (arg2_0.a[20]._super._super * Val(16));
Val x36 = (arg2_0.a[21]._super._super * Val(32));
Val x37 = (arg2_0.a[22]._super._super * Val(64));
Val x38 = (arg2_0.a[23]._super._super * Val(128));
Val x39 = (arg2_0.a[24]._super._super * Val(256));
Val x40 = (arg2_0.a[25]._super._super * Val(512));
Val x41 = (arg2_0.a[26]._super._super * Val(1024));
Val x42 = (arg2_0.a[27]._super._super * Val(2048));
Val x43 = (arg2_0.a[28]._super._super * Val(4096));
Val x44 = (arg2_0.a[29]._super._super * Val(8192));
Val x45 = (arg2_0.a[30]._super._super * Val(16384));
Val x46 = (arg2_0.a[31]._super._super * Val(32768));
Val x47 = (arg2_0.a[16]._super._super + x32);
Val x48 = (((x47 + x33) + x34) + x35);
Val x49 = (((x48 + x36) + x37) + x38);
Val x50 = (((x49 + x39) + x40) + x41);
Val x51 = (((x50 + x42) + x43) + x44);
Val x52 = (arg3.a[1]._super._super * Val(2));
Val x53 = (arg3.a[2]._super._super * Val(4));
Val x54 = (arg3.a[3]._super._super * Val(8));
Val x55 = (arg3.a[4]._super._super * Val(16));
Val x56 = (arg3.a[5]._super._super * Val(32));
Val x57 = (arg3.a[6]._super._super * Val(64));
Val x58 = (arg3.a[7]._super._super * Val(128));
Val x59 = (arg3.a[8]._super._super * Val(256));
Val x60 = (arg3.a[9]._super._super * Val(512));
Val x61 = (arg3.a[10]._super._super * Val(1024));
Val x62 = (arg3.a[11]._super._super * Val(2048));
Val x63 = (arg3.a[12]._super._super * Val(4096));
Val x64 = (arg3.a[13]._super._super * Val(8192));
Val x65 = (arg3.a[14]._super._super * Val(16384));
Val x66 = (arg3.a[15]._super._super * Val(32768));
Val x67 = (arg3.a[0]._super._super + x52);
Val x68 = (((x67 + x53) + x54) + x55);
Val x69 = (((x68 + x56) + x57) + x58);
Val x70 = (((x69 + x59) + x60) + x61);
Val x71 = (((x70 + x62) + x63) + x64);
Val x72 = (arg3.a[17]._super._super * Val(2));
Val x73 = (arg3.a[18]._super._super * Val(4));
Val x74 = (arg3.a[19]._super._super * Val(8));
Val x75 = (arg3.a[20]._super._super * Val(16));
Val x76 = (arg3.a[21]._super._super * Val(32));
Val x77 = (arg3.a[22]._super._super * Val(64));
Val x78 = (arg3.a[23]._super._super * Val(128));
Val x79 = (arg3.a[24]._super._super * Val(256));
Val x80 = (arg3.a[25]._super._super * Val(512));
Val x81 = (arg3.a[26]._super._super * Val(1024));
Val x82 = (arg3.a[27]._super._super * Val(2048));
Val x83 = (arg3.a[28]._super._super * Val(4096));
Val x84 = (arg3.a[29]._super._super * Val(8192));
Val x85 = (arg3.a[30]._super._super * Val(16384));
Val x86 = (arg3.a[31]._super._super * Val(32768));
Val x87 = (arg3.a[16]._super._super + x72);
Val x88 = (((x87 + x73) + x74) + x75);
Val x89 = (((x88 + x76) + x77) + x78);
Val x90 = (((x89 + x79) + x80) + x81);
Val x91 = (((x90 + x82) + x83) + x84);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x92 = (((x31 + x25) + x26) + ((x71 + x65) + x66));
Val x93 = (((x51 + x45) + x46) + ((x91 + x85) + x86));
UnpackReg_32__16_Struct x94 = exec_CarryAndExpand(ctx,Val2Array{x92, x93}, LAYOUT_LOOKUP(layout4, a));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// Pack32(zirgen/circuit/rv32im/v2/dsl/sha2.zir:72)
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:204)
Val x95 = (arg2_0.e[1]._super._super * Val(2));
Val x96 = (arg2_0.e[2]._super._super * Val(4));
Val x97 = (arg2_0.e[3]._super._super * Val(8));
Val x98 = (arg2_0.e[4]._super._super * Val(16));
Val x99 = (arg2_0.e[5]._super._super * Val(32));
Val x100 = (arg2_0.e[6]._super._super * Val(64));
Val x101 = (arg2_0.e[7]._super._super * Val(128));
Val x102 = (arg2_0.e[8]._super._super * Val(256));
Val x103 = (arg2_0.e[9]._super._super * Val(512));
Val x104 = (arg2_0.e[10]._super._super * Val(1024));
Val x105 = (arg2_0.e[11]._super._super * Val(2048));
Val x106 = (arg2_0.e[12]._super._super * Val(4096));
Val x107 = (arg2_0.e[13]._super._super * Val(8192));
Val x108 = (arg2_0.e[14]._super._super * Val(16384));
Val x109 = (arg2_0.e[15]._super._super * Val(32768));
Val x110 = (arg2_0.e[0]._super._super + x95);
Val x111 = (((x110 + x96) + x97) + x98);
Val x112 = (((x111 + x99) + x100) + x101);
Val x113 = (((x112 + x102) + x103) + x104);
Val x114 = (((x113 + x105) + x106) + x107);
Val x115 = (arg2_0.e[17]._super._super * Val(2));
Val x116 = (arg2_0.e[18]._super._super * Val(4));
Val x117 = (arg2_0.e[19]._super._super * Val(8));
Val x118 = (arg2_0.e[20]._super._super * Val(16));
Val x119 = (arg2_0.e[21]._super._super * Val(32));
Val x120 = (arg2_0.e[22]._super._super * Val(64));
Val x121 = (arg2_0.e[23]._super._super * Val(128));
Val x122 = (arg2_0.e[24]._super._super * Val(256));
Val x123 = (arg2_0.e[25]._super._super * Val(512));
Val x124 = (arg2_0.e[26]._super._super * Val(1024));
Val x125 = (arg2_0.e[27]._super._super * Val(2048));
Val x126 = (arg2_0.e[28]._super._super * Val(4096));
Val x127 = (arg2_0.e[29]._super._super * Val(8192));
Val x128 = (arg2_0.e[30]._super._super * Val(16384));
Val x129 = (arg2_0.e[31]._super._super * Val(32768));
Val x130 = (arg2_0.e[16]._super._super + x115);
Val x131 = (((x130 + x116) + x117) + x118);
Val x132 = (((x131 + x119) + x120) + x121);
Val x133 = (((x132 + x122) + x123) + x124);
Val x134 = (((x133 + x125) + x126) + x127);
Val x135 = (arg3.e[1]._super._super * Val(2));
Val x136 = (arg3.e[2]._super._super * Val(4));
Val x137 = (arg3.e[3]._super._super * Val(8));
Val x138 = (arg3.e[4]._super._super * Val(16));
Val x139 = (arg3.e[5]._super._super * Val(32));
Val x140 = (arg3.e[6]._super._super * Val(64));
Val x141 = (arg3.e[7]._super._super * Val(128));
Val x142 = (arg3.e[8]._super._super * Val(256));
Val x143 = (arg3.e[9]._super._super * Val(512));
Val x144 = (arg3.e[10]._super._super * Val(1024));
Val x145 = (arg3.e[11]._super._super * Val(2048));
Val x146 = (arg3.e[12]._super._super * Val(4096));
Val x147 = (arg3.e[13]._super._super * Val(8192));
Val x148 = (arg3.e[14]._super._super * Val(16384));
Val x149 = (arg3.e[15]._super._super * Val(32768));
Val x150 = (arg3.e[0]._super._super + x135);
Val x151 = (((x150 + x136) + x137) + x138);
Val x152 = (((x151 + x139) + x140) + x141);
Val x153 = (((x152 + x142) + x143) + x144);
Val x154 = (((x153 + x145) + x146) + x147);
Val x155 = (arg3.e[17]._super._super * Val(2));
Val x156 = (arg3.e[18]._super._super * Val(4));
Val x157 = (arg3.e[19]._super._super * Val(8));
Val x158 = (arg3.e[20]._super._super * Val(16));
Val x159 = (arg3.e[21]._super._super * Val(32));
Val x160 = (arg3.e[22]._super._super * Val(64));
Val x161 = (arg3.e[23]._super._super * Val(128));
Val x162 = (arg3.e[24]._super._super * Val(256));
Val x163 = (arg3.e[25]._super._super * Val(512));
Val x164 = (arg3.e[26]._super._super * Val(1024));
Val x165 = (arg3.e[27]._super._super * Val(2048));
Val x166 = (arg3.e[28]._super._super * Val(4096));
Val x167 = (arg3.e[29]._super._super * Val(8192));
Val x168 = (arg3.e[30]._super._super * Val(16384));
Val x169 = (arg3.e[31]._super._super * Val(32768));
Val x170 = (arg3.e[16]._super._super + x155);
Val x171 = (((x170 + x156) + x157) + x158);
Val x172 = (((x171 + x159) + x160) + x161);
Val x173 = (((x172 + x162) + x163) + x164);
Val x174 = (((x173 + x165) + x166) + x167);
// Add2(zirgen/circuit/rv32im/v2/dsl/sha2.zir:30)
Val x175 = (((x114 + x108) + x109) + ((x154 + x148) + x149));
Val x176 = (((x134 + x128) + x129) + ((x174 + x168) + x169));
UnpackReg_32__16_Struct x177 = exec_CarryAndExpand(ctx,Val2Array{x175, x176}, LAYOUT_LOOKUP(layout4, e));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:214)
Val x178 = (arg1_0.round._super + Val(1));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:203)
Val32Array x179 = Val32Array{x94._super[0]._super, x94._super[1]._super, x94._super[2]._super, x94._super[3]._super, x94._super[4]._super, x94._super[5]._super, x94._super[6]._super, x94._super[7]._super, x94._super[8]._super, x94._super[9]._super, x94._super[10]._super, x94._super[11]._super, x94._super[12]._super, x94._super[13]._super, x94._super[14]._super, x94._super[15]._super, x94._super[16]._super, x94._super[17]._super, x94._super[18]._super, x94._super[19]._super, x94._super[20]._super, x94._super[21]._super, x94._super[22]._super, x94._super[23]._super, x94._super[24]._super, x94._super[25]._super, x94._super[26]._super, x94._super[27]._super, x94._super[28]._super, x94._super[29]._super, x94._super[30]._super, x94._super[31]._super};
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:204)
Val32Array x180 = Val32Array{x177._super[0]._super, x177._super[1]._super, x177._super[2]._super, x177._super[3]._super, x177._super[4]._super, x177._super[5]._super, x177._super[6]._super, x177._super[7]._super, x177._super[8]._super, x177._super[9]._super, x177._super[10]._super, x177._super[11]._super, x177._super[12]._super, x177._super[13]._super, x177._super[14]._super, x177._super[15]._super, x177._super[16]._super, x177._super[17]._super, x177._super[18]._super, x177._super[19]._super, x177._super[20]._super, x177._super[21]._super, x177._super[22]._super, x177._super[23]._super, x177._super[24]._super, x177._super[25]._super, x177._super[26]._super, x177._super[27]._super, x177._super[28]._super, x177._super[29]._super, x177._super[30]._super, x177._super[31]._super};
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:205)
ShaStateStruct x181 = exec_ShaState(ctx,x179, x180, Val32Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, arg1_0.stateInAddr._super, arg1_0.stateOutAddr._super, arg1_0.dataAddr._super, x7, arg1_0.kAddr._super, (x9 * x178), x10_0, LAYOUT_LOOKUP(layout4, _super));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:219)
Val x182 = (arg1_0.stateOutAddr._super + Val(3));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:94)
Val x183 = (x94._super[1]._super * Val(2));
Val x184 = (x94._super[2]._super * Val(4));
Val x185 = (x94._super[3]._super * Val(8));
Val x186 = (x94._super[4]._super * Val(16));
Val x187 = (x94._super[5]._super * Val(32));
Val x188 = (x94._super[6]._super * Val(64));
Val x189 = (x94._super[7]._super * Val(128));
Val x190 = (x94._super[0]._super + x183);
Val x191 = (((x190 + x184) + x185) + x186);
Val x192 = (((x191 + x187) + x188) + x189);
Val x193 = (x94._super[9]._super * Val(2));
Val x194 = (x94._super[10]._super * Val(4));
Val x195 = (x94._super[11]._super * Val(8));
Val x196 = (x94._super[12]._super * Val(16));
Val x197 = (x94._super[13]._super * Val(32));
Val x198 = (x94._super[14]._super * Val(64));
Val x199 = (x94._super[15]._super * Val(128));
Val x200 = (x94._super[8]._super + x193);
Val x201 = (((x200 + x194) + x195) + x196);
Val x202 = (((x201 + x197) + x198) + x199);
Val x203 = (x94._super[17]._super * Val(2));
Val x204 = (x94._super[18]._super * Val(4));
Val x205 = (x94._super[19]._super * Val(8));
Val x206 = (x94._super[20]._super * Val(16));
Val x207 = (x94._super[21]._super * Val(32));
Val x208 = (x94._super[22]._super * Val(64));
Val x209 = (x94._super[23]._super * Val(128));
Val x210 = (x94._super[16]._super + x203);
Val x211 = (((x210 + x204) + x205) + x206);
Val x212 = (((x211 + x207) + x208) + x209);
Val x213 = (x94._super[25]._super * Val(2));
Val x214 = (x94._super[26]._super * Val(4));
Val x215 = (x94._super[27]._super * Val(8));
Val x216 = (x94._super[28]._super * Val(16));
Val x217 = (x94._super[29]._super * Val(32));
Val x218 = (x94._super[30]._super * Val(64));
Val x219 = (x94._super[31]._super * Val(128));
Val x220 = (x94._super[24]._super + x213);
Val x221 = (((x220 + x214) + x215) + x216);
Val x222 = (((x221 + x217) + x218) + x219);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:95)
ValU32Struct x223 = ValU32Struct{
  .low = ((x212 * Val(256)) + x222),   .high = ((x192 * Val(256)) + x202)};
MemoryWriteStruct x224 = exec_MemoryWrite(ctx,arg0, (x182 - arg1_0.round._super), x223, LAYOUT_LOOKUP(layout4, _1));
// ShaStoreState(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:220)
Val x225 = (arg1_0.stateOutAddr._super + Val(7));
// Pack(zirgen/circuit/rv32im/v2/dsl/pack.zir:19)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:94)
Val x226 = (x177._super[1]._super * Val(2));
Val x227 = (x177._super[2]._super * Val(4));
Val x228 = (x177._super[3]._super * Val(8));
Val x229 = (x177._super[4]._super * Val(16));
Val x230 = (x177._super[5]._super * Val(32));
Val x231 = (x177._super[6]._super * Val(64));
Val x232 = (x177._super[7]._super * Val(128));
Val x233 = (x177._super[0]._super + x226);
Val x234 = (((x233 + x227) + x228) + x229);
Val x235 = (((x234 + x230) + x231) + x232);
Val x236 = (x177._super[9]._super * Val(2));
Val x237 = (x177._super[10]._super * Val(4));
Val x238 = (x177._super[11]._super * Val(8));
Val x239 = (x177._super[12]._super * Val(16));
Val x240 = (x177._super[13]._super * Val(32));
Val x241 = (x177._super[14]._super * Val(64));
Val x242 = (x177._super[15]._super * Val(128));
Val x243 = (x177._super[8]._super + x236);
Val x244 = (((x243 + x237) + x238) + x239);
Val x245 = (((x244 + x240) + x241) + x242);
Val x246 = (x177._super[17]._super * Val(2));
Val x247 = (x177._super[18]._super * Val(4));
Val x248 = (x177._super[19]._super * Val(8));
Val x249 = (x177._super[20]._super * Val(16));
Val x250 = (x177._super[21]._super * Val(32));
Val x251 = (x177._super[22]._super * Val(64));
Val x252 = (x177._super[23]._super * Val(128));
Val x253 = (x177._super[16]._super + x246);
Val x254 = (((x253 + x247) + x248) + x249);
Val x255 = (((x254 + x250) + x251) + x252);
Val x256 = (x177._super[25]._super * Val(2));
Val x257 = (x177._super[26]._super * Val(4));
Val x258 = (x177._super[27]._super * Val(8));
Val x259 = (x177._super[28]._super * Val(16));
Val x260 = (x177._super[29]._super * Val(32));
Val x261 = (x177._super[30]._super * Val(64));
Val x262 = (x177._super[31]._super * Val(128));
Val x263 = (x177._super[24]._super + x256);
Val x264 = (((x263 + x257) + x258) + x259);
Val x265 = (((x264 + x260) + x261) + x262);
// ValU32(zirgen/circuit/rv32im/v2/dsl/u32.zir:10)
// BitsToBE(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:95)
ValU32Struct x266 = ValU32Struct{
  .low = ((x255 * Val(256)) + x265),   .high = ((x235 * Val(256)) + x245)};
MemoryWriteStruct x267 = exec_MemoryWrite(ctx,arg0, (x225 - arg1_0.round._super), x266, LAYOUT_LOOKUP(layout4, _2));
return x181;
}
InstOutputBaseStruct exec_Sha0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<Sha0Layout> layout2)   {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:225)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:226)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(32)));
EQZ(x4, "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:226)");
ShaStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:229)
ShaStateStruct x6 = exec_ShaEcall(ctx,arg0, LAYOUT_LOOKUP(layout2, stateRedef.arm0));
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:230)
ShaStateStruct x7 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x8 = exec_ShaLoadState(ctx,arg0, x7, LAYOUT_LOOKUP(layout2, stateRedef.arm1._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm1._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:231)
ShaStateStruct x9 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x10_0 = back_ShaState(ctx,2, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x11_0 = back_ShaState(ctx,3, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x12_0 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x13_0 = exec_ShaLoadData(ctx,arg0, x9, x10_0, x11_0, x12_0, LAYOUT_LOOKUP(layout2, stateRedef.arm2._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x13_0;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:232)
ShaStateStruct x14_0 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x15_0 = back_ShaState(ctx,2, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x16 = back_ShaState(ctx,3, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x17 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x18 = back_ShaState(ctx,7, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x19 = back_ShaState(ctx,15, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x20 = back_ShaState(ctx,16, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x21 = exec_ShaMix(ctx,arg0, x14_0, x15_0, x16, x17, x18, x19, x20, LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x21;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:233)
ShaStateStruct x22 = back_ShaState(ctx,1, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x23 = back_ShaState(ctx,4, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x24 = back_ShaState(ctx,68, LAYOUT_LOOKUP(layout2, state));
ShaStateStruct x25 = exec_ShaStoreState(ctx,arg0, x22, x23, x24, LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x25;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:234)
ShaStateStruct x26 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x26;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:235)
ShaStateStruct x27 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x27;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:236)
ShaStateStruct x28 = exec_ShaInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), 0), "Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:228)");
x5 = x28;
} else {
   assert(0 && "Reached unreachable mux arm");
}
ShaStateStruct x29 = back_ShaState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// InstOutput(zirgen/circuit/rv32im/v2/dsl/inst.zir:57)
// Sha0(zirgen/circuit/rv32im/v2/dsl/inst_sha.zir:238)
InstOutputBaseStruct x30 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x29.nextState._super,   .newMode = arg1_0.mode};
return x30;
}
BigIntStateStruct back_BigIntState(ExecContext& ctx,Index distance0, BoundLayout<BigIntStateLayout> layout1)   {
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:25)
NondetRegStruct x2 = back_BitReg(ctx,distance0, LAYOUT_LOOKUP(layout1, isEcall));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:26)
NondetRegStruct x3 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, pc));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:27)
NondetRegStruct x4 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, polyOp));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:28)
NondetRegStruct x5 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, coeff));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:29)
NondetRegStruct16Array x6 = map(Val16Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12), Val(13), Val(14), Val(15)}, LAYOUT_LOOKUP(layout1, bytes), ([&](Val16Array::value_type x7, BoundLayout<NondetRegLayout16LayoutArray::value_type> x8) {
NondetRegStruct x9 = back_Reg(ctx,distance0, x8);
return x9;

}));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:30)
NondetRegStruct x10_0 = back_Reg(ctx,distance0, LAYOUT_LOOKUP(layout1, nextState));
return BigIntStateStruct{
  .isEcall = x2,   .pc = x3,   .polyOp = x4,   .coeff = x5,   .bytes = x6,   .nextState = x10_0};
}
BigIntStateStruct exec_BigIntState(ExecContext& ctx,Val arg0, Val arg1_0, Val arg2_0, Val arg3, Val16Array arg4, Val arg5, BoundLayout<BigIntStateLayout> layout6)   {
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:25)
NondetRegStruct x7 = exec_BitReg(ctx,arg0, LAYOUT_LOOKUP(layout6, isEcall));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:26)
NondetRegStruct x8 = exec_Reg(ctx,arg1_0, LAYOUT_LOOKUP(layout6, pc));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:27)
NondetRegStruct x9 = exec_Reg(ctx,arg2_0, LAYOUT_LOOKUP(layout6, polyOp));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:28)
NondetRegStruct x10_0 = exec_Reg(ctx,arg3, LAYOUT_LOOKUP(layout6, coeff));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:29)
NondetRegStruct16Array x11_0 = map(arg4, LAYOUT_LOOKUP(layout6, bytes), ([&](Val16Array::value_type x12_0, BoundLayout<NondetRegLayout16LayoutArray::value_type> x13_0) {
NondetRegStruct x14_0 = exec_Reg(ctx,x12_0, x13_0);
return x14_0;

}));
// BigIntState(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:30)
NondetRegStruct x15_0 = exec_Reg(ctx,arg5, LAYOUT_LOOKUP(layout6, nextState));
return BigIntStateStruct{
  .isEcall = x7,   .pc = x8,   .polyOp = x9,   .coeff = x10_0,   .bytes = x11_0,   .nextState = x15_0};
}
BigIntStateStruct exec_BigIntInvalid(ExecContext& ctx,BoundLayout<BigIntStateLayout> layout0)   {
// Log(<preamble>:22)
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:34)
INVOKE_EXTERN(ctx,log, "BigIntInvalid", std::initializer_list<Val>{});
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:36)
EQZ(Val(2013265920), "BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:36)");
// BigIntInvalid(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:37)
BigIntStateStruct x1 = exec_BigIntState(ctx,Val(0), Val(0), Val(0), Val(0), Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, Val(48), layout0);
return x1;
}
BigIntStateStruct exec_BigIntEcall(ExecContext& ctx,NondetRegStruct arg0, BoundLayout<BigIntEcallLayout> layout1)   {
// Log(<preamble>:22)
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:48)
INVOKE_EXTERN(ctx,log, "BigIntEcall", std::initializer_list<Val>{});
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:50)
ReadAddrStruct x2 = exec_ReadAddr(ctx,arg0, Val(7), LAYOUT_LOOKUP(layout1, pc));
// Log(<preamble>:22)
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:51)
INVOKE_EXTERN(ctx,log, "pc", std::initializer_list<Val>{x2._super});
// BigIntEcall(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:53)
BigIntStateStruct x3 = exec_BigIntState(ctx,Val(1), (x2._super - Val(1)), Val(0), Val(0), Val16Array{Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0), Val(0)}, Val(41), LAYOUT_LOOKUP(layout1, _super));
return x3;
}
SplitU32Struct exec_SplitU32(ExecContext& ctx,ValU32Struct arg0, BoundLayout<SplitU32Layout> layout1)   {
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:64)
SplitWordStruct x2 = exec_SplitWord(ctx,arg0.low, LAYOUT_LOOKUP(layout1, low));
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:65)
SplitWordStruct x3 = exec_SplitWord(ctx,arg0.high, LAYOUT_LOOKUP(layout1, high));
// SplitU32(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:63)
SplitU32Struct x4 = SplitU32Struct{
  .bytes = NondetRegStruct4Array{x2.byte0, x2.byte1, x3.byte0, x3.byte1}};
return x4;
}
BigIntReadStruct exec_BigIntRead(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<BigIntReadLayout> layout2)   {
// Log(<preamble>:22)
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:70)
INVOKE_EXTERN(ctx,log, "BigIntRead", std::initializer_list<Val>{});
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:72)
SplitU32Struct4Array x3 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout2, words), ([&](Val4Array::value_type x4, BoundLayout<BigIntReadWords_SuperLayout4LayoutArray::value_type> x5) {
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:73)
GetDataStruct x6 = exec_MemoryRead(ctx,arg0, (arg1_0 + x4), LAYOUT_LOOKUP(x5, _0));
SplitU32Struct x7 = exec_SplitU32(ctx,x6._super, LAYOUT_LOOKUP(x5, _super));
return x7;

}));
// BigIntRead(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:76)
NondetRegStruct16Array x8 = NondetRegStruct16Array{x3[0].bytes[0], x3[0].bytes[1], x3[0].bytes[2], x3[0].bytes[3], x3[1].bytes[0], x3[1].bytes[1], x3[1].bytes[2], x3[1].bytes[3], x3[2].bytes[0], x3[2].bytes[1], x3[2].bytes[2], x3[2].bytes[3], x3[3].bytes[0], x3[3].bytes[1], x3[3].bytes[2], x3[3].bytes[3]};
return BigIntReadStruct{
  ._super = x8};
}
BigIntWitnessStruct exec_BigIntWitness(ExecContext& ctx,BigIntExternReturnStruct arg0, BoundLayout<BigIntWitnessLayout> layout1)   {
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:92)
NondetRegStruct x2 = exec_NondetReg(ctx,arg0.x00, LAYOUT_LOOKUP(layout1, _0));
NondetRegStruct x3 = exec_NondetReg(ctx,arg0.x01, LAYOUT_LOOKUP(layout1, _1));
NondetRegStruct x4 = exec_NondetReg(ctx,arg0.x02, LAYOUT_LOOKUP(layout1, _2));
NondetRegStruct x5 = exec_NondetReg(ctx,arg0.x03, LAYOUT_LOOKUP(layout1, _3));
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:93)
NondetRegStruct x6 = exec_NondetReg(ctx,arg0.x04, LAYOUT_LOOKUP(layout1, _4));
NondetRegStruct x7 = exec_NondetReg(ctx,arg0.x05, LAYOUT_LOOKUP(layout1, _5));
NondetRegStruct x8 = exec_NondetReg(ctx,arg0.x06, LAYOUT_LOOKUP(layout1, _6));
NondetRegStruct x9 = exec_NondetReg(ctx,arg0.x07, LAYOUT_LOOKUP(layout1, _7));
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:94)
NondetRegStruct x10_0 = exec_NondetReg(ctx,arg0.x08, LAYOUT_LOOKUP(layout1, _8));
NondetRegStruct x11_0 = exec_NondetReg(ctx,arg0.x09, LAYOUT_LOOKUP(layout1, _9));
NondetRegStruct x12_0 = exec_NondetReg(ctx,arg0.x10, LAYOUT_LOOKUP(layout1, _10));
NondetRegStruct x13_0 = exec_NondetReg(ctx,arg0.x11, LAYOUT_LOOKUP(layout1, _11));
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:95)
NondetRegStruct x14_0 = exec_NondetReg(ctx,arg0.x12, LAYOUT_LOOKUP(layout1, _12));
NondetRegStruct x15_0 = exec_NondetReg(ctx,arg0.x13, LAYOUT_LOOKUP(layout1, _13));
NondetRegStruct x16 = exec_NondetReg(ctx,arg0.x14, LAYOUT_LOOKUP(layout1, _14));
NondetRegStruct x17 = exec_NondetReg(ctx,arg0.x15, LAYOUT_LOOKUP(layout1, _15));
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:97)
NondetRegStruct16Array x18 = map(NondetRegStruct16Array{x2, x3, x4, x5, x6, x7, x8, x9, x10_0, x11_0, x12_0, x13_0, x14_0, x15_0, x16, x17}, LAYOUT_LOOKUP(layout1, _super), ([&](NondetRegStruct16Array::value_type x19, BoundLayout<NondetU8RegLayout16LayoutArray::value_type> x20) {
// BigIntWitness(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:98)
NondetRegStruct x21 = exec_U8Reg(ctx,x19._super, x20);
return x21;

}));
return BigIntWitnessStruct{
  ._super = x18};
}
BigIntWitnessStruct exec_BigIntWrite(ExecContext& ctx,NondetRegStruct arg0, Val arg1_0, BoundLayout<BigIntWriteLayout> layout2)   {
// Log(<preamble>:22)
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:103)
INVOKE_EXTERN(ctx,log, "BigIntWrite", std::initializer_list<Val>{});
// BigIntExtern(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:105)
auto [x3, x4, x5, x6, x7, x8, x9, x10_0, x11_0, x12_0, x13_0, x14_0, x15_0, x16, x17, x18] = INVOKE_EXTERN(ctx,bigIntExtern);
BigIntWitnessStruct x19 = exec_BigIntWitness(ctx,BigIntExternReturnStruct{
  .x00 = x3,   .x01 = x4,   .x02 = x5,   .x03 = x6,   .x04 = x7,   .x05 = x8,   .x06 = x9,   .x07 = x10_0,   .x08 = x11_0,   .x09 = x12_0,   .x10 = x13_0,   .x11 = x14_0,   .x12 = x15_0,   .x13 = x16,   .x14 = x17,   .x15 = x18}, LAYOUT_LOOKUP(layout2, _super));
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:106)
BigIntWrite__0Struct4Array x20 = map(Val4Array{Val(0), Val(1), Val(2), Val(3)}, LAYOUT_LOOKUP(layout2, _1), ([&](Val4Array::value_type x21, BoundLayout<BigIntWrite__0_SuperLayout4LayoutArray::value_type> x22) {
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:108)
Val x23 = (x21 * Val(4));
Val x24 = (x19._super[to_size_t((x23 + Val(1)))]._super * Val(256));
Val x25 = (x19._super[to_size_t(x23)]._super + x24);
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:109)
Val x26 = (x19._super[to_size_t((x23 + Val(3)))]._super * Val(256));
Val x27 = (x19._super[to_size_t((x23 + Val(2)))]._super + x26);
// BigIntWrite(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:111)
MemoryWriteStruct x28 = exec_MemoryWrite(ctx,arg0, (arg1_0 + x21), ValU32Struct{
  .low = x25,   .high = x27}, LAYOUT_LOOKUP(x22, _0));
return BigIntWrite__0Struct{
};

}));
return x19;
}
BigIntWitnessStruct exec_BigIntCheck(ExecContext& ctx,BoundLayout<BigIntWitnessLayout> layout0)   {
// Log(<preamble>:22)
// BigIntCheck(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:117)
INVOKE_EXTERN(ctx,log, "BigIntCheck", std::initializer_list<Val>{});
// BigIntExtern(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:15)
// BigIntCheck(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:118)
auto [x1, x2, x3, x4, x5, x6, x7, x8, x9, x10_0, x11_0, x12_0, x13_0, x14_0, x15_0, x16] = INVOKE_EXTERN(ctx,bigIntExtern);
BigIntWitnessStruct x17 = exec_BigIntWitness(ctx,BigIntExternReturnStruct{
  .x00 = x1,   .x01 = x2,   .x02 = x3,   .x03 = x4,   .x04 = x5,   .x05 = x6,   .x06 = x7,   .x07 = x8,   .x08 = x9,   .x09 = x10_0,   .x10 = x11_0,   .x11 = x12_0,   .x12 = x13_0,   .x13 = x14_0,   .x14 = x15_0,   .x15 = x16}, layout0);
return x17;
}
BigIntStateStruct exec_BigIntStep(ExecContext& ctx,NondetRegStruct arg0, BigIntStateStruct arg1_0, BoundLayout<BigIntStepLayout> layout2)   {
// Log(<preamble>:22)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:122)
INVOKE_EXTERN(ctx,log, "BigIntStep", std::initializer_list<Val>{});
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:124)
Val x3 = (arg1_0.pc._super + Val(1));
// Log(<preamble>:22)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:125)
INVOKE_EXTERN(ctx,log, "pc", std::initializer_list<Val>{x3});
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:128)
GetDataStruct x4 = exec_MemoryRead(ctx,arg0, x3, LAYOUT_LOOKUP(layout2, loadInst_0));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:129)
SplitWordStruct x5 = exec_SplitWord(ctx,x4._super.high, LAYOUT_LOOKUP(layout2, instHigh));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:134)
Val x6 = bitAnd(x5.byte1._super, Val(15));
NondetRegStruct x7 = exec_NondetReg(ctx,x6, LAYOUT_LOOKUP(layout2, polyOp));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:135)
Val x8 = (x5.byte1._super - x7._super);
NondetRegStruct x9 = exec_NondetReg(ctx,(x8 * Val(1887436801)), LAYOUT_LOOKUP(layout2, memOp));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:136)
Val x10_0 = ((x9._super * Val(16)) + x7._super);
Val x11_0 = (x5.byte1._super - x10_0);
EQZ(x11_0, "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:136)");
// Po2(zirgen/circuit/rv32im/v2/dsl/po2.zir:9)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:138)
Val30Array x12_0 = Val30Array{Val(1), Val(2), Val(4), Val(8), Val(16), Val(32), Val(64), Val(128), Val(256), Val(512), Val(1024), Val(2048), Val(4096), Val(8192), Val(16384), Val(32768), Val(65536), Val(131072), Val(262144), Val(524288), Val(1048576), Val(2097152), Val(4194304), Val(8388608), Val(16777216), Val(33554432), Val(67108864), Val(134217728), Val(268435456), Val(536870912)};
NondetRegStruct5Array x13_0 = map(Val5Array{Val(0), Val(1), Val(2), Val(3), Val(4)}, LAYOUT_LOOKUP(layout2, regBits), ([&](Val5Array::value_type x14_0, BoundLayout<NondetRegLayout5LayoutArray::value_type> x15_0) {
Val x16 = bitAnd(x5.byte0._super, x12_0[to_size_t(x14_0)]);
// Div(<preamble>:16)
Val x17 = inv_0(x12_0[to_size_t(x14_0)]);
// Div(<preamble>:17)
EQZ(((x17 * x12_0[to_size_t(x14_0)]) - Val(1)), "loc(callsite( Div ( <preamble> :17:22) at  BigIntStep ( zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir :138:61)))");
NondetRegStruct x18 = exec_NondetBitReg(ctx,(x17 * x16), x15_0);
return x18;

}));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:139)
Val x19 = (x13_0[1]._super * Val(2));
Val x20 = (x13_0[2]._super * Val(4));
Val x21 = (x13_0[3]._super * Val(8));
Val x22 = (x13_0[4]._super * Val(16));
Val x23 = (x13_0[0]._super + x19);
Val x24 = (((x23 + x20) + x21) + x22);
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:141)
NondetRegStruct3Array x25 = map(Val3Array{Val(0), Val(1), Val(2)}, LAYOUT_LOOKUP(layout2, coeffBits), ([&](Val3Array::value_type x26, BoundLayout<NondetRegLayout3LayoutArray::value_type> x27) {
Val x28 = bitAnd(x5.byte0._super, x12_0[to_size_t((x26 + Val(5)))]);
// Div(<preamble>:16)
Val x29 = inv_0(x12_0[to_size_t((x26 + Val(5)))]);
// Div(<preamble>:17)
EQZ(((x29 * x12_0[to_size_t((x26 + Val(5)))]) - Val(1)), "loc(callsite( Div ( <preamble> :17:22) at  BigIntStep ( zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir :141:67)))");
NondetRegStruct x30 = exec_NondetBitReg(ctx,(x29 * x28), x27);
return x30;

}));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:143)
Val x31 = (x25[1]._super * Val(2));
Val x32 = (x25[2]._super * Val(4));
Val x33 = (x25[0]._super + x31);
Val x34 = (x33 + x32);
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:148)
ReadAddrStruct x35 = exec_ReadAddr(ctx,arg0, x24, LAYOUT_LOOKUP(layout2, _2));
Val x36 = (x4._super.low * Val(4));
Val x37 = (x35._super + x36);
// Log(<preamble>:22)
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:150)
INVOKE_EXTERN(ctx,log, "polyOp, memOp, reg, coeff, offset, addr", std::initializer_list<Val>{x7._super, x9._super, x24, x34, x4._super.low, x37});
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:152)
OneHot_3_Struct x38 = exec_OneHot_3_(ctx,x9._super, LAYOUT_LOOKUP(layout2, memOpOneHot));
NondetRegStruct16Array x39;
if (to_size_t(x38._super[0]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:154)
BigIntReadStruct x40 = exec_BigIntRead(ctx,arg0, x37, LAYOUT_LOOKUP(layout2, bytes.arm0));
x39 = x40._super;
} else if (to_size_t(x38._super[1]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:155)
BigIntWitnessStruct x41 = exec_BigIntWrite(ctx,arg0, x37, LAYOUT_LOOKUP(layout2, bytes.arm1));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)
NondetRegStruct16Array x42 = NondetRegStruct16Array{x41._super[0], x41._super[1], x41._super[2], x41._super[3], x41._super[4], x41._super[5], x41._super[6], x41._super[7], x41._super[8], x41._super[9], x41._super[10], x41._super[11], x41._super[12], x41._super[13], x41._super[14], x41._super[15]};
x39 = x42;
} else if (to_size_t(x38._super[2]._super)) {
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:156)
BigIntWitnessStruct x43 = exec_BigIntCheck(ctx,LAYOUT_LOOKUP(layout2, bytes.arm2._super));
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra0.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra1.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra2.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra3.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra4.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra5.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra6.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra7.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra8.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra9.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra10.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
STORE(LAYOUT_LOOKUP(layout2, bytes.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, bytes.arm2._extra11.count._super), 0), "BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)");
NondetRegStruct16Array x44 = NondetRegStruct16Array{x43._super[0], x43._super[1], x43._super[2], x43._super[3], x43._super[4], x43._super[5], x43._super[6], x43._super[7], x43._super[8], x43._super[9], x43._super[10], x43._super[11], x43._super[12], x43._super[13], x43._super[14], x43._super[15]};
x39 = x44;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:160)
NondetRegStruct x45 = exec_IsZero(ctx,x7._super, LAYOUT_LOOKUP(layout2, _3));
Val x46 = (Val(1) - arg1_0.isEcall._super);
Val x47 = (x45._super * x46);
Val x48;
if (to_size_t(x47)) {
x48 = Val(48);
} else if (to_size_t((Val(1) - x47))) {
x48 = Val(41);
} else {
   assert(0 && "Reached unreachable mux arm");
}
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:153)
Val16Array x49 = Val16Array{x39[0]._super, x39[1]._super, x39[2]._super, x39[3]._super, x39[4]._super, x39[5]._super, x39[6]._super, x39[7]._super, x39[8]._super, x39[9]._super, x39[10]._super, x39[11]._super, x39[12]._super, x39[13]._super, x39[14]._super, x39[15]._super};
// BigIntStep(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:167)
BigIntStateStruct x50 = exec_BigIntState(ctx,Val(0), x3, x7._super, x34, x49, x48, LAYOUT_LOOKUP(layout2, _super));
return x50;
}
InstOutputBaseStruct exec_BigInt0(ExecContext& ctx,NondetRegStruct arg0, InstInputStruct arg1_0, BoundLayout<BigInt0Layout> layout2)   {
// Log(<preamble>:22)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:178)
INVOKE_EXTERN(ctx,log, "BigInt0", std::initializer_list<Val>{});
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:179)
DoCycleTableStruct x3 = exec_DoCycleTable(ctx,arg0, LAYOUT_LOOKUP(layout2, _0));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:180)
Val x4 = (arg1_0.state - (arg1_0.minor + Val(40)));
EQZ(x4, "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:180)");
BigIntStateStruct x5;
if (to_size_t(arg1_0.minorOnehot._super[0]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:183)
BigIntStateStruct x6 = exec_BigIntEcall(ctx,arg0, LAYOUT_LOOKUP(layout2, stateRedef.arm0._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm0._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x6;
} else if (to_size_t(arg1_0.minorOnehot._super[1]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:184)
BigIntStateStruct x7 = back_BigIntState(ctx,1, LAYOUT_LOOKUP(layout2, state));
BigIntStateStruct x8 = exec_BigIntStep(ctx,arg0, x7, LAYOUT_LOOKUP(layout2, stateRedef.arm1));
x5 = x8;
} else if (to_size_t(arg1_0.minorOnehot._super[2]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:185)
BigIntStateStruct x9 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm2._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm2._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x9;
} else if (to_size_t(arg1_0.minorOnehot._super[3]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:186)
BigIntStateStruct x10_0 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm3._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm3._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x10_0;
} else if (to_size_t(arg1_0.minorOnehot._super[4]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:187)
BigIntStateStruct x11_0 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm4._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm4._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x11_0;
} else if (to_size_t(arg1_0.minorOnehot._super[5]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:188)
BigIntStateStruct x12_0 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm5._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm5._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x12_0;
} else if (to_size_t(arg1_0.minorOnehot._super[6]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:189)
BigIntStateStruct x13_0 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm6._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm6._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x13_0;
} else if (to_size_t(arg1_0.minorOnehot._super[7]._super)) {
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:190)
BigIntStateStruct x14_0 = exec_BigIntInvalid(ctx,LAYOUT_LOOKUP(layout2, stateRedef.arm7._super));
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra0.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra1.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra2.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra3.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra4.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra5.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra6.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra7.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra8.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra9.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra10.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra11.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra12.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra13.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra14.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra15.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra15.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra16.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra16.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra17.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra17.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra18.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra18.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra19.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra19.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra20.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra20.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra21.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra21.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra22.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra22.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra23.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra23.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra24.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra24.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra25.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra25.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra26.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra26.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra27.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra27.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra28.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra28.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra29.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra29.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra30.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra30.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra31.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra31.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra32.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra32.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra33.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra33.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra34.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra34.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
STORE(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra35.count._super), Val(0));
EQZ(LOAD(LAYOUT_LOOKUP(layout2, stateRedef.arm7._extra35.count._super), 0), "BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:182)");
x5 = x14_0;
} else {
   assert(0 && "Reached unreachable mux arm");
}
BigIntStateStruct x15_0 = back_BigIntState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
BigIntStateStruct x16 = back_BigIntState(ctx,0, LAYOUT_LOOKUP(layout2, stateRedef._super));
// InstOutputBase(zirgen/circuit/rv32im/v2/dsl/inst.zir:49)
// BigInt0(zirgen/circuit/rv32im/v2/dsl/inst_bigint.zir:193)
InstOutputBaseStruct x17 = InstOutputBaseStruct{
  .newPc = arg1_0.pcU32,   .newState = x16.nextState._super,   .newMode = arg1_0.mode};
return x17;
}
OneHot_13_Struct exec_OneHot_13_(ExecContext& ctx,Val arg0, BoundLayout<OneHot_13_Layout> layout1)   {
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:7)
NondetRegStruct13Array x2 = map(Val13Array{Val(0), Val(1), Val(2), Val(3), Val(4), Val(5), Val(6), Val(7), Val(8), Val(9), Val(10), Val(11), Val(12)}, LAYOUT_LOOKUP(layout1, _super), ([&](Val13Array::value_type x3, BoundLayout<NondetRegLayout13LayoutArray::value_type> x4) {
NondetRegStruct x5 = exec_NondetBitReg(ctx,isz((x3 - arg0)), x4);
return x5;

}));
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)
Val x6 = (x2[0]._super + x2[1]._super);
Val x7 = ((x6 + x2[2]._super) + x2[3]._super);
Val x8 = ((x7 + x2[4]._super) + x2[5]._super);
Val x9 = ((x8 + x2[6]._super) + x2[7]._super);
Val x10_0 = ((x9 + x2[8]._super) + x2[9]._super);
Val x11_0 = ((x10_0 + x2[10]._super) + x2[11]._super);
EQZ(((x11_0 + x2[12]._super) - Val(1)), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:9)");
// OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)
Val x12_0 = (x2[2]._super * Val(2));
Val x13_0 = (x2[3]._super * Val(3));
Val x14_0 = (x2[4]._super * Val(4));
Val x15_0 = (x2[5]._super * Val(5));
Val x16 = (x2[6]._super * Val(6));
Val x17 = (x2[7]._super * Val(7));
Val x18 = (x2[8]._super * Val(8));
Val x19 = (x2[9]._super * Val(9));
Val x20 = (x2[10]._super * Val(10));
Val x21 = (x2[11]._super * Val(11));
Val x22 = (x2[12]._super * Val(12));
Val x23 = (x2[1]._super + x12_0);
Val x24 = (((x23 + x13_0) + x14_0) + x15_0);
Val x25 = (((x24 + x16) + x17) + x18);
Val x26 = (((x25 + x19) + x20) + x21);
EQZ(((x26 + x22) - arg0), "OneHot(zirgen/circuit/rv32im/v2/dsl/one_hot.zir:11)");
return OneHot_13_Struct{
  ._super = x2};
}
TopStruct exec_Top(ExecContext& ctx,BoundLayout<TopLayout> layout0, GlobalBuf global1)   {
// IsFirstCycle(zirgen/circuit/rv32im/v2/dsl/top.zir:15)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:46)
Val x2 = INVOKE_EXTERN(ctx,isFirstCycle_0);
NondetRegStruct x3 = exec_NondetBitReg(ctx,x2, LAYOUT_LOOKUP(layout0, isFirstCycle));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
Val x4 = (Val(1) - x3._super);
NondetRegStruct x5;
if (to_size_t(x3._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:49)
NondetRegStruct x6 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextState_0));
EQZ((x6._super - Val(7)), "Top(zirgen/circuit/rv32im/v2/dsl/top.zir:49)");
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:50)
NondetRegStruct x7 = exec_Reg(ctx,Val(0), LAYOUT_LOOKUP(layout0, cycleRedef.arm0));
x5 = x7;
} else if (to_size_t(x4)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:52)
NondetRegStruct x8 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, cycle));
NondetRegStruct x9 = exec_Reg(ctx,(x8._super + Val(1)), LAYOUT_LOOKUP(layout0, cycleRedef.arm1));
x5 = x9;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:55)
NondetRegStruct x10_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcLow));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:56)
NondetRegStruct x11_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextPcHigh));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:59)
NondetRegStruct x12_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextState_0));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:61)
NondetRegStruct x13_0 = back_Reg(ctx,1, LAYOUT_LOOKUP(layout0, nextMachineMode));
// GetMajorMinor(zirgen/circuit/rv32im/v2/dsl/top.zir:22)
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:63)
auto [x14_0, x15_0] = INVOKE_EXTERN(ctx,getMajorMinor);
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:65)
NondetRegStruct x16 = exec_NondetReg(ctx,x14_0, LAYOUT_LOOKUP(layout0, major));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:66)
NondetRegStruct x17 = exec_NondetReg(ctx,x15_0, LAYOUT_LOOKUP(layout0, minor));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:69)
InstInputStruct x18 = exec_InstInput(ctx,x16._super, x17._super, ValU32Struct{
  .low = (x4 * x10_0._super),   .high = (x4 * x11_0._super)}, (x4 * x12_0._super), ((x4 * x13_0._super) + x3._super), LAYOUT_LOOKUP(layout0, instInput));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:71)
OneHot_13_Struct x19 = exec_OneHot_13_(ctx,x16._super, LAYOUT_LOOKUP(layout0, majorOnehot));
InstOutputBaseStruct x20;
if (to_size_t(x19._super[0]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x21 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:73)
InstOutputBaseStruct x22 = exec_Misc0(ctx,x21, x18, LAYOUT_LOOKUP(layout0, instResult.arm0));
x20 = x22;
} else if (to_size_t(x19._super[1]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x23 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:74)
InstOutputBaseStruct x24 = exec_Misc1(ctx,x23, x18, LAYOUT_LOOKUP(layout0, instResult.arm1));
x20 = x24;
} else if (to_size_t(x19._super[2]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x25 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:75)
InstOutputBaseStruct x26 = exec_Misc2(ctx,x25, x18, LAYOUT_LOOKUP(layout0, instResult.arm2));
x20 = x26;
} else if (to_size_t(x19._super[3]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x27 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:76)
InstOutputBaseStruct x28 = exec_Mul0(ctx,x27, x18, LAYOUT_LOOKUP(layout0, instResult.arm3));
x20 = x28;
} else if (to_size_t(x19._super[4]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x29 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:77)
InstOutputBaseStruct x30 = exec_Div0(ctx,x29, x18, LAYOUT_LOOKUP(layout0, instResult.arm4));
x20 = x30;
} else if (to_size_t(x19._super[5]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x31 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:78)
InstOutputBaseStruct x32 = exec_Mem0(ctx,x31, x18, LAYOUT_LOOKUP(layout0, instResult.arm5));
x20 = x32;
} else if (to_size_t(x19._super[6]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x33 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:79)
InstOutputBaseStruct x34 = exec_Mem1(ctx,x33, x18, LAYOUT_LOOKUP(layout0, instResult.arm6));
x20 = x34;
} else if (to_size_t(x19._super[7]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x35 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:80)
InstOutputBaseStruct x36 = exec_Control0(ctx,x35, x18, LAYOUT_LOOKUP(layout0, instResult.arm7), global1);
x20 = x36;
} else if (to_size_t(x19._super[8]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x37 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:81)
InstOutputBaseStruct x38 = exec_ECall0(ctx,x37, x18, LAYOUT_LOOKUP(layout0, instResult.arm8), global1);
x20 = x38;
} else if (to_size_t(x19._super[9]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x39 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:82)
InstOutputBaseStruct x40 = exec_Poseidon0(ctx,x39, x18, LAYOUT_LOOKUP(layout0, instResult.arm9), global1);
x20 = x40;
} else if (to_size_t(x19._super[10]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x41 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:83)
InstOutputBaseStruct x42 = exec_Poseidon1(ctx,x41, x18, LAYOUT_LOOKUP(layout0, instResult.arm10));
x20 = x42;
} else if (to_size_t(x19._super[11]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x43 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:84)
InstOutputBaseStruct x44 = exec_Sha0(ctx,x43, x18, LAYOUT_LOOKUP(layout0, instResult.arm11));
x20 = x44;
} else if (to_size_t(x19._super[12]._super)) {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:48)
NondetRegStruct x45 = back_Reg(ctx,0, LAYOUT_LOOKUP(layout0, cycleRedef._super));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:85)
InstOutputBaseStruct x46 = exec_BigInt0(ctx,x45, x18, LAYOUT_LOOKUP(layout0, instResult.arm12));
x20 = x46;
} else {
   assert(0 && "Reached unreachable mux arm");
}
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:90)
NondetRegStruct x47 = exec_Reg(ctx,x20.newPc.low, LAYOUT_LOOKUP(layout0, nextPcLow));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:91)
NondetRegStruct x48 = exec_Reg(ctx,x20.newPc.high, LAYOUT_LOOKUP(layout0, nextPcHigh));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:92)
NondetRegStruct x49 = exec_Reg(ctx,x20.newState, LAYOUT_LOOKUP(layout0, nextState_0));
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:93)
NondetRegStruct x50 = exec_Reg(ctx,x20.newMode, LAYOUT_LOOKUP(layout0, nextMachineMode));
return TopStruct{
};
}
void step_Top(ExecContext& ctx,MutableBuf data0, GlobalBuf global1)   {
// Top(zirgen/circuit/rv32im/v2/dsl/top.zir:24)
BoundLayout<TopLayout> x2 = BIND_LAYOUT(kLayout_Top, data0);
TopStruct x3 = exec_Top(ctx,x2, global1);
return ;
}
ComponentStruct exec_TopAccum(ExecContext& ctx,BoundLayout<TopLayout> arg0, BoundLayout<LayoutAccumLayout> layout1, GlobalBuf mix2)   {
// zirgen/dsl/passes/GenerateAccum.cpp:526
BoundLayout<_mixLayout> x3 = BIND_LAYOUT(kLayoutMix, mix2);
// zirgen/dsl/passes/GenerateAccum.cpp:624
ComponentStruct x4 = ComponentStruct{
};
ComponentStruct x5;
if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 0), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x6 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x7 = (x6 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x8 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.count._super), 0) * inv_0(x7));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x9 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x8);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x10_0 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x11_0 = (x10_0 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x12_0 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.count._super), 0) * inv_0(x11_0));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x13_0 = (x7 * x11_0);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x14_0 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.low16.arg.count._super), 0) * x11_0);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x15_0 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x16 = (x15_0 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x17 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.count._super), 0) * inv_0(x16));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x18 = ((x9 + x12_0) + x17);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x18);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x19 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x20 = (((x19 * (x13_0 * x16)) - (x14_0 * x16)) - ((x7 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.writeData.high16.arg.count._super), 0)) * x16));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x20 - (x13_0 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x21 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x22 = (x21 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x23 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.count._super), 0) * inv_0(x22));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x24 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x25 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x26 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x27 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x28 = (((x24 + x25) + x26) + x27);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x29 = (x28 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x30 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.count._super), 0) * inv_0(x29));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x31 = (x22 * x29);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x32 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super.pcNorm.high16.arg.count._super), 0) * x29);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x33 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.addr._super), 0));
ExtVal x34 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x35 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x36 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x37 = (((x33 + x34) + x35) + x36);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x38 = (x37 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x39 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.count._super), 0) * inv_0(x38));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x40 = (((x18 + x23) + x30) + x39);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x40);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x41 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x42 = (((x41 * (x31 * x38)) - (x32 * x38)) - ((x22 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.oldTxn.count._super), 0)) * x38));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x42 - (x31 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x43 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x44 = (x43 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x45 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.count._super), 0) * inv_0(x44));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x46 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x47 = (x46 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x48 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.count._super), 0) * inv_0(x47));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x49 = (x44 * x47);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x50 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._super._0._0._0._0.arg.count._super), 0) * x47);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x51 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x52 = (x51 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x53 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.count._super), 0) * inv_0(x52));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x54 = (((x40 + x45) + x48) + x53);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x54);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x55 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x56 = (((x55 * (x49 * x52)) - (x50 * x52)) - ((x44 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg1.count._super), 0)) * x52));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x56 - (x49 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x57 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x58 = (x57 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x59 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x58));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x60 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x61 = (x60 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x62 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x61));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x63 = (x58 * x61);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x64 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x61);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x65 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x66 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x67 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x68 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x69 = (((x65 + x66) + x67) + x68);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x70 = (x69 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x71 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x70));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x72 = (((x54 + x59) + x62) + x71);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x72);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x73 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x74 = (((x73 * (x63 * x70)) - (x64 * x70)) - ((x58 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.pcAddr.med14.arg.count._super), 0)) * x70));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x74 - (x63 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x75 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x76 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x77 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x78 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x79 = (((x75 + x76) + x77) + x78);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x80 = (x79 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x81 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x80));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x82 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x83 = (x82 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x84 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x83));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x85 = (x80 * x83);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x86 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst.io.newTxn.count._super), 0) * x83);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x87 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x88 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x89 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x90 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x91 = (((x87 + x88) + x89) + x90);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x92 = (x91 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x93 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x92));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x94 = (((x72 + x81) + x84) + x93);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x94);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x95 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x96 = (((x95 * (x85 * x92)) - (x86 * x92)) - ((x80 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.decoded.loadInst._0._0.arg.count._super), 0)) * x92));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x96 - (x85 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x97 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x98 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x99 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x100 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x101 = (((x97 + x98) + x99) + x100);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x102 = (x101 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x103 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x102));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x104 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x105 = (x104 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x106 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x105));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x107 = (x102 * x105);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x108 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super.io.newTxn.count._super), 0) * x105);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x109 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x110 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x111 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x112 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x113 = (((x109 + x110) + x111) + x112);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x114 = (x113 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x115 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x114));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x116 = (((x94 + x103) + x106) + x115);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x116);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x117 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x118 = (((x117 * (x107 * x114)) - (x108 * x114)) - ((x102 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs1._super._0._0.arg.count._super), 0)) * x114));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x118 - (x107 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x119 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x120 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x121 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x122 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x123 = (((x119 + x120) + x121) + x122);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x124 = (x123 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x125 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x124));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x126 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x127 = (x126 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x128 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x127));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x129 = (x124 * x127);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x130 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super.io.newTxn.count._super), 0) * x127);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x131 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x132 = (x131 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x133 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), count._super), 0) * inv_0(x132));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x134 = (((x116 + x125) + x128) + x133);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x134);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x135 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x136 = (((x135 * (x129 * x132)) - (x130 * x132)) - ((x124 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm0.input.rs2._super._0._0.arg.count._super), 0)) * x132));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x136 - (x129 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x137 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x138 = (x137 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x139 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), count._super), 0) * inv_0(x138));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x140 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x141 = (x140 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x142 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), count._super), 0) * inv_0(x141));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x143 = (x138 * x141);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x144 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 1), count._super), 0) * x141);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x145 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x146 = (x145 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x147 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), count._super), 0) * inv_0(x146));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x148 = (((x134 + x139) + x142) + x147);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x148);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x149 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x150 = (((x149 * (x143 * x146)) - (x144 * x146)) - ((x138 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 2), count._super), 0)) * x146));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x150 - (x143 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x151 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x152 = (x151 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x153 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), count._super), 0) * inv_0(x152));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x148 + x153));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x154 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x155 = ((x154 * x152) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm0._arguments_Misc0MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x155, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x156 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x156, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 1), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x157 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x158 = (x157 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x159 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.count._super), 0) * inv_0(x158));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x160 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x159);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x161 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x162 = (x161 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x163 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.count._super), 0) * inv_0(x162));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x164 = (x158 * x162);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x165 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.low16.arg.count._super), 0) * x162);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x166 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x167 = (x166 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x168 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.count._super), 0) * inv_0(x167));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x169 = ((x160 + x163) + x168);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x169);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x170 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x171 = (((x170 * (x164 * x167)) - (x165 * x167)) - ((x158 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.writeData.high16.arg.count._super), 0)) * x167));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x171 - (x164 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x172 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x173 = (x172 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x174 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.count._super), 0) * inv_0(x173));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x175 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x176 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x177 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x178 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x179 = (((x175 + x176) + x177) + x178);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x180 = (x179 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x181 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.count._super), 0) * inv_0(x180));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x182 = (x173 * x180);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x183 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super.pcNorm.high16.arg.count._super), 0) * x180);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x184 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.addr._super), 0));
ExtVal x185 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x186 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x187 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x188 = (((x184 + x185) + x186) + x187);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x189 = (x188 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x190 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.count._super), 0) * inv_0(x189));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x191 = (((x169 + x174) + x181) + x190);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x191);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x192 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x193 = (((x192 * (x182 * x189)) - (x183 * x189)) - ((x173 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.oldTxn.count._super), 0)) * x189));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x193 - (x182 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x194 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x195 = (x194 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x196 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.count._super), 0) * inv_0(x195));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x197 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x198 = (x197 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x199 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.count._super), 0) * inv_0(x198));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x200 = (x195 * x198);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x201 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._super._0._0._0._0.arg.count._super), 0) * x198);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x202 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x203 = (x202 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x204 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.count._super), 0) * inv_0(x203));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x205 = (((x191 + x196) + x199) + x204);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x205);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x206 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x207 = (((x206 * (x200 * x203)) - (x201 * x203)) - ((x195 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg1.count._super), 0)) * x203));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x207 - (x200 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x208 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x209 = (x208 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x210 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x209));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x211 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x212 = (x211 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x213 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x212));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x214 = (x209 * x212);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x215 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x212);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x216 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x217 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x218 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x219 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x220 = (((x216 + x217) + x218) + x219);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x221 = (x220 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x222 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x221));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x223 = (((x205 + x210) + x213) + x222);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x223);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x224 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x225 = (((x224 * (x214 * x221)) - (x215 * x221)) - ((x209 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.pcAddr.med14.arg.count._super), 0)) * x221));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x225 - (x214 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x226 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x227 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x228 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x229 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x230 = (((x226 + x227) + x228) + x229);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x231 = (x230 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x232 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x231));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x233 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x234 = (x233 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x235 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x234));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x236 = (x231 * x234);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x237 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst.io.newTxn.count._super), 0) * x234);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x238 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x239 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x240 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x241 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x242 = (((x238 + x239) + x240) + x241);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x243 = (x242 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x244 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x243));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x245 = (((x223 + x232) + x235) + x244);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x245);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x246 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x247 = (((x246 * (x236 * x243)) - (x237 * x243)) - ((x231 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.decoded.loadInst._0._0.arg.count._super), 0)) * x243));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x247 - (x236 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x248 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x249 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x250 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x251 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x252 = (((x248 + x249) + x250) + x251);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x253 = (x252 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x254 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x253));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x255 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x256 = (x255 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x257 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x256));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x258 = (x253 * x256);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x259 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super.io.newTxn.count._super), 0) * x256);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x260 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x261 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x262 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x263 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x264 = (((x260 + x261) + x262) + x263);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x265 = (x264 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x266 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x265));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x267 = (((x245 + x254) + x257) + x266);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x267);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x268 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x269 = (((x268 * (x258 * x265)) - (x259 * x265)) - ((x253 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs1._super._0._0.arg.count._super), 0)) * x265));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x269 - (x258 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x270 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x271 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x272 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x273 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x274 = (((x270 + x271) + x272) + x273);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x275 = (x274 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x276 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x275));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x277 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x278 = (x277 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x279 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x278));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x280 = (x275 * x278);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x281 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super.io.newTxn.count._super), 0) * x278);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x282 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x283 = (x282 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x284 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), count._super), 0) * inv_0(x283));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x285 = (((x267 + x276) + x279) + x284);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x285);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x286 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x287 = (((x286 * (x280 * x283)) - (x281 * x283)) - ((x275 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm1.input.rs2._super._0._0.arg.count._super), 0)) * x283));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x287 - (x280 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x288 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x289 = (x288 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x290 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), count._super), 0) * inv_0(x289));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x291 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x292 = (x291 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x293 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), count._super), 0) * inv_0(x292));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x294 = (x289 * x292);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x295 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 1), count._super), 0) * x292);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x296 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x297 = (x296 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x298 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), count._super), 0) * inv_0(x297));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x299 = (((x285 + x290) + x293) + x298);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x299);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x300 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x301 = (((x300 * (x294 * x297)) - (x295 * x297)) - ((x289 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 2), count._super), 0)) * x297));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x301 - (x294 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x302 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x303 = (x302 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x304 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), count._super), 0) * inv_0(x303));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x299 + x304));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x305 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x306 = ((x305 * x303) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm1._arguments_Misc1MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x306, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x307 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x307, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 2), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x308 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x309 = (x308 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x310 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.count._super), 0) * inv_0(x309));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x311 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x310);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x312 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x313 = (x312 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x314 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.count._super), 0) * inv_0(x313));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x315 = (x309 * x313);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x316 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.low16.arg.count._super), 0) * x313);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x317 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x318 = (x317 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x319 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.count._super), 0) * inv_0(x318));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x320 = ((x311 + x314) + x319);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x320);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x321 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x322 = (((x321 * (x315 * x318)) - (x316 * x318)) - ((x309 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.writeData.high16.arg.count._super), 0)) * x318));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x322 - (x315 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x323 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x324 = (x323 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x325 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.count._super), 0) * inv_0(x324));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x326 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.addr._super), 0));
ExtVal x327 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.cycle._super), 0));
ExtVal x328 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.dataLow._super), 0));
ExtVal x329 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x330 = (((x326 + x327) + x328) + x329);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x331 = (x330 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x332 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.count._super), 0) * inv_0(x331));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x333 = (x324 * x331);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x334 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super.pcNorm.high16.arg.count._super), 0) * x331);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x335 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.addr._super), 0));
ExtVal x336 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.cycle._super), 0));
ExtVal x337 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.dataLow._super), 0));
ExtVal x338 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x339 = (((x335 + x336) + x337) + x338);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x340 = (x339 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x341 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.count._super), 0) * inv_0(x340));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x342 = (((x320 + x325) + x332) + x341);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x342);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x343 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x344 = (((x343 * (x333 * x340)) - (x334 * x340)) - ((x324 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.oldTxn.count._super), 0)) * x340));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x344 - (x333 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x345 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x346 = (x345 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x347 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.count._super), 0) * inv_0(x346));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x348 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x349 = (x348 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x350 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.count._super), 0) * inv_0(x349));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x351 = (x346 * x349);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x352 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._super._0._0._0._0.arg.count._super), 0) * x349);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x353 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x354 = (x353 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x355 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.count._super), 0) * inv_0(x354));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x356 = (((x342 + x347) + x350) + x355);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x356);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x357 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x358 = (((x357 * (x351 * x354)) - (x352 * x354)) - ((x346 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg1.count._super), 0)) * x354));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x358 - (x351 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2._0.arg2.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x359 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x360 = (x359 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x361 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x360));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x362 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x363 = (x362 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x364 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x363));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x365 = (x360 * x363);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x366 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * x363);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x367 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x368 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x369 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x370 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x371 = (((x367 + x368) + x369) + x370);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x372 = (x371 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x373 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x372));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x374 = (((x356 + x361) + x364) + x373);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x374);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x375 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x376 = (((x375 * (x365 * x372)) - (x366 * x372)) - ((x360 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.pcAddr.med14.arg.count._super), 0)) * x372));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x376 - (x365 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x377 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x378 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x379 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x380 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x381 = (((x377 + x378) + x379) + x380);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x382 = (x381 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x383 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x382));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x384 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x385 = (x384 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x386 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x385));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x387 = (x382 * x385);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x388 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst.io.newTxn.count._super), 0) * x385);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x389 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x390 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x391 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x392 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x393 = (((x389 + x390) + x391) + x392);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x394 = (x393 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x395 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x394));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x396 = (((x374 + x383) + x386) + x395);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x396);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x397 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x398 = (((x397 * (x387 * x394)) - (x388 * x394)) - ((x382 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.decoded.loadInst._0._0.arg.count._super), 0)) * x394));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x398 - (x387 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x399 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x400 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x401 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x402 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x403 = (((x399 + x400) + x401) + x402);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x404 = (x403 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x405 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x404));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x406 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x407 = (x406 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x408 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x407));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x409 = (x404 * x407);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x410 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super.io.newTxn.count._super), 0) * x407);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x411 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x412 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x413 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x414 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x415 = (((x411 + x412) + x413) + x414);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x416 = (x415 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x417 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x416));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x418 = (((x396 + x405) + x408) + x417);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x418);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x419 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x420 = (((x419 * (x409 * x416)) - (x410 * x416)) - ((x404 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs1._super._0._0.arg.count._super), 0)) * x416));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x420 - (x409 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x421 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x422 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x423 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x424 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x425 = (((x421 + x422) + x423) + x424);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x426 = (x425 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x427 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x426));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x428 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x429 = (x428 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x430 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x429));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x431 = (x426 * x429);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x432 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super.io.newTxn.count._super), 0) * x429);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x433 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x434 = (x433 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x435 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), count._super), 0) * inv_0(x434));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x436 = (((x418 + x427) + x430) + x435);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x436);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x437 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x438 = (((x437 * (x431 * x434)) - (x432 * x434)) - ((x426 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm2.input.rs2._super._0._0.arg.count._super), 0)) * x434));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x438 - (x431 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x439 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x440 = (x439 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x441 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), count._super), 0) * inv_0(x440));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x442 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x443 = (x442 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x444 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), count._super), 0) * inv_0(x443));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x445 = (x440 * x443);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x446 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 1), count._super), 0) * x443);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x447 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x448 = (x447 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x449 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), count._super), 0) * inv_0(x448));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x450 = (((x436 + x441) + x444) + x449);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x450);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x451 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x452 = (((x451 * (x445 * x448)) - (x446 * x448)) - ((x440 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 2), count._super), 0)) * x448));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x452 - (x445 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x453 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x454 = (x453 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x455 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), count._super), 0) * inv_0(x454));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), (x450 + x455));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x456 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x457 = ((x456 * x454) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm2._arguments_Misc2MiscOutput.argU16), 4), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x457, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x458 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x458, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 3), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x459 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x460 = (x459 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x461 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.count._super), 0) * inv_0(x460));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x462 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x461);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x463 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x464 = (x463 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x465 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.count._super), 0) * inv_0(x464));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x466 = (x460 * x464);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x467 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg1.count._super), 0) * x464);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x468 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x469 = (x468 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x470 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x469));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x471 = ((x462 + x465) + x470);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x471);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x472 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x473 = (((x472 * (x466 * x469)) - (x467 * x469)) - ((x460 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._0.arg2.count._super), 0)) * x469));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x473 - (x466 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x474 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x475 = (x474 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x476 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x475));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x477 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x478 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x479 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x480 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x481 = (((x477 + x478) + x479) + x480);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x482 = (x481 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x483 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x482));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x484 = (x475 * x482);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x485 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.pcAddr.med14.arg.count._super), 0) * x482);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x486 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x487 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x488 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x489 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x490 = (((x486 + x487) + x488) + x489);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x491 = (x490 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x492 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x491));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x493 = (((x471 + x476) + x483) + x492);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x493);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x494 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x495 = (((x494 * (x484 * x491)) - (x485 * x491)) - ((x475 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x491));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x495 - (x484 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x496 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x497 = (x496 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x498 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x497));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x499 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x500 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x501 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x502 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x503 = (((x499 + x500) + x501) + x502);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x504 = (x503 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x505 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x504));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x506 = (x497 * x504);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x507 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.decoded.loadInst._0._0.arg.count._super), 0) * x504);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x508 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x509 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x510 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x511 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x512 = (((x508 + x509) + x510) + x511);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x513 = (x512 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x514 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x513));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x515 = (((x493 + x498) + x505) + x514);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x515);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x516 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x517 = (((x516 * (x506 * x513)) - (x507 * x513)) - ((x497 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.oldTxn.count._super), 0)) * x513));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x517 - (x506 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x518 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x519 = (x518 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x520 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x519));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x521 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x522 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x523 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x524 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x525 = (((x521 + x522) + x523) + x524);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x526 = (x525 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x527 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x526));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x528 = (x519 * x526);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x529 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs1._super._0._0.arg.count._super), 0) * x526);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x530 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x531 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x532 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x533 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x534 = (((x530 + x531) + x532) + x533);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x535 = (x534 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x536 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x535));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x537 = (((x515 + x520) + x527) + x536);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x537);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x538 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x539 = (((x538 * (x528 * x535)) - (x529 * x535)) - ((x519 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.oldTxn.count._super), 0)) * x535));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x539 - (x528 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x540 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x541 = (x540 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x542 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x541));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x543 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x544 = (x543 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x545 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), count._super), 0) * inv_0(x544));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x546 = (x541 * x544);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x547 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.input.rs2._super._0._0.arg.count._super), 0) * x544);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x548 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x549 = (x548 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x550 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), count._super), 0) * inv_0(x549));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x551 = (((x537 + x542) + x545) + x550);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x551);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x552 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x553 = (((x552 * (x546 * x549)) - (x547 * x549)) - ((x541 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 0), count._super), 0)) * x549));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x553 - (x546 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x554 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x555 = (x554 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x556 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), count._super), 0) * inv_0(x555));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x557 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x558 = (x557 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x559 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), count._super), 0) * inv_0(x558));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x560 = (x555 * x558);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x561 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 2), count._super), 0) * x558);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x562 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x563 = (x562 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x564 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), count._super), 0) * inv_0(x563));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x565 = (((x551 + x556) + x559) + x564);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x565);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x566 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x567 = (((x566 * (x560 * x563)) - (x561 * x563)) - ((x555 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 3), count._super), 0)) * x563));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x567 - (x560 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x568 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x569 = (x568 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x570 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), count._super), 0) * inv_0(x569));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x571 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x572 = (x571 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x573 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), count._super), 0) * inv_0(x572));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x574 = (x569 * x572);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x575 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU16), 5), count._super), 0) * x572);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x576 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x577 = (x576 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x578 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), count._super), 0) * inv_0(x577));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x579 = (((x565 + x570) + x573) + x578);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x579);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x580 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x581 = (((x580 * (x574 * x577)) - (x575 * x577)) - ((x569 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 0), count._super), 0)) * x577));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x581 - (x574 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x582 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x583 = (x582 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x584 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), count._super), 0) * inv_0(x583));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x585 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x586 = (x585 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x587 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), count._super), 0) * inv_0(x586));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x588 = (x583 * x586);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x589 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 2), count._super), 0) * x586);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x590 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x591 = (x590 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x592 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), count._super), 0) * inv_0(x591));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x593 = (((x579 + x584) + x587) + x592);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x593);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x594 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x595 = (((x594 * (x588 * x591)) - (x589 * x591)) - ((x583 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 3), count._super), 0)) * x591));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x595 - (x588 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x596 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x597 = (x596 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x598 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), count._super), 0) * inv_0(x597));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x599 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x600 = (x599 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x601 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), count._super), 0) * inv_0(x600));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x602 = (x597 * x600);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x603 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 5), count._super), 0) * x600);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x604 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x605 = (x604 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x606 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), count._super), 0) * inv_0(x605));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x607 = (((x593 + x598) + x601) + x606);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x607);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x608 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x609 = (((x608 * (x602 * x605)) - (x603 * x605)) - ((x597 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 6), count._super), 0)) * x605));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x609 - (x602 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x610 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x611 = (x610 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x612 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), count._super), 0) * inv_0(x611));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x613 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x614 = (x613 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x615 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), count._super), 0) * inv_0(x614));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x616 = (x611 * x614);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x617 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 8), count._super), 0) * x614);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x618 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x619 = (x618 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x620 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), count._super), 0) * inv_0(x619));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x621 = (((x607 + x612) + x615) + x620);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x621);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x622 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x623 = (((x622 * (x616 * x619)) - (x617 * x619)) - ((x611 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 9), count._super), 0)) * x619));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x623 - (x616 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 10), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x624 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x625 = (x624 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x626 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), count._super), 0) * inv_0(x625));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x627 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x628 = (x627 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x629 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), count._super), 0) * inv_0(x628));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x630 = (x625 * x628);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x631 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 11), count._super), 0) * x628);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x632 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.addr._super), 0));
ExtVal x633 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.cycle._super), 0));
ExtVal x634 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x635 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x636 = (((x632 + x633) + x634) + x635);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x637 = (x636 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x638 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.count._super), 0) * inv_0(x637));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x639 = (((x621 + x626) + x629) + x638);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x639);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x640 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x641 = (((x640 * (x630 * x637)) - (x631 * x637)) - ((x625 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm3._arguments_Mul0MulOutput.argU8), 12), count._super), 0)) * x637));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x641 - (x630 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x642 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.addr._super), 0));
ExtVal x643 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.cycle._super), 0));
ExtVal x644 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.dataLow._super), 0));
ExtVal x645 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x646 = (((x642 + x643) + x644) + x645);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x647 = (x646 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x648 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.count._super), 0) * inv_0(x647));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x649 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x650 = (x649 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x651 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.count._super), 0) * inv_0(x650));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x652 = (x647 * x650);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x653 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0.io.newTxn.count._super), 0) * x650);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x654 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x655 = (x654 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x656 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.count._super), 0) * inv_0(x655));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x657 = (((x639 + x648) + x651) + x656);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x657);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x658 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x659 = (((x658 * (x652 * x655)) - (x653 * x655)) - ((x647 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3._1._0._0._0.arg.count._super), 0)) * x655));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x659 - (x652 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.low16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x660 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x661 = (x660 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x662 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.count._super), 0) * inv_0(x661));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), (x657 + x662));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x663 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x664 = ((x663 * x661) - LOAD(LAYOUT_LOOKUP(arg0, instResult.arm3.pcAdd.high16.arg.count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x664, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x665 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x665, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 4), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x666 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x667 = (x666 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x668 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.count._super), 0) * inv_0(x667));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x669 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x668);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x670 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x671 = (x670 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x672 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.count._super), 0) * inv_0(x671));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x673 = (x667 * x671);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x674 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg1.count._super), 0) * x671);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x675 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x676 = (x675 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x677 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x676));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x678 = ((x669 + x672) + x677);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x678);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x679 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x680 = (((x679 * (x673 * x676)) - (x674 * x676)) - ((x667 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._0.arg2.count._super), 0)) * x676));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x680 - (x673 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x681 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x682 = (x681 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x683 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x682));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x684 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x685 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x686 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x687 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x688 = (((x684 + x685) + x686) + x687);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x689 = (x688 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x690 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x689));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x691 = (x682 * x689);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x692 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.pcAddr.med14.arg.count._super), 0) * x689);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x693 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x694 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x695 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x696 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x697 = (((x693 + x694) + x695) + x696);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x698 = (x697 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x699 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x698));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x700 = (((x678 + x683) + x690) + x699);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x700);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x701 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x702 = (((x701 * (x691 * x698)) - (x692 * x698)) - ((x682 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x698));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x702 - (x691 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x703 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x704 = (x703 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x705 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x704));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x706 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x707 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x708 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x709 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x710 = (((x706 + x707) + x708) + x709);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x711 = (x710 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x712 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x711));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x713 = (x704 * x711);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x714 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.decoded.loadInst._0._0.arg.count._super), 0) * x711);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x715 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x716 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x717 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x718 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x719 = (((x715 + x716) + x717) + x718);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x720 = (x719 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x721 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x720));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x722 = (((x700 + x705) + x712) + x721);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x722);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x723 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x724 = (((x723 * (x713 * x720)) - (x714 * x720)) - ((x704 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.oldTxn.count._super), 0)) * x720));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x724 - (x713 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x725 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x726 = (x725 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x727 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x726));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x728 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x729 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x730 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x731 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x732 = (((x728 + x729) + x730) + x731);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x733 = (x732 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x734 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x733));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x735 = (x726 * x733);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x736 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs1._super._0._0.arg.count._super), 0) * x733);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x737 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x738 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x739 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x740 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x741 = (((x737 + x738) + x739) + x740);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x742 = (x741 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x743 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x742));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x744 = (((x722 + x727) + x734) + x743);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x744);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x745 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x746 = (((x745 * (x735 * x742)) - (x736 * x742)) - ((x726 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.oldTxn.count._super), 0)) * x742));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x746 - (x735 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x747 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x748 = (x747 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x749 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x748));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x750 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x751 = (x750 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x752 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), count._super), 0) * inv_0(x751));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x753 = (x748 * x751);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x754 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.input.rs2._super._0._0.arg.count._super), 0) * x751);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x755 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x756 = (x755 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x757 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), count._super), 0) * inv_0(x756));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x758 = (((x744 + x749) + x752) + x757);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x758);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x759 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x760 = (((x759 * (x753 * x756)) - (x754 * x756)) - ((x748 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 0), count._super), 0)) * x756));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x760 - (x753 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x761 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x762 = (x761 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x763 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), count._super), 0) * inv_0(x762));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x764 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x765 = (x764 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x766 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), count._super), 0) * inv_0(x765));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x767 = (x762 * x765);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x768 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 2), count._super), 0) * x765);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x769 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x770 = (x769 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x771 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), count._super), 0) * inv_0(x770));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x772 = (((x758 + x763) + x766) + x771);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x772);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x773 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x774 = (((x773 * (x767 * x770)) - (x768 * x770)) - ((x762 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 3), count._super), 0)) * x770));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x774 - (x767 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x775 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x776 = (x775 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x777 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), count._super), 0) * inv_0(x776));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x778 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x779 = (x778 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x780 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), count._super), 0) * inv_0(x779));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x781 = (x776 * x779);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x782 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 5), count._super), 0) * x779);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x783 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x784 = (x783 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x785 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), count._super), 0) * inv_0(x784));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x786 = (((x772 + x777) + x780) + x785);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x786);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x787 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x788 = (((x787 * (x781 * x784)) - (x782 * x784)) - ((x776 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 6), count._super), 0)) * x784));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x788 - (x781 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x789 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x790 = (x789 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x791 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), count._super), 0) * inv_0(x790));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x792 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x793 = (x792 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x794 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), count._super), 0) * inv_0(x793));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x795 = (x790 * x793);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x796 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 8), count._super), 0) * x793);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x797 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x798 = (x797 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x799 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), count._super), 0) * inv_0(x798));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x800 = (((x786 + x791) + x794) + x799);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x800);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x801 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x802 = (((x801 * (x795 * x798)) - (x796 * x798)) - ((x790 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 9), count._super), 0)) * x798));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x802 - (x795 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 10), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x803 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x804 = (x803 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x805 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), count._super), 0) * inv_0(x804));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x806 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x807 = (x806 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x808 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), count._super), 0) * inv_0(x807));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x809 = (x804 * x807);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x810 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 11), count._super), 0) * x807);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x811 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x812 = (x811 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x813 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), count._super), 0) * inv_0(x812));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x814 = (((x800 + x805) + x808) + x813);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x814);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x815 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x816 = (((x815 * (x809 * x812)) - (x810 * x812)) - ((x804 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 12), count._super), 0)) * x812));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x816 - (x809 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 13), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x817 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x818 = (x817 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x819 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), count._super), 0) * inv_0(x818));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x820 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x821 = (x820 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x822 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), count._super), 0) * inv_0(x821));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x823 = (x818 * x821);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x824 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 14), count._super), 0) * x821);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x825 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x826 = (x825 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x827 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), count._super), 0) * inv_0(x826));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x828 = (((x814 + x819) + x822) + x827);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x828);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x829 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x830 = (((x829 * (x823 * x826)) - (x824 * x826)) - ((x818 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU16), 15), count._super), 0)) * x826));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x830 - (x823 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x831 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x832 = (x831 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x833 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), count._super), 0) * inv_0(x832));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x834 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x835 = (x834 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x836 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), count._super), 0) * inv_0(x835));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x837 = (x832 * x835);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x838 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 1), count._super), 0) * x835);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x839 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x840 = (x839 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x841 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), count._super), 0) * inv_0(x840));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x842 = (((x828 + x833) + x836) + x841);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x842);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x843 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x844 = (((x843 * (x837 * x840)) - (x838 * x840)) - ((x832 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 2), count._super), 0)) * x840));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x844 - (x837 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x845 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x846 = (x845 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x847 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), count._super), 0) * inv_0(x846));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x848 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x849 = (x848 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x850 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), count._super), 0) * inv_0(x849));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x851 = (x846 * x849);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x852 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 4), count._super), 0) * x849);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x853 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x854 = (x853 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x855 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), count._super), 0) * inv_0(x854));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x856 = (((x842 + x847) + x850) + x855);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x856);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x857 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x858 = (((x857 * (x851 * x854)) - (x852 * x854)) - ((x846 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 5), count._super), 0)) * x854));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x858 - (x851 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x859 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x860 = (x859 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x861 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), count._super), 0) * inv_0(x860));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x862 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x863 = (x862 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x864 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), count._super), 0) * inv_0(x863));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x865 = (x860 * x863);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x866 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 7), count._super), 0) * x863);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x867 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x868 = (x867 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x869 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), count._super), 0) * inv_0(x868));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x870 = (((x856 + x861) + x864) + x869);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x870);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x871 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x872 = (((x871 * (x865 * x868)) - (x866 * x868)) - ((x860 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 8), count._super), 0)) * x868));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x872 - (x865 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x873 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x874 = (x873 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x875 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), count._super), 0) * inv_0(x874));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x876 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x877 = (x876 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x878 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), count._super), 0) * inv_0(x877));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x879 = (x874 * x877);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x880 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 10), count._super), 0) * x877);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x881 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x882 = (x881 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x883 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), count._super), 0) * inv_0(x882));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x884 = (((x870 + x875) + x878) + x883);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x884);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x885 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x886 = (((x885 * (x879 * x882)) - (x880 * x882)) - ((x874 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 11), count._super), 0)) * x882));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x886 - (x879 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm4._arguments_Div0MulOutput.argU8), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x887 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.addr._super), 0));
ExtVal x888 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.cycle._super), 0));
ExtVal x889 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x890 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x891 = (((x887 + x888) + x889) + x890);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x892 = (x891 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x893 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.count._super), 0) * inv_0(x892));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x894 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.addr._super), 0));
ExtVal x895 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.cycle._super), 0));
ExtVal x896 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.dataLow._super), 0));
ExtVal x897 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x898 = (((x894 + x895) + x896) + x897);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x899 = (x898 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x900 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.count._super), 0) * inv_0(x899));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x901 = (x892 * x899);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x902 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.oldTxn.count._super), 0) * x899);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x903 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x904 = (x903 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x905 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.count._super), 0) * inv_0(x904));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x906 = (((x884 + x893) + x900) + x905);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x906);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x907 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x908 = (((x907 * (x901 * x904)) - (x902 * x904)) - ((x892 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0.io.newTxn.count._super), 0)) * x904));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x908 - (x901 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x909 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x910 = (x909 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x911 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.count._super), 0) * inv_0(x910));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x912 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x913 = (x912 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x914 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.count._super), 0) * inv_0(x913));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x915 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.low16.arg.count._super), 0) * x913);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), ((x906 + x911) + x914));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x916 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x917 = (((x916 * (x910 * x913)) - x915) - (x910 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm4.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x917, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x918 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x918, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 5), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x919 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x920 = (x919 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x921 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.count._super), 0) * inv_0(x920));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x922 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x921);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x923 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x924 = (x923 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x925 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.count._super), 0) * inv_0(x924));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x926 = (x920 * x924);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x927 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg1.count._super), 0) * x924);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x928 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x929 = (x928 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x930 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x929));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x931 = ((x922 + x925) + x930);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x931);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x932 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x933 = (((x932 * (x926 * x929)) - (x927 * x929)) - ((x920 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._0.arg2.count._super), 0)) * x929));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x933 - (x926 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x934 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x935 = (x934 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x936 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x935));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x937 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x938 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x939 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x940 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x941 = (((x937 + x938) + x939) + x940);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x942 = (x941 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x943 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x942));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x944 = (x935 * x942);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x945 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.pcAddr.med14.arg.count._super), 0) * x942);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x946 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x947 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x948 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x949 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x950 = (((x946 + x947) + x948) + x949);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x951 = (x950 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x952 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x951));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x953 = (((x931 + x936) + x943) + x952);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x953);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x954 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x955 = (((x954 * (x944 * x951)) - (x945 * x951)) - ((x935 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x951));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x955 - (x944 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x956 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x957 = (x956 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x958 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x957));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x959 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x960 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x961 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x962 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x963 = (((x959 + x960) + x961) + x962);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x964 = (x963 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x965 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x964));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x966 = (x957 * x964);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x967 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.decoded.loadInst._0._0.arg.count._super), 0) * x964);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x968 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x969 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x970 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x971 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x972 = (((x968 + x969) + x970) + x971);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x973 = (x972 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x974 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x973));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x975 = (((x953 + x958) + x965) + x974);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x975);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x976 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x977 = (((x976 * (x966 * x973)) - (x967 * x973)) - ((x957 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.oldTxn.count._super), 0)) * x973));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x977 - (x966 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x978 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x979 = (x978 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x980 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x979));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x981 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x982 = (x981 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x983 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.count._super), 0) * inv_0(x982));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x984 = (x979 * x982);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x985 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.rs1._super._0._0.arg.count._super), 0) * x982);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x986 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x987 = (x986 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x988 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.count._super), 0) * inv_0(x987));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x989 = (((x975 + x980) + x983) + x988);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x989);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x990 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x991 = (((x990 * (x984 * x987)) - (x985 * x987)) - ((x979 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.low16.arg.count._super), 0)) * x987));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x991 - (x984 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addrU32.high16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x992 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x993 = (x992 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x994 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.count._super), 0) * inv_0(x993));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x995 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x996 = (x995 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x997 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.count._super), 0) * inv_0(x996));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x998 = (x993 * x996);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x999 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.upperDiff.arg.count._super), 0) * x996);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1000 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.addr._super), 0));
ExtVal x1001 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.cycle._super), 0));
ExtVal x1002 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.dataLow._super), 0));
ExtVal x1003 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1004 = (((x1000 + x1001) + x1002) + x1003);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1005 = (x1004 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1006 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.count._super), 0) * inv_0(x1005));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1007 = (((x989 + x994) + x997) + x1006);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1007);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1008 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1009 = (((x1008 * (x998 * x1005)) - (x999 * x1005)) - ((x993 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.addr.med14.arg.count._super), 0)) * x1005));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1009 - (x998 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1010 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.addr._super), 0));
ExtVal x1011 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.cycle._super), 0));
ExtVal x1012 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.dataLow._super), 0));
ExtVal x1013 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1014 = (((x1010 + x1011) + x1012) + x1013);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1015 = (x1014 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1016 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.count._super), 0) * inv_0(x1015));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1017 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1018 = (x1017 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1019 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.count._super), 0) * inv_0(x1018));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1020 = (x1015 * x1018);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1021 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data.io.newTxn.count._super), 0) * x1018);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1022 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1023 = (x1022 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1024 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), count._super), 0) * inv_0(x1023));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1025 = (((x1007 + x1016) + x1019) + x1024);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1025);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1026 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1027 = (((x1026 * (x1020 * x1023)) - (x1021 * x1023)) - ((x1015 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.input.data._0._0.arg.count._super), 0)) * x1023));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1027 - (x1020 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1028 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1029 = (x1028 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1030 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), count._super), 0) * inv_0(x1029));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1031 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1032 = (x1031 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1033 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), count._super), 0) * inv_0(x1032));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1034 = (x1029 * x1032);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1035 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 1), count._super), 0) * x1032);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1036 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1037 = (x1036 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1038 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), count._super), 0) * inv_0(x1037));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1039 = (((x1025 + x1030) + x1033) + x1038);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1039);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1040 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1041 = (((x1040 * (x1034 * x1037)) - (x1035 * x1037)) - ((x1029 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU8), 2), count._super), 0)) * x1037));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1041 - (x1034 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm5._arguments_Mem0Output.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1042 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.addr._super), 0));
ExtVal x1043 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.cycle._super), 0));
ExtVal x1044 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x1045 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1046 = (((x1042 + x1043) + x1044) + x1045);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1047 = (x1046 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1048 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.count._super), 0) * inv_0(x1047));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1049 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.addr._super), 0));
ExtVal x1050 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.cycle._super), 0));
ExtVal x1051 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.dataLow._super), 0));
ExtVal x1052 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1053 = (((x1049 + x1050) + x1051) + x1052);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1054 = (x1053 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1055 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.count._super), 0) * inv_0(x1054));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1056 = (x1047 * x1054);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1057 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.oldTxn.count._super), 0) * x1054);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1058 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1059 = (x1058 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1060 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.count._super), 0) * inv_0(x1059));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1061 = (((x1039 + x1048) + x1055) + x1060);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1061);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1062 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1063 = (((x1062 * (x1056 * x1059)) - (x1057 * x1059)) - ((x1047 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0.io.newTxn.count._super), 0)) * x1059));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1063 - (x1056 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1064 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1065 = (x1064 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1066 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.count._super), 0) * inv_0(x1065));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1067 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1068 = (x1067 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1069 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.count._super), 0) * inv_0(x1068));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1070 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.low16.arg.count._super), 0) * x1068);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), ((x1061 + x1066) + x1069));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1071 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1072 = (((x1071 * (x1065 * x1068)) - x1070) - (x1065 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm5.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1072, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1073 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1073, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 6), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1074 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1075 = (x1074 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1076 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.count._super), 0) * inv_0(x1075));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1077 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1076);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1078 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1079 = (x1078 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1080 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.count._super), 0) * inv_0(x1079));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1081 = (x1075 * x1079);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1082 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg1.count._super), 0) * x1079);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1083 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1084 = (x1083 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1085 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x1084));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1086 = ((x1077 + x1080) + x1085);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1086);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1087 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1088 = (((x1087 * (x1081 * x1084)) - (x1082 * x1084)) - ((x1075 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._0.arg2.count._super), 0)) * x1084));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1088 - (x1081 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1089 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1090 = (x1089 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1091 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.count._super), 0) * inv_0(x1090));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1092 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.addr._super), 0));
ExtVal x1093 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.cycle._super), 0));
ExtVal x1094 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.dataLow._super), 0));
ExtVal x1095 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1096 = (((x1092 + x1093) + x1094) + x1095);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1097 = (x1096 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1098 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.count._super), 0) * inv_0(x1097));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1099 = (x1090 * x1097);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1100 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.pcAddr.med14.arg.count._super), 0) * x1097);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1101 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.addr._super), 0));
ExtVal x1102 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.cycle._super), 0));
ExtVal x1103 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.dataLow._super), 0));
ExtVal x1104 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1105 = (((x1101 + x1102) + x1103) + x1104);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1106 = (x1105 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1107 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.count._super), 0) * inv_0(x1106));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1108 = (((x1086 + x1091) + x1098) + x1107);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1108);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1109 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1110 = (((x1109 * (x1099 * x1106)) - (x1100 * x1106)) - ((x1090 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.oldTxn.count._super), 0)) * x1106));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1110 - (x1099 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1111 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1112 = (x1111 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1113 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.count._super), 0) * inv_0(x1112));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1114 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.addr._super), 0));
ExtVal x1115 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.cycle._super), 0));
ExtVal x1116 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.dataLow._super), 0));
ExtVal x1117 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1118 = (((x1114 + x1115) + x1116) + x1117);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1119 = (x1118 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1120 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.count._super), 0) * inv_0(x1119));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1121 = (x1112 * x1119);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1122 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.decoded.loadInst._0._0.arg.count._super), 0) * x1119);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1123 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.addr._super), 0));
ExtVal x1124 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.cycle._super), 0));
ExtVal x1125 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.dataLow._super), 0));
ExtVal x1126 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1127 = (((x1123 + x1124) + x1125) + x1126);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1128 = (x1127 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1129 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.count._super), 0) * inv_0(x1128));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1130 = (((x1108 + x1113) + x1120) + x1129);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1130);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1131 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1132 = (((x1131 * (x1121 * x1128)) - (x1122 * x1128)) - ((x1112 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.oldTxn.count._super), 0)) * x1128));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1132 - (x1121 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1133 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1134 = (x1133 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1135 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super._0._0.arg.count._super), 0) * inv_0(x1134));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1136 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.addr._super), 0));
ExtVal x1137 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.cycle._super), 0));
ExtVal x1138 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.dataLow._super), 0));
ExtVal x1139 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1140 = (((x1136 + x1137) + x1138) + x1139);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1141 = (x1140 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1142 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.count._super), 0) * inv_0(x1141));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1143 = (x1134 * x1141);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1144 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs1._super._0._0.arg.count._super), 0) * x1141);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1145 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.addr._super), 0));
ExtVal x1146 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.cycle._super), 0));
ExtVal x1147 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.dataLow._super), 0));
ExtVal x1148 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1149 = (((x1145 + x1146) + x1147) + x1148);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1150 = (x1149 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1151 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.count._super), 0) * inv_0(x1150));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1152 = (((x1130 + x1135) + x1142) + x1151);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1152);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1153 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1154 = (((x1153 * (x1143 * x1150)) - (x1144 * x1150)) - ((x1134 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.oldTxn.count._super), 0)) * x1150));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1154 - (x1143 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super.io.newTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1155 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1156 = (x1155 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1157 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super._0._0.arg.count._super), 0) * inv_0(x1156));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1158 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1159 = (x1158 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1160 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.count._super), 0) * inv_0(x1159));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1161 = (x1156 * x1159);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1162 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.rs2._super._0._0.arg.count._super), 0) * x1159);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1163 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1164 = (x1163 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1165 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.count._super), 0) * inv_0(x1164));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1166 = (((x1152 + x1157) + x1160) + x1165);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1166);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1167 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1168 = (((x1167 * (x1161 * x1164)) - (x1162 * x1164)) - ((x1156 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.low16.arg.count._super), 0)) * x1164));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1168 - (x1161 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addrU32.high16.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1169 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1170 = (x1169 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1171 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.count._super), 0) * inv_0(x1170));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1172 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1173 = (x1172 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1174 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.count._super), 0) * inv_0(x1173));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1175 = (x1170 * x1173);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1176 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.upperDiff.arg.count._super), 0) * x1173);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1177 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.addr._super), 0));
ExtVal x1178 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.cycle._super), 0));
ExtVal x1179 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.dataLow._super), 0));
ExtVal x1180 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1181 = (((x1177 + x1178) + x1179) + x1180);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1182 = (x1181 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1183 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.count._super), 0) * inv_0(x1182));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1184 = (((x1166 + x1171) + x1174) + x1183);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1184);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1185 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1186 = (((x1185 * (x1175 * x1182)) - (x1176 * x1182)) - ((x1170 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.addr.med14.arg.count._super), 0)) * x1182));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1186 - (x1175 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.oldTxn.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1187 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.addr._super), 0));
ExtVal x1188 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.cycle._super), 0));
ExtVal x1189 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.dataLow._super), 0));
ExtVal x1190 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1191 = (((x1187 + x1188) + x1189) + x1190);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1192 = (x1191 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1193 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.count._super), 0) * inv_0(x1192));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1194 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1195 = (x1194 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1196 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.count._super), 0) * inv_0(x1195));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1197 = (x1192 * x1195);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1198 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data.io.newTxn.count._super), 0) * x1195);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1199 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1200 = (x1199 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1201 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), count._super), 0) * inv_0(x1200));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1202 = (((x1184 + x1193) + x1196) + x1201);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1202);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1203 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1204 = (((x1203 * (x1197 * x1200)) - (x1198 * x1200)) - ((x1192 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.input.data._0._0.arg.count._super), 0)) * x1200));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1204 - (x1197 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1205 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1206 = (x1205 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1207 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), count._super), 0) * inv_0(x1206));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1208 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1209 = (x1208 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1210 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), count._super), 0) * inv_0(x1209));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1211 = (x1206 * x1209);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1212 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 1), count._super), 0) * x1209);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1213 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1214 = (x1213 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1215 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), count._super), 0) * inv_0(x1214));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1216 = (((x1202 + x1207) + x1210) + x1215);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1216);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1217 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1218 = (((x1217 * (x1211 * x1214)) - (x1212 * x1214)) - ((x1206 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 2), count._super), 0)) * x1214));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1218 - (x1211 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm6._arguments_Mem1Output.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1219 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.addr._super), 0));
ExtVal x1220 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.cycle._super), 0));
ExtVal x1221 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.dataLow._super), 0));
ExtVal x1222 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1223 = (((x1219 + x1220) + x1221) + x1222);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1224 = (x1223 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1225 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.count._super), 0) * inv_0(x1224));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1226 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.addr._super), 0));
ExtVal x1227 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.cycle._super), 0));
ExtVal x1228 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.dataLow._super), 0));
ExtVal x1229 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1230 = (((x1226 + x1227) + x1228) + x1229);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1231 = (x1230 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1232 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.count._super), 0) * inv_0(x1231));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1233 = (x1224 * x1231);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1234 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.oldTxn.count._super), 0) * x1231);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1235 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1236 = (x1235 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1237 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.count._super), 0) * inv_0(x1236));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1238 = (((x1216 + x1225) + x1232) + x1237);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1238);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1239 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1240 = (((x1239 * (x1233 * x1236)) - (x1234 * x1236)) - ((x1224 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0.io.newTxn.count._super), 0)) * x1236));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1240 - (x1233 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6._1._0._0._0.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1241 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1242 = (x1241 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1243 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.count._super), 0) * inv_0(x1242));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1244 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1245 = (x1244 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1246 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.count._super), 0) * inv_0(x1245));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1247 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.low16.arg.count._super), 0) * x1245);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), ((x1238 + x1243) + x1246));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1248 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1249 = (((x1248 * (x1242 * x1245)) - x1247) - (x1242 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm6.pcAdd.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1249, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1250 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1250, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 7), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1251 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1252 = (x1251 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1253 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.count._super), 0) * inv_0(x1252));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1254 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1253);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1255 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1256 = (x1255 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1257 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.count._super), 0) * inv_0(x1256));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1258 = (x1252 * x1256);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1259 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg1.count._super), 0) * x1256);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1260 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), addr._super), 0));
ExtVal x1261 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), cycle._super), 0));
ExtVal x1262 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), dataLow._super), 0));
ExtVal x1263 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1264 = (((x1260 + x1261) + x1262) + x1263);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1265 = (x1264 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1266 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), count._super), 0) * inv_0(x1265));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1267 = ((x1254 + x1257) + x1266);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1267);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1268 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1269 = (((x1268 * (x1258 * x1265)) - (x1259 * x1265)) - ((x1252 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm7._0.arg2.count._super), 0)) * x1265));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1269 - (x1258 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1270 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), addr._super), 0));
ExtVal x1271 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), cycle._super), 0));
ExtVal x1272 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), dataLow._super), 0));
ExtVal x1273 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1274 = (((x1270 + x1271) + x1272) + x1273);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1275 = (x1274 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1276 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), count._super), 0) * inv_0(x1275));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1277 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), addr._super), 0));
ExtVal x1278 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), cycle._super), 0));
ExtVal x1279 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), dataLow._super), 0));
ExtVal x1280 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1281 = (((x1277 + x1278) + x1279) + x1280);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1282 = (x1281 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1283 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), count._super), 0) * inv_0(x1282));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1284 = (x1275 * x1282);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1285 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 1), count._super), 0) * x1282);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1286 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), addr._super), 0));
ExtVal x1287 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), cycle._super), 0));
ExtVal x1288 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), dataLow._super), 0));
ExtVal x1289 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1290 = (((x1286 + x1287) + x1288) + x1289);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1291 = (x1290 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1292 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), count._super), 0) * inv_0(x1291));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1293 = (((x1267 + x1276) + x1283) + x1292);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1293);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1294 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1295 = (((x1294 * (x1284 * x1291)) - (x1285 * x1291)) - ((x1275 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 2), count._super), 0)) * x1291));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1295 - (x1284 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1296 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), addr._super), 0));
ExtVal x1297 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), cycle._super), 0));
ExtVal x1298 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), dataLow._super), 0));
ExtVal x1299 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1300 = (((x1296 + x1297) + x1298) + x1299);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1301 = (x1300 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1302 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), count._super), 0) * inv_0(x1301));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1303 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), addr._super), 0));
ExtVal x1304 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), cycle._super), 0));
ExtVal x1305 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), dataLow._super), 0));
ExtVal x1306 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1307 = (((x1303 + x1304) + x1305) + x1306);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1308 = (x1307 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1309 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), count._super), 0) * inv_0(x1308));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1310 = (x1301 * x1308);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1311 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 4), count._super), 0) * x1308);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1312 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), addr._super), 0));
ExtVal x1313 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), cycle._super), 0));
ExtVal x1314 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), dataLow._super), 0));
ExtVal x1315 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1316 = (((x1312 + x1313) + x1314) + x1315);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1317 = (x1316 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1318 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), count._super), 0) * inv_0(x1317));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1319 = (((x1293 + x1302) + x1309) + x1318);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1319);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1320 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1321 = (((x1320 * (x1310 * x1317)) - (x1311 * x1317)) - ((x1301 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 5), count._super), 0)) * x1317));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1321 - (x1310 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1322 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), addr._super), 0));
ExtVal x1323 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), cycle._super), 0));
ExtVal x1324 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), dataLow._super), 0));
ExtVal x1325 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1326 = (((x1322 + x1323) + x1324) + x1325);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1327 = (x1326 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1328 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), count._super), 0) * inv_0(x1327));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1329 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), addr._super), 0));
ExtVal x1330 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), cycle._super), 0));
ExtVal x1331 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), dataLow._super), 0));
ExtVal x1332 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1333 = (((x1329 + x1330) + x1331) + x1332);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1334 = (x1333 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1335 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), count._super), 0) * inv_0(x1334));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1336 = (x1327 * x1334);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1337 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 7), count._super), 0) * x1334);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1338 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), addr._super), 0));
ExtVal x1339 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), cycle._super), 0));
ExtVal x1340 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), dataLow._super), 0));
ExtVal x1341 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1342 = (((x1338 + x1339) + x1340) + x1341);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1343 = (x1342 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1344 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), count._super), 0) * inv_0(x1343));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1345 = (((x1319 + x1328) + x1335) + x1344);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1345);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1346 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1347 = (((x1346 * (x1336 * x1343)) - (x1337 * x1343)) - ((x1327 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 8), count._super), 0)) * x1343));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1347 - (x1336 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1348 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), addr._super), 0));
ExtVal x1349 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), cycle._super), 0));
ExtVal x1350 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), dataLow._super), 0));
ExtVal x1351 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1352 = (((x1348 + x1349) + x1350) + x1351);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1353 = (x1352 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1354 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), count._super), 0) * inv_0(x1353));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1355 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), addr._super), 0));
ExtVal x1356 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), cycle._super), 0));
ExtVal x1357 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), dataLow._super), 0));
ExtVal x1358 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1359 = (((x1355 + x1356) + x1357) + x1358);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1360 = (x1359 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1361 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), count._super), 0) * inv_0(x1360));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1362 = (x1353 * x1360);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1363 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 10), count._super), 0) * x1360);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1364 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), addr._super), 0));
ExtVal x1365 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), cycle._super), 0));
ExtVal x1366 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), dataLow._super), 0));
ExtVal x1367 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1368 = (((x1364 + x1365) + x1366) + x1367);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1369 = (x1368 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1370 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), count._super), 0) * inv_0(x1369));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1371 = (((x1345 + x1354) + x1361) + x1370);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1371);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1372 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1373 = (((x1372 * (x1362 * x1369)) - (x1363 * x1369)) - ((x1353 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 11), count._super), 0)) * x1369));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1373 - (x1362 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1374 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), addr._super), 0));
ExtVal x1375 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), cycle._super), 0));
ExtVal x1376 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), dataLow._super), 0));
ExtVal x1377 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1378 = (((x1374 + x1375) + x1376) + x1377);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1379 = (x1378 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1380 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), count._super), 0) * inv_0(x1379));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1381 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), addr._super), 0));
ExtVal x1382 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), cycle._super), 0));
ExtVal x1383 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), dataLow._super), 0));
ExtVal x1384 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1385 = (((x1381 + x1382) + x1383) + x1384);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1386 = (x1385 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1387 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), count._super), 0) * inv_0(x1386));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1388 = (x1379 * x1386);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1389 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 13), count._super), 0) * x1386);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1390 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), addr._super), 0));
ExtVal x1391 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), cycle._super), 0));
ExtVal x1392 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), dataLow._super), 0));
ExtVal x1393 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1394 = (((x1390 + x1391) + x1392) + x1393);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1395 = (x1394 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1396 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), count._super), 0) * inv_0(x1395));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1397 = (((x1371 + x1380) + x1387) + x1396);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1397);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1398 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1399 = (((x1398 * (x1388 * x1395)) - (x1389 * x1395)) - ((x1379 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 14), count._super), 0)) * x1395));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1399 - (x1388 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.memoryArg), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1400 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1401 = (x1400 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1402 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), count._super), 0) * inv_0(x1401));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1403 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1404 = (x1403 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1405 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), count._super), 0) * inv_0(x1404));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1406 = (x1401 * x1404);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1407 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 0), count._super), 0) * x1404);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1408 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1409 = (x1408 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1410 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), count._super), 0) * inv_0(x1409));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1411 = (((x1397 + x1402) + x1405) + x1410);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1411);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1412 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1413 = (((x1412 * (x1406 * x1409)) - (x1407 * x1409)) - ((x1401 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 1), count._super), 0)) * x1409));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1413 - (x1406 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1414 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1415 = (x1414 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1416 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), count._super), 0) * inv_0(x1415));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1417 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1418 = (x1417 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1419 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), count._super), 0) * inv_0(x1418));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1420 = (x1415 * x1418);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1421 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 3), count._super), 0) * x1418);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1422 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1423 = (x1422 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1424 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), count._super), 0) * inv_0(x1423));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1425 = (((x1411 + x1416) + x1419) + x1424);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1425);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1426 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1427 = (((x1426 * (x1420 * x1423)) - (x1421 * x1423)) - ((x1415 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 4), count._super), 0)) * x1423));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1427 - (x1420 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1428 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1429 = (x1428 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1430 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), count._super), 0) * inv_0(x1429));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1431 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1432 = (x1431 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1433 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), count._super), 0) * inv_0(x1432));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1434 = (x1429 * x1432);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1435 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 6), count._super), 0) * x1432);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1436 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1437 = (x1436 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1438 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), count._super), 0) * inv_0(x1437));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1439 = (((x1425 + x1430) + x1433) + x1438);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1439);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1440 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1441 = (((x1440 * (x1434 * x1437)) - (x1435 * x1437)) - ((x1429 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.cycleArg), 7), count._super), 0)) * x1437));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1441 - (x1434 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1442 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1443 = (x1442 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1444 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), count._super), 0) * inv_0(x1443));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1445 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1446 = (x1445 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1447 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), count._super), 0) * inv_0(x1446));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1448 = (x1443 * x1446);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1449 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 1), count._super), 0) * x1446);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1450 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1451 = (x1450 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1452 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), count._super), 0) * inv_0(x1451));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1453 = (((x1439 + x1444) + x1447) + x1452);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x1453);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1454 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1455 = (((x1454 * (x1448 * x1451)) - (x1449 * x1451)) - ((x1443 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 2), count._super), 0)) * x1451));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1455 - (x1448 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1456 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1457 = (x1456 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1458 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), count._super), 0) * inv_0(x1457));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1459 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1460 = (x1459 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1461 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), count._super), 0) * inv_0(x1460));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1462 = (x1457 * x1460);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1463 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 4), count._super), 0) * x1460);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1464 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1465 = (x1464 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1466 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), count._super), 0) * inv_0(x1465));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1467 = (((x1453 + x1458) + x1461) + x1466);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x1467);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1468 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1469 = (((x1468 * (x1462 * x1465)) - (x1463 * x1465)) - ((x1457 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 5), count._super), 0)) * x1465));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1469 - (x1462 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1470 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1471 = (x1470 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1472 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), count._super), 0) * inv_0(x1471));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1473 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1474 = (x1473 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1475 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), count._super), 0) * inv_0(x1474));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1476 = (x1471 * x1474);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1477 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 7), count._super), 0) * x1474);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1478 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1479 = (x1478 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1480 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), count._super), 0) * inv_0(x1479));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1481 = (((x1467 + x1472) + x1475) + x1480);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x1481);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1482 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1483 = (((x1482 * (x1476 * x1479)) - (x1477 * x1479)) - ((x1471 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 8), count._super), 0)) * x1479));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1483 - (x1476 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1484 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1485 = (x1484 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1486 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), count._super), 0) * inv_0(x1485));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1487 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1488 = (x1487 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1489 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), count._super), 0) * inv_0(x1488));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1490 = (x1485 * x1488);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1491 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 10), count._super), 0) * x1488);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1492 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1493 = (x1492 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1494 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), count._super), 0) * inv_0(x1493));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1495 = (((x1481 + x1486) + x1489) + x1494);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x1495);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1496 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1497 = (((x1496 * (x1490 * x1493)) - (x1491 * x1493)) - ((x1485 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 11), count._super), 0)) * x1493));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1497 - (x1490 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1498 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1499 = (x1498 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1500 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), count._super), 0) * inv_0(x1499));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1501 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1502 = (x1501 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1503 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), count._super), 0) * inv_0(x1502));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1504 = (x1499 * x1502);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1505 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 13), count._super), 0) * x1502);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1506 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1507 = (x1506 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1508 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), count._super), 0) * inv_0(x1507));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1509 = (((x1495 + x1500) + x1503) + x1508);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x1509);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1510 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1511 = (((x1510 * (x1504 * x1507)) - (x1505 * x1507)) - ((x1499 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 14), count._super), 0)) * x1507));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1511 - (x1504 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU16), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1512 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1513 = (x1512 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1514 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), count._super), 0) * inv_0(x1513));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1515 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1516 = (x1515 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1517 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), count._super), 0) * inv_0(x1516));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1518 = (x1513 * x1516);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1519 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 0), count._super), 0) * x1516);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1520 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1521 = (x1520 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1522 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), count._super), 0) * inv_0(x1521));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1523 = (((x1509 + x1514) + x1517) + x1522);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x1523);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1524 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1525 = (((x1524 * (x1518 * x1521)) - (x1519 * x1521)) - ((x1513 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 1), count._super), 0)) * x1521));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1525 - (x1518 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1526 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1527 = (x1526 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1528 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), count._super), 0) * inv_0(x1527));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1529 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1530 = (x1529 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1531 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), count._super), 0) * inv_0(x1530));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1532 = (x1527 * x1530);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1533 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 3), count._super), 0) * x1530);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1534 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1535 = (x1534 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1536 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), count._super), 0) * inv_0(x1535));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1537 = (((x1523 + x1528) + x1531) + x1536);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), x1537);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1538 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1539 = (((x1538 * (x1532 * x1535)) - (x1533 * x1535)) - ((x1527 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 4), count._super), 0)) * x1535));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1539 - (x1532 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1540 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1541 = (x1540 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1542 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), count._super), 0) * inv_0(x1541));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1543 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1544 = (x1543 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1545 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), count._super), 0) * inv_0(x1544));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1546 = (x1541 * x1544);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1547 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 6), count._super), 0) * x1544);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1548 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1549 = (x1548 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1550 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), count._super), 0) * inv_0(x1549));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1551 = (((x1537 + x1542) + x1545) + x1550);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), x1551);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1552 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1553 = (((x1552 * (x1546 * x1549)) - (x1547 * x1549)) - ((x1541 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 7), count._super), 0)) * x1549));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1553 - (x1546 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 8), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1554 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1555 = (x1554 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1556 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), count._super), 0) * inv_0(x1555));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1557 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1558 = (x1557 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1559 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), count._super), 0) * inv_0(x1558));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1560 = (x1555 * x1558);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1561 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 9), count._super), 0) * x1558);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1562 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1563 = (x1562 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1564 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), count._super), 0) * inv_0(x1563));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1565 = (((x1551 + x1556) + x1559) + x1564);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), x1565);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1566 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1567 = (((x1566 * (x1560 * x1563)) - (x1561 * x1563)) - ((x1555 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 10), count._super), 0)) * x1563));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1567 - (x1560 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 11), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1568 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1569 = (x1568 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1570 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), count._super), 0) * inv_0(x1569));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1571 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1572 = (x1571 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1573 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), count._super), 0) * inv_0(x1572));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1574 = (x1569 * x1572);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1575 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 12), count._super), 0) * x1572);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1576 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1577 = (x1576 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1578 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), count._super), 0) * inv_0(x1577));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1579 = (((x1565 + x1570) + x1573) + x1578);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), x1579);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1580 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1581 = (((x1580 * (x1574 * x1577)) - (x1575 * x1577)) - ((x1569 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 13), count._super), 0)) * x1577));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1581 - (x1574 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 14), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1582 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1583 = (x1582 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1584 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), count._super), 0) * inv_0(x1583));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), (x1579 + x1584));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1585 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 18), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1586 = ((x1585 * x1583) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm7._arguments_Control0_Super.argU8), 15), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1586, "zirgen/dsl/passes/GenerateAccum.cpp:182");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 8), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1587 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1588 = (x1587 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1589 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.count._super), 0) * inv_0(x1588));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1590 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1589);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1591 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1592 = (x1591 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1593 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.count._super), 0) * inv_0(x1592));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1594 = (x1588 * x1592);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1595 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg1.count._super), 0) * x1592);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1596 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1597 = (x1596 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1598 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.count._super), 0) * inv_0(x1597));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1599 = ((x1590 + x1593) + x1598);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1599);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1600 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1601 = (((x1600 * (x1594 * x1597)) - (x1595 * x1597)) - ((x1588 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8._0.arg2.count._super), 0)) * x1597));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1601 - (x1594 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.upperDiff.arg.count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1602 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1603 = (x1602 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1604 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.count._super), 0) * inv_0(x1603));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1605 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), addr._super), 0));
ExtVal x1606 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), cycle._super), 0));
ExtVal x1607 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), dataLow._super), 0));
ExtVal x1608 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1609 = (((x1605 + x1606) + x1607) + x1608);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1610 = (x1609 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1611 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), count._super), 0) * inv_0(x1610));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1612 = (x1603 * x1610);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1613 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.pcAddr.med14.arg.count._super), 0) * x1610);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1614 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), addr._super), 0));
ExtVal x1615 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), cycle._super), 0));
ExtVal x1616 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), dataLow._super), 0));
ExtVal x1617 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1618 = (((x1614 + x1615) + x1616) + x1617);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1619 = (x1618 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1620 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), count._super), 0) * inv_0(x1619));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1621 = (((x1599 + x1604) + x1611) + x1620);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1621);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1622 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1623 = (((x1622 * (x1612 * x1619)) - (x1613 * x1619)) - ((x1603 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 0), count._super), 0)) * x1619));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1623 - (x1612 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1624 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), addr._super), 0));
ExtVal x1625 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), cycle._super), 0));
ExtVal x1626 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), dataLow._super), 0));
ExtVal x1627 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1628 = (((x1624 + x1625) + x1626) + x1627);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1629 = (x1628 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1630 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), count._super), 0) * inv_0(x1629));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1631 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), addr._super), 0));
ExtVal x1632 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), cycle._super), 0));
ExtVal x1633 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), dataLow._super), 0));
ExtVal x1634 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1635 = (((x1631 + x1632) + x1633) + x1634);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1636 = (x1635 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1637 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), count._super), 0) * inv_0(x1636));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1638 = (x1629 * x1636);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1639 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 2), count._super), 0) * x1636);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1640 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), addr._super), 0));
ExtVal x1641 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), cycle._super), 0));
ExtVal x1642 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), dataLow._super), 0));
ExtVal x1643 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1644 = (((x1640 + x1641) + x1642) + x1643);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1645 = (x1644 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1646 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), count._super), 0) * inv_0(x1645));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1647 = (((x1621 + x1630) + x1637) + x1646);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1647);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1648 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1649 = (((x1648 * (x1638 * x1645)) - (x1639 * x1645)) - ((x1629 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 3), count._super), 0)) * x1645));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1649 - (x1638 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 4), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1650 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), addr._super), 0));
ExtVal x1651 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), cycle._super), 0));
ExtVal x1652 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), dataLow._super), 0));
ExtVal x1653 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1654 = (((x1650 + x1651) + x1652) + x1653);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1655 = (x1654 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1656 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), count._super), 0) * inv_0(x1655));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1657 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), addr._super), 0));
ExtVal x1658 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), cycle._super), 0));
ExtVal x1659 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), dataLow._super), 0));
ExtVal x1660 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1661 = (((x1657 + x1658) + x1659) + x1660);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1662 = (x1661 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1663 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), count._super), 0) * inv_0(x1662));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1664 = (x1655 * x1662);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1665 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 5), count._super), 0) * x1662);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1666 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), addr._super), 0));
ExtVal x1667 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), cycle._super), 0));
ExtVal x1668 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), dataLow._super), 0));
ExtVal x1669 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1670 = (((x1666 + x1667) + x1668) + x1669);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1671 = (x1670 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1672 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), count._super), 0) * inv_0(x1671));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1673 = (((x1647 + x1656) + x1663) + x1672);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1673);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1674 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1675 = (((x1674 * (x1664 * x1671)) - (x1665 * x1671)) - ((x1655 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 6), count._super), 0)) * x1671));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1675 - (x1664 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.memoryArg), 7), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1676 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1677 = (x1676 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1678 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), count._super), 0) * inv_0(x1677));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1679 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1680 = (x1679 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1681 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), count._super), 0) * inv_0(x1680));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1682 = (x1677 * x1680);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1683 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 0), count._super), 0) * x1680);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1684 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1685 = (x1684 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1686 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), count._super), 0) * inv_0(x1685));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1687 = (((x1673 + x1678) + x1681) + x1686);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1687);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1688 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1689 = (((x1688 * (x1682 * x1685)) - (x1683 * x1685)) - ((x1677 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 1), count._super), 0)) * x1685));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1689 - (x1682 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1690 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1691 = (x1690 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1692 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), count._super), 0) * inv_0(x1691));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1693 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1694 = (x1693 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1695 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), count._super), 0) * inv_0(x1694));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1696 = (x1691 * x1694);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1697 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.cycleArg), 3), count._super), 0) * x1694);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1698 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1699 = (x1698 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1700 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), count._super), 0) * inv_0(x1699));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1701 = (((x1687 + x1692) + x1695) + x1700);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1701);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1702 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1703 = (((x1702 * (x1696 * x1699)) - (x1697 * x1699)) - ((x1691 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 0), count._super), 0)) * x1699));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1703 - (x1696 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 1), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1704 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1705 = (x1704 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1706 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), count._super), 0) * inv_0(x1705));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1707 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1708 = (x1707 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1709 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), count._super), 0) * inv_0(x1708));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1710 = (x1705 * x1708);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1711 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 2), count._super), 0) * x1708);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1712 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1713 = (x1712 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1714 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), count._super), 0) * inv_0(x1713));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1715 = (((x1701 + x1706) + x1709) + x1714);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1715);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1716 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1717 = (((x1716 * (x1710 * x1713)) - (x1711 * x1713)) - ((x1705 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU16), 3), count._super), 0)) * x1713));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1717 - (x1710 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1718 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1719 = (x1718 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1720 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), count._super), 0) * inv_0(x1719));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1721 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1722 = (x1721 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1723 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), count._super), 0) * inv_0(x1722));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1724 = (x1719 * x1722);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1725 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 1), count._super), 0) * x1722);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1726 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1727 = (x1726 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1728 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), count._super), 0) * inv_0(x1727));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1729 = (((x1715 + x1720) + x1723) + x1728);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1729);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1730 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1731 = (((x1730 * (x1724 * x1727)) - (x1725 * x1727)) - ((x1719 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 2), count._super), 0)) * x1727));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1731 - (x1724 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm8._arguments_ECall0Output.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1732 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1733 = (x1732 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1734 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.count._super), 0) * inv_0(x1733));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1735 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1736 = (x1735 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1737 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.count._super), 0) * inv_0(x1736));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1738 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.low16.arg.count._super), 0) * x1736);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), ((x1729 + x1734) + x1737));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1739 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1740 = (((x1739 * (x1733 * x1736)) - x1738) - (x1733 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm8.addPC.high16.arg.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x1740, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x1741 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x1741, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 9), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1742 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1743 = (x1742 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1744 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.count._super), 0) * inv_0(x1743));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1745 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x1744);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1746 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1747 = (x1746 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1748 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.count._super), 0) * inv_0(x1747));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1749 = (x1743 * x1747);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1750 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg1.count._super), 0) * x1747);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1751 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), addr._super), 0));
ExtVal x1752 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), cycle._super), 0));
ExtVal x1753 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), dataLow._super), 0));
ExtVal x1754 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1755 = (((x1751 + x1752) + x1753) + x1754);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1756 = (x1755 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1757 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), count._super), 0) * inv_0(x1756));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1758 = ((x1745 + x1748) + x1757);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x1758);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1759 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1760 = (((x1759 * (x1749 * x1756)) - (x1750 * x1756)) - ((x1743 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm9._0.arg2.count._super), 0)) * x1756));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1760 - (x1749 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1761 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), addr._super), 0));
ExtVal x1762 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), cycle._super), 0));
ExtVal x1763 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), dataLow._super), 0));
ExtVal x1764 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1765 = (((x1761 + x1762) + x1763) + x1764);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1766 = (x1765 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1767 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), count._super), 0) * inv_0(x1766));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1768 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), addr._super), 0));
ExtVal x1769 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), cycle._super), 0));
ExtVal x1770 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), dataLow._super), 0));
ExtVal x1771 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1772 = (((x1768 + x1769) + x1770) + x1771);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1773 = (x1772 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1774 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), count._super), 0) * inv_0(x1773));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1775 = (x1766 * x1773);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1776 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 1), count._super), 0) * x1773);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1777 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), addr._super), 0));
ExtVal x1778 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), cycle._super), 0));
ExtVal x1779 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), dataLow._super), 0));
ExtVal x1780 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1781 = (((x1777 + x1778) + x1779) + x1780);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1782 = (x1781 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1783 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), count._super), 0) * inv_0(x1782));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1784 = (((x1758 + x1767) + x1774) + x1783);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x1784);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1785 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1786 = (((x1785 * (x1775 * x1782)) - (x1776 * x1782)) - ((x1766 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 2), count._super), 0)) * x1782));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1786 - (x1775 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1787 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), addr._super), 0));
ExtVal x1788 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), cycle._super), 0));
ExtVal x1789 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), dataLow._super), 0));
ExtVal x1790 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1791 = (((x1787 + x1788) + x1789) + x1790);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1792 = (x1791 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1793 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), count._super), 0) * inv_0(x1792));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1794 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), addr._super), 0));
ExtVal x1795 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), cycle._super), 0));
ExtVal x1796 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), dataLow._super), 0));
ExtVal x1797 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1798 = (((x1794 + x1795) + x1796) + x1797);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1799 = (x1798 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1800 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), count._super), 0) * inv_0(x1799));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1801 = (x1792 * x1799);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1802 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 4), count._super), 0) * x1799);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1803 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), addr._super), 0));
ExtVal x1804 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), cycle._super), 0));
ExtVal x1805 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), dataLow._super), 0));
ExtVal x1806 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1807 = (((x1803 + x1804) + x1805) + x1806);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1808 = (x1807 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1809 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), count._super), 0) * inv_0(x1808));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1810 = (((x1784 + x1793) + x1800) + x1809);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x1810);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1811 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1812 = (((x1811 * (x1801 * x1808)) - (x1802 * x1808)) - ((x1792 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 5), count._super), 0)) * x1808));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1812 - (x1801 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1813 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), addr._super), 0));
ExtVal x1814 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), cycle._super), 0));
ExtVal x1815 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), dataLow._super), 0));
ExtVal x1816 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1817 = (((x1813 + x1814) + x1815) + x1816);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1818 = (x1817 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1819 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), count._super), 0) * inv_0(x1818));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1820 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), addr._super), 0));
ExtVal x1821 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), cycle._super), 0));
ExtVal x1822 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), dataLow._super), 0));
ExtVal x1823 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1824 = (((x1820 + x1821) + x1822) + x1823);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1825 = (x1824 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1826 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), count._super), 0) * inv_0(x1825));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1827 = (x1818 * x1825);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1828 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 7), count._super), 0) * x1825);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1829 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), addr._super), 0));
ExtVal x1830 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), cycle._super), 0));
ExtVal x1831 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), dataLow._super), 0));
ExtVal x1832 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1833 = (((x1829 + x1830) + x1831) + x1832);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1834 = (x1833 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1835 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), count._super), 0) * inv_0(x1834));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1836 = (((x1810 + x1819) + x1826) + x1835);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x1836);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1837 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1838 = (((x1837 * (x1827 * x1834)) - (x1828 * x1834)) - ((x1818 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 8), count._super), 0)) * x1834));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1838 - (x1827 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1839 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), addr._super), 0));
ExtVal x1840 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), cycle._super), 0));
ExtVal x1841 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), dataLow._super), 0));
ExtVal x1842 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1843 = (((x1839 + x1840) + x1841) + x1842);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1844 = (x1843 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1845 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), count._super), 0) * inv_0(x1844));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1846 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), addr._super), 0));
ExtVal x1847 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), cycle._super), 0));
ExtVal x1848 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), dataLow._super), 0));
ExtVal x1849 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1850 = (((x1846 + x1847) + x1848) + x1849);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1851 = (x1850 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1852 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), count._super), 0) * inv_0(x1851));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1853 = (x1844 * x1851);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1854 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 10), count._super), 0) * x1851);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1855 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), addr._super), 0));
ExtVal x1856 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), cycle._super), 0));
ExtVal x1857 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), dataLow._super), 0));
ExtVal x1858 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1859 = (((x1855 + x1856) + x1857) + x1858);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1860 = (x1859 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1861 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), count._super), 0) * inv_0(x1860));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1862 = (((x1836 + x1845) + x1852) + x1861);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x1862);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1863 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1864 = (((x1863 * (x1853 * x1860)) - (x1854 * x1860)) - ((x1844 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 11), count._super), 0)) * x1860));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1864 - (x1853 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1865 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), addr._super), 0));
ExtVal x1866 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), cycle._super), 0));
ExtVal x1867 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), dataLow._super), 0));
ExtVal x1868 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1869 = (((x1865 + x1866) + x1867) + x1868);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1870 = (x1869 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1871 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), count._super), 0) * inv_0(x1870));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1872 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), addr._super), 0));
ExtVal x1873 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), cycle._super), 0));
ExtVal x1874 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), dataLow._super), 0));
ExtVal x1875 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1876 = (((x1872 + x1873) + x1874) + x1875);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1877 = (x1876 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1878 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), count._super), 0) * inv_0(x1877));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1879 = (x1870 * x1877);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1880 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 13), count._super), 0) * x1877);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1881 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), addr._super), 0));
ExtVal x1882 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), cycle._super), 0));
ExtVal x1883 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), dataLow._super), 0));
ExtVal x1884 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x1885 = (((x1881 + x1882) + x1883) + x1884);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1886 = (x1885 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1887 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), count._super), 0) * inv_0(x1886));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1888 = (((x1862 + x1871) + x1878) + x1887);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x1888);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1889 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1890 = (((x1889 * (x1879 * x1886)) - (x1880 * x1886)) - ((x1870 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 14), count._super), 0)) * x1886));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1890 - (x1879 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.memoryArg), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1891 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1892 = (x1891 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1893 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), count._super), 0) * inv_0(x1892));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1894 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1895 = (x1894 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1896 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), count._super), 0) * inv_0(x1895));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1897 = (x1892 * x1895);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1898 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 0), count._super), 0) * x1895);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1899 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1900 = (x1899 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1901 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), count._super), 0) * inv_0(x1900));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1902 = (((x1888 + x1893) + x1896) + x1901);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x1902);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1903 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1904 = (((x1903 * (x1897 * x1900)) - (x1898 * x1900)) - ((x1892 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 1), count._super), 0)) * x1900));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1904 - (x1897 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1905 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1906 = (x1905 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1907 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), count._super), 0) * inv_0(x1906));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1908 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1909 = (x1908 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1910 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), count._super), 0) * inv_0(x1909));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1911 = (x1906 * x1909);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1912 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 3), count._super), 0) * x1909);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1913 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1914 = (x1913 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1915 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), count._super), 0) * inv_0(x1914));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1916 = (((x1902 + x1907) + x1910) + x1915);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x1916);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1917 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1918 = (((x1917 * (x1911 * x1914)) - (x1912 * x1914)) - ((x1906 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 4), count._super), 0)) * x1914));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1918 - (x1911 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 5), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1919 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1920 = (x1919 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1921 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), count._super), 0) * inv_0(x1920));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1922 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1923 = (x1922 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1924 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), count._super), 0) * inv_0(x1923));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1925 = (x1920 * x1923);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1926 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 6), count._super), 0) * x1923);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1927 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1928 = (x1927 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1929 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), count._super), 0) * inv_0(x1928));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1930 = (((x1916 + x1921) + x1924) + x1929);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x1930);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1931 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1932 = (((x1931 * (x1925 * x1928)) - (x1926 * x1928)) - ((x1920 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.cycleArg), 7), count._super), 0)) * x1928));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1932 - (x1925 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1933 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1934 = (x1933 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1935 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), count._super), 0) * inv_0(x1934));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1936 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1937 = (x1936 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1938 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), count._super), 0) * inv_0(x1937));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1939 = (x1934 * x1937);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1940 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 1), count._super), 0) * x1937);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1941 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1942 = (x1941 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1943 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), count._super), 0) * inv_0(x1942));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1944 = (((x1930 + x1935) + x1938) + x1943);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x1944);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1945 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1946 = (((x1945 * (x1939 * x1942)) - (x1940 * x1942)) - ((x1934 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 2), count._super), 0)) * x1942));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1946 - (x1939 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1947 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1948 = (x1947 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1949 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), count._super), 0) * inv_0(x1948));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1950 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1951 = (x1950 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1952 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), count._super), 0) * inv_0(x1951));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1953 = (x1948 * x1951);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1954 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 4), count._super), 0) * x1951);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1955 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1956 = (x1955 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1957 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), count._super), 0) * inv_0(x1956));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1958 = (((x1944 + x1949) + x1952) + x1957);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x1958);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1959 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1960 = (((x1959 * (x1953 * x1956)) - (x1954 * x1956)) - ((x1948 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 5), count._super), 0)) * x1956));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1960 - (x1953 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1961 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1962 = (x1961 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1963 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), count._super), 0) * inv_0(x1962));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1964 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1965 = (x1964 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1966 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), count._super), 0) * inv_0(x1965));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1967 = (x1962 * x1965);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1968 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 7), count._super), 0) * x1965);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1969 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1970 = (x1969 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1971 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), count._super), 0) * inv_0(x1970));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1972 = (((x1958 + x1963) + x1966) + x1971);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x1972);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1973 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1974 = (((x1973 * (x1967 * x1970)) - (x1968 * x1970)) - ((x1962 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 8), count._super), 0)) * x1970));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1974 - (x1967 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1975 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1976 = (x1975 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1977 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), count._super), 0) * inv_0(x1976));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1978 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1979 = (x1978 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1980 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), count._super), 0) * inv_0(x1979));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1981 = (x1976 * x1979);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1982 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 10), count._super), 0) * x1979);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1983 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1984 = (x1983 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1985 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), count._super), 0) * inv_0(x1984));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x1986 = (((x1972 + x1977) + x1980) + x1985);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), x1986);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x1987 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x1988 = (((x1987 * (x1981 * x1984)) - (x1982 * x1984)) - ((x1976 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 11), count._super), 0)) * x1984));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x1988 - (x1981 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1989 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1990 = (x1989 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1991 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), count._super), 0) * inv_0(x1990));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1992 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1993 = (x1992 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1994 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), count._super), 0) * inv_0(x1993));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x1995 = (x1990 * x1993);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x1996 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 13), count._super), 0) * x1993);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x1997 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x1998 = (x1997 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x1999 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), count._super), 0) * inv_0(x1998));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2000 = (((x1986 + x1991) + x1994) + x1999);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), x2000);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2001 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2002 = (((x2001 * (x1995 * x1998)) - (x1996 * x1998)) - ((x1990 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 14), count._super), 0)) * x1998));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2002 - (x1995 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2003 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2004 = (x2003 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2005 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), count._super), 0) * inv_0(x2004));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2006 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2007 = (x2006 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2008 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), count._super), 0) * inv_0(x2007));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2009 = (x2004 * x2007);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2010 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 16), count._super), 0) * x2007);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2011 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2012 = (x2011 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2013 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), count._super), 0) * inv_0(x2012));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2014 = (((x2000 + x2005) + x2008) + x2013);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), x2014);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2015 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 13), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2016 = (((x2015 * (x2009 * x2012)) - (x2010 * x2012)) - ((x2004 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 17), count._super), 0)) * x2012));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2016 - (x2009 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 18), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2017 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2018 = (x2017 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2019 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), count._super), 0) * inv_0(x2018));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2020 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2021 = (x2020 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2022 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), count._super), 0) * inv_0(x2021));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2023 = (x2018 * x2021);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2024 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 19), count._super), 0) * x2021);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2025 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2026 = (x2025 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2027 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), count._super), 0) * inv_0(x2026));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2028 = (((x2014 + x2019) + x2022) + x2027);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), x2028);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2029 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 14), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2030 = (((x2029 * (x2023 * x2026)) - (x2024 * x2026)) - ((x2018 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 20), count._super), 0)) * x2026));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2030 - (x2023 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 21), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2031 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2032 = (x2031 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2033 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), count._super), 0) * inv_0(x2032));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2034 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU16.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2035 = (x2034 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2036 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), count._super), 0) * inv_0(x2035));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2037 = (x2032 * x2035);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2038 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 22), count._super), 0) * x2035);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2039 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2040 = (x2039 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2041 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), count._super), 0) * inv_0(x2040));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2042 = (((x2028 + x2033) + x2036) + x2041);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), x2042);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2043 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 15), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2044 = (((x2043 * (x2037 * x2040)) - (x2038 * x2040)) - ((x2032 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU16), 23), count._super), 0)) * x2040));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2044 - (x2037 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2045 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2046 = (x2045 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2047 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), count._super), 0) * inv_0(x2046));
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), (x2042 + x2047));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2048 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 16), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2049 = ((x2048 * x2046) - LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm9._arguments_Poseidon0State.argU8), 1), count._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2049, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2050 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 17), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2050, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 10), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2051 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2052 = (x2051 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2053 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.count._super), 0) * inv_0(x2052));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2054 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2053);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2055 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2056 = (x2055 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2057 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.count._super), 0) * inv_0(x2056));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2058 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg1.count._super), 0) * x2056);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), (x2054 + x2057));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2059 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2060 = (((x2059 * (x2052 * x2056)) - x2058) - (x2052 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm10._0.arg2.count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2060, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2061 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2061, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 11), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2062 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2063 = (x2062 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2064 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.count._super), 0) * inv_0(x2063));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2065 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2064);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2066 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2067 = (x2066 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2068 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.count._super), 0) * inv_0(x2067));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2069 = (x2063 * x2067);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2070 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg1.count._super), 0) * x2067);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2071 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), addr._super), 0));
ExtVal x2072 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), cycle._super), 0));
ExtVal x2073 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), dataLow._super), 0));
ExtVal x2074 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2075 = (((x2071 + x2072) + x2073) + x2074);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2076 = (x2075 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2077 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), count._super), 0) * inv_0(x2076));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2078 = ((x2065 + x2068) + x2077);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x2078);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2079 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2080 = (((x2079 * (x2069 * x2076)) - (x2070 * x2076)) - ((x2063 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm11._0.arg2.count._super), 0)) * x2076));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2080 - (x2069 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2081 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), addr._super), 0));
ExtVal x2082 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), cycle._super), 0));
ExtVal x2083 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), dataLow._super), 0));
ExtVal x2084 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2085 = (((x2081 + x2082) + x2083) + x2084);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2086 = (x2085 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2087 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), count._super), 0) * inv_0(x2086));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2088 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), addr._super), 0));
ExtVal x2089 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), cycle._super), 0));
ExtVal x2090 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), dataLow._super), 0));
ExtVal x2091 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2092 = (((x2088 + x2089) + x2090) + x2091);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2093 = (x2092 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2094 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), count._super), 0) * inv_0(x2093));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2095 = (x2086 * x2093);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2096 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 1), count._super), 0) * x2093);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2097 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), addr._super), 0));
ExtVal x2098 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), cycle._super), 0));
ExtVal x2099 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), dataLow._super), 0));
ExtVal x2100 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2101 = (((x2097 + x2098) + x2099) + x2100);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2102 = (x2101 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2103 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), count._super), 0) * inv_0(x2102));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2104 = (((x2078 + x2087) + x2094) + x2103);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x2104);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2105 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2106 = (((x2105 * (x2095 * x2102)) - (x2096 * x2102)) - ((x2086 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 2), count._super), 0)) * x2102));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2106 - (x2095 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2107 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), addr._super), 0));
ExtVal x2108 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), cycle._super), 0));
ExtVal x2109 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), dataLow._super), 0));
ExtVal x2110 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2111 = (((x2107 + x2108) + x2109) + x2110);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2112 = (x2111 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2113 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), count._super), 0) * inv_0(x2112));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2114 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), addr._super), 0));
ExtVal x2115 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), cycle._super), 0));
ExtVal x2116 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), dataLow._super), 0));
ExtVal x2117 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2118 = (((x2114 + x2115) + x2116) + x2117);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2119 = (x2118 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2120 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), count._super), 0) * inv_0(x2119));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2121 = (x2112 * x2119);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2122 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 4), count._super), 0) * x2119);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2123 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), addr._super), 0));
ExtVal x2124 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), cycle._super), 0));
ExtVal x2125 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), dataLow._super), 0));
ExtVal x2126 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2127 = (((x2123 + x2124) + x2125) + x2126);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2128 = (x2127 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2129 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), count._super), 0) * inv_0(x2128));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2130 = (((x2104 + x2113) + x2120) + x2129);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x2130);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2131 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2132 = (((x2131 * (x2121 * x2128)) - (x2122 * x2128)) - ((x2112 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 5), count._super), 0)) * x2128));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2132 - (x2121 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2133 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), addr._super), 0));
ExtVal x2134 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), cycle._super), 0));
ExtVal x2135 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), dataLow._super), 0));
ExtVal x2136 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2137 = (((x2133 + x2134) + x2135) + x2136);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2138 = (x2137 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2139 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), count._super), 0) * inv_0(x2138));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2140 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), addr._super), 0));
ExtVal x2141 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), cycle._super), 0));
ExtVal x2142 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), dataLow._super), 0));
ExtVal x2143 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2144 = (((x2140 + x2141) + x2142) + x2143);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2145 = (x2144 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2146 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), count._super), 0) * inv_0(x2145));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2147 = (x2138 * x2145);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2148 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 7), count._super), 0) * x2145);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2149 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), addr._super), 0));
ExtVal x2150 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), cycle._super), 0));
ExtVal x2151 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), dataLow._super), 0));
ExtVal x2152 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2153 = (((x2149 + x2150) + x2151) + x2152);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2154 = (x2153 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2155 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), count._super), 0) * inv_0(x2154));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2156 = (((x2130 + x2139) + x2146) + x2155);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x2156);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2157 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2158 = (((x2157 * (x2147 * x2154)) - (x2148 * x2154)) - ((x2138 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 8), count._super), 0)) * x2154));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2158 - (x2147 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2159 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2160 = (x2159 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2161 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), count._super), 0) * inv_0(x2160));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2162 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2163 = (x2162 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2164 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), count._super), 0) * inv_0(x2163));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2165 = (x2160 * x2163);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2166 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 0), count._super), 0) * x2163);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2167 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2168 = (x2167 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2169 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), count._super), 0) * inv_0(x2168));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2170 = (((x2156 + x2161) + x2164) + x2169);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x2170);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2171 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2172 = (((x2171 * (x2165 * x2168)) - (x2166 * x2168)) - ((x2160 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 1), count._super), 0)) * x2168));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2172 - (x2165 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 2), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2173 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2174 = (x2173 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2175 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), count._super), 0) * inv_0(x2174));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2176 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2177 = (x2176 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2178 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), count._super), 0) * inv_0(x2177));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2179 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 3), count._super), 0) * x2177);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), ((x2170 + x2175) + x2178));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2180 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2181 = (((x2180 * (x2174 * x2177)) - x2179) - (x2174 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm11._arguments_Sha0State.cycleArg), 4), count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2181, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2182 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2182, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else if (to_size_t(LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult._selector), 12), _super), 0))) {
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2183 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2184 = (x2183 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2185 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.count._super), 0) * inv_0(x2184));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2186 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1) + x2185);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2187 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2188 = (x2187 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2189 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.count._super), 0) * inv_0(x2188));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2190 = (x2184 * x2188);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2191 = (LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg1.count._super), 0) * x2188);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2192 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), addr._super), 0));
ExtVal x2193 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), cycle._super), 0));
ExtVal x2194 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), dataLow._super), 0));
ExtVal x2195 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2196 = (((x2192 + x2193) + x2194) + x2195);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2197 = (x2196 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2198 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), count._super), 0) * inv_0(x2197));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2199 = ((x2186 + x2189) + x2198);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), x2199);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2200 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 1));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2201 = (((x2200 * (x2190 * x2197)) - (x2191 * x2197)) - ((x2184 * LOAD(LAYOUT_LOOKUP(arg0, instResult.arm12._0.arg2.count._super), 0)) * x2197));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2201 - (x2190 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2202 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), addr._super), 0));
ExtVal x2203 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), cycle._super), 0));
ExtVal x2204 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), dataLow._super), 0));
ExtVal x2205 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2206 = (((x2202 + x2203) + x2204) + x2205);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2207 = (x2206 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2208 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), count._super), 0) * inv_0(x2207));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2209 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), addr._super), 0));
ExtVal x2210 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), cycle._super), 0));
ExtVal x2211 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), dataLow._super), 0));
ExtVal x2212 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2213 = (((x2209 + x2210) + x2211) + x2212);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2214 = (x2213 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2215 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), count._super), 0) * inv_0(x2214));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2216 = (x2207 * x2214);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2217 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 1), count._super), 0) * x2214);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2218 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), addr._super), 0));
ExtVal x2219 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), cycle._super), 0));
ExtVal x2220 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), dataLow._super), 0));
ExtVal x2221 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2222 = (((x2218 + x2219) + x2220) + x2221);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2223 = (x2222 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2224 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), count._super), 0) * inv_0(x2223));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2225 = (((x2199 + x2208) + x2215) + x2224);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), x2225);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2226 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 0), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2227 = (((x2226 * (x2216 * x2223)) - (x2217 * x2223)) - ((x2207 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 2), count._super), 0)) * x2223));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2227 - (x2216 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2228 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), addr._super), 0));
ExtVal x2229 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), cycle._super), 0));
ExtVal x2230 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), dataLow._super), 0));
ExtVal x2231 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2232 = (((x2228 + x2229) + x2230) + x2231);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2233 = (x2232 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2234 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), count._super), 0) * inv_0(x2233));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2235 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), addr._super), 0));
ExtVal x2236 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), cycle._super), 0));
ExtVal x2237 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), dataLow._super), 0));
ExtVal x2238 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2239 = (((x2235 + x2236) + x2237) + x2238);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2240 = (x2239 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2241 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), count._super), 0) * inv_0(x2240));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2242 = (x2233 * x2240);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2243 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 4), count._super), 0) * x2240);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2244 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), addr._super), 0));
ExtVal x2245 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), cycle._super), 0));
ExtVal x2246 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), dataLow._super), 0));
ExtVal x2247 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2248 = (((x2244 + x2245) + x2246) + x2247);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2249 = (x2248 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2250 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), count._super), 0) * inv_0(x2249));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2251 = (((x2225 + x2234) + x2241) + x2250);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), x2251);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2252 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 1), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2253 = (((x2252 * (x2242 * x2249)) - (x2243 * x2249)) - ((x2233 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 5), count._super), 0)) * x2249));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2253 - (x2242 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2254 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), addr._super), 0));
ExtVal x2255 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), cycle._super), 0));
ExtVal x2256 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), dataLow._super), 0));
ExtVal x2257 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2258 = (((x2254 + x2255) + x2256) + x2257);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2259 = (x2258 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2260 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), count._super), 0) * inv_0(x2259));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2261 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), addr._super), 0));
ExtVal x2262 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), cycle._super), 0));
ExtVal x2263 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), dataLow._super), 0));
ExtVal x2264 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2265 = (((x2261 + x2262) + x2263) + x2264);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2266 = (x2265 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2267 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), count._super), 0) * inv_0(x2266));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2268 = (x2259 * x2266);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2269 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 7), count._super), 0) * x2266);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2270 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), addr._super), 0));
ExtVal x2271 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), cycle._super), 0));
ExtVal x2272 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), dataLow._super), 0));
ExtVal x2273 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2274 = (((x2270 + x2271) + x2272) + x2273);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2275 = (x2274 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2276 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), count._super), 0) * inv_0(x2275));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2277 = (((x2251 + x2260) + x2267) + x2276);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), x2277);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2278 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 2), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2279 = (((x2278 * (x2268 * x2275)) - (x2269 * x2275)) - ((x2259 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 8), count._super), 0)) * x2275));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2279 - (x2268 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2280 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), addr._super), 0));
ExtVal x2281 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), cycle._super), 0));
ExtVal x2282 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), dataLow._super), 0));
ExtVal x2283 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2284 = (((x2280 + x2281) + x2282) + x2283);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2285 = (x2284 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2286 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), count._super), 0) * inv_0(x2285));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2287 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.addr), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), addr._super), 0));
ExtVal x2288 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), cycle._super), 0));
ExtVal x2289 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataLow), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), dataLow._super), 0));
ExtVal x2290 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.memoryArg.dataHigh), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), dataHigh._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:157
ExtVal x2291 = (((x2287 + x2288) + x2289) + x2290);
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2292 = (x2291 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2293 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), count._super), 0) * inv_0(x2292));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2294 = (x2285 * x2292);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2295 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 10), count._super), 0) * x2292);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2296 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2297 = (x2296 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2298 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), count._super), 0) * inv_0(x2297));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2299 = (((x2277 + x2286) + x2293) + x2298);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), x2299);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2300 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 3), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2301 = (((x2300 * (x2294 * x2297)) - (x2295 * x2297)) - ((x2285 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.memoryArg), 11), count._super), 0)) * x2297));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2301 - (x2294 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2302 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2303 = (x2302 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2304 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), count._super), 0) * inv_0(x2303));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2305 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2306 = (x2305 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2307 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), count._super), 0) * inv_0(x2306));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2308 = (x2303 * x2306);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2309 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 1), count._super), 0) * x2306);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2310 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2311 = (x2310 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2312 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), count._super), 0) * inv_0(x2311));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2313 = (((x2299 + x2304) + x2307) + x2312);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), x2313);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2314 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 4), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2315 = (((x2314 * (x2308 * x2311)) - (x2309 * x2311)) - ((x2303 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 2), count._super), 0)) * x2311));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2315 - (x2308 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2316 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2317 = (x2316 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2318 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), count._super), 0) * inv_0(x2317));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2319 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.cycleArg.cycle), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), cycle._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2320 = (x2319 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2321 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), count._super), 0) * inv_0(x2320));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2322 = (x2317 * x2320);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2323 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 4), count._super), 0) * x2320);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2324 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2325 = (x2324 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2326 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), count._super), 0) * inv_0(x2325));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2327 = (((x2313 + x2318) + x2321) + x2326);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), x2327);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2328 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 5), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2329 = (((x2328 * (x2322 * x2325)) - (x2323 * x2325)) - ((x2317 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.cycleArg), 5), count._super), 0)) * x2325));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2329 - (x2322 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 0), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2330 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2331 = (x2330 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2332 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), count._super), 0) * inv_0(x2331));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2333 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2334 = (x2333 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2335 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), count._super), 0) * inv_0(x2334));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2336 = (x2331 * x2334);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2337 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 1), count._super), 0) * x2334);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2338 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2339 = (x2338 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2340 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), count._super), 0) * inv_0(x2339));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2341 = (((x2327 + x2332) + x2335) + x2340);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), x2341);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2342 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 6), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2343 = (((x2342 * (x2336 * x2339)) - (x2337 * x2339)) - ((x2331 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 2), count._super), 0)) * x2339));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2343 - (x2336 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 3), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2344 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2345 = (x2344 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2346 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), count._super), 0) * inv_0(x2345));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2347 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2348 = (x2347 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2349 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), count._super), 0) * inv_0(x2348));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2350 = (x2345 * x2348);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2351 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 4), count._super), 0) * x2348);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2352 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2353 = (x2352 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2354 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), count._super), 0) * inv_0(x2353));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2355 = (((x2341 + x2346) + x2349) + x2354);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), x2355);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2356 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 7), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2357 = (((x2356 * (x2350 * x2353)) - (x2351 * x2353)) - ((x2345 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 5), count._super), 0)) * x2353));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2357 - (x2350 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 6), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2358 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2359 = (x2358 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2360 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), count._super), 0) * inv_0(x2359));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2361 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2362 = (x2361 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2363 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), count._super), 0) * inv_0(x2362));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2364 = (x2359 * x2362);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2365 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 7), count._super), 0) * x2362);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2366 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2367 = (x2366 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2368 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), count._super), 0) * inv_0(x2367));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2369 = (((x2355 + x2360) + x2363) + x2368);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), x2369);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2370 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 8), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2371 = (((x2370 * (x2364 * x2367)) - (x2365 * x2367)) - ((x2359 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 8), count._super), 0)) * x2367));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2371 - (x2364 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 9), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2372 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2373 = (x2372 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2374 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), count._super), 0) * inv_0(x2373));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2375 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2376 = (x2375 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2377 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), count._super), 0) * inv_0(x2376));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2378 = (x2373 * x2376);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2379 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 10), count._super), 0) * x2376);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2380 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2381 = (x2380 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2382 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), count._super), 0) * inv_0(x2381));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2383 = (((x2369 + x2374) + x2377) + x2382);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), x2383);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2384 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 9), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2385 = (((x2384 * (x2378 * x2381)) - (x2379 * x2381)) - ((x2373 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 11), count._super), 0)) * x2381));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2385 - (x2378 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 12), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2386 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2387 = (x2386 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2388 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), count._super), 0) * inv_0(x2387));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2389 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2390 = (x2389 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2391 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), count._super), 0) * inv_0(x2390));
// zirgen/dsl/passes/GenerateAccum.cpp:217
ExtVal x2392 = (x2387 * x2390);
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2393 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 13), count._super), 0) * x2390);
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2394 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2395 = (x2394 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2396 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), count._super), 0) * inv_0(x2395));
// zirgen/dsl/passes/GenerateAccum.cpp:241
ExtVal x2397 = (((x2383 + x2388) + x2391) + x2396);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), x2397);
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2398 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 10), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2399 = (((x2398 * (x2392 * x2395)) - (x2393 * x2395)) - ((x2387 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 14), count._super), 0)) * x2395));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ((x2399 - (x2392 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 15), count._super), 0))), "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2400 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2401 = (x2400 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2402 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), count._super), 0) * inv_0(x2401));
// zirgen/dsl/passes/GenerateAccum.cpp:146
ExtVal x2403 = (LOAD_EXT(LAYOUT_LOOKUP(x3, randomness.argU8.val), 0) * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), val._super), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:238
ExtVal x2404 = (x2403 + LOAD_EXT(LAYOUT_LOOKUP(x3, randomness._offset), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:240
ExtVal x2405 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), count._super), 0) * inv_0(x2404));
// zirgen/dsl/passes/GenerateAccum.cpp:223
ExtVal x2406 = (LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 16), count._super), 0) * x2404);
// zirgen/dsl/passes/GenerateAccum.cpp:189
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), ((x2397 + x2402) + x2405));
// zirgen/dsl/passes/GenerateAccum.cpp:177
ExtVal x2407 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 11), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:180
ExtVal x2408 = (((x2407 * (x2401 * x2404)) - x2406) - (x2401 * LOAD(LAYOUT_LOOKUP(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(arg0, instResult.arm12._arguments_BigInt0State.argU8), 17), count._super), 0)));
// zirgen/dsl/passes/GenerateAccum.cpp:182
EQZ(x2408, "zirgen/dsl/passes/GenerateAccum.cpp:182");
// zirgen/dsl/passes/GenerateAccum.cpp:122
STORE_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:124
ExtVal x2409 = (LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 19), 0) - LOAD_EXT(LAYOUT_SUBSCRIPT(LAYOUT_LOOKUP(layout1, columns), 12), 0));
// zirgen/dsl/passes/GenerateAccum.cpp:125
EQZ(x2409, "zirgen/dsl/passes/GenerateAccum.cpp:125");
x5 = x4;
} else {
   assert(0 && "Reached unreachable mux arm");
}
return x4;
}
void step_TopAccum(ExecContext& ctx,MutableBuf accum0, MutableBuf data1, GlobalBuf mix2)   {
// zirgen/dsl/passes/GenerateAccum.cpp:526
BoundLayout<TopLayout> x3 = BIND_LAYOUT(kLayout_Top, data1);
BoundLayout<LayoutAccumLayout> x4 = BIND_LAYOUT(kLayout_TopAccum, accum0);
ComponentStruct x5 = exec_TopAccum(ctx,x3, x4, mix2);
return ;
}

} // namespace risc0::circuit::rv32im_v2::cpu
